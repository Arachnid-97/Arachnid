{
    "version": "https://jsonfeed.org/version/1",
    "title": "命运转轮 • All posts by \"ide\" tag",
    "description": "不曾亏欠, 不曾辜负, 如此足矣",
    "home_page_url": "https://arachnid.cc",
    "items": [
        {
            "id": "https://arachnid.cc/summary-of-keil-tool-use/",
            "url": "https://arachnid.cc/summary-of-keil-tool-use/",
            "title": "关于 Keil 的一些总结性使用",
            "date_published": "2024-01-04T01:28:47.296Z",
            "content_html": "<h1 id=\"for-c51\"><a class=\"anchor\" href=\"#for-c51\">#</a> for C51</h1>\n<h2 id=\"数据存储类型dataidataxdatacode\"><a class=\"anchor\" href=\"#数据存储类型dataidataxdatacode\">#</a> 数据存储类型（data,idata,xdata,code）</h2>\n<p>参考：  <code>Keil &gt; Help &gt; uVision Help &gt; Cx51 Compiler User’s Guide &gt; Language Extensions &gt; Memory Types</code></p>\n<table>\n<thead>\n<tr>\n<th>关键字</th>\n<th>存储空间</th>\n<th>地址范围</th>\n<th>访问方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>内部 RAM（最大 128 bytes）</td>\n<td>0x00~0x7F</td>\n<td>直接寻址</td>\n</tr>\n<tr>\n<td>idata</td>\n<td>内部 RAM（最大 256 bytes）</td>\n<td>0x00~0xFF</td>\n<td>间接寻址</td>\n</tr>\n<tr>\n<td>bdata</td>\n<td>内部 RAM（指定 16 bytes）</td>\n<td>0x20~0x2F</td>\n<td>位寻址 / 直接寻址</td>\n</tr>\n<tr>\n<td>pdata</td>\n<td>扩展 RAM（最大 256 bytes）</td>\n<td>0x00~0xFF</td>\n<td>间接寻址</td>\n</tr>\n<tr>\n<td>xdata</td>\n<td>扩展 RAM（最大 64K bytes）</td>\n<td>0x0000~0xFFFF</td>\n<td>间接寻址</td>\n</tr>\n<tr>\n<td>code</td>\n<td>Flash（最大 64K bytes）</td>\n<td>0x0000~0xFFFF</td>\n<td>间接寻址</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>data</p>\n<p>data 内存类型只能用于声明变量，不能声明函数。</p>\n<p>该内存使用 8 位地址直接寻址片上 RAM。</p>\n<p>优点是访问速度最快，缺点是数据量的大小受到限制（只有 128 字节或更少）。</p>\n</li>\n<li>\n<p>idata</p>\n<p>idata 内存类型只能用于声明变量，不能声明函数。</p>\n<p>该内存使用 8 位地址间接寻址片上 RAM。</p>\n<p>最大可访问 256 字节，其中低位上的数据空间地址和 data 的相应地址重叠，只是访问方式不同。</p>\n</li>\n<li>\n<p>bdata</p>\n<p>bdata 内存类型只能用于声明变量，不能声明函数。</p>\n<p>bdata 可使用 8 位地址直接访问，属于片上位可寻址 RAM。</p>\n<p>用 bdata 类型声明的变量是位可寻址的，可以使用位指令进行读写。</p>\n</li>\n<li>\n<p>pdata</p>\n<p>pdata 内存类型只能用于声明变量，不能声明函数。</p>\n<p>该内存使用 8 位地址间接寻址以 256 字节为一页的 扩展 RAM。</p>\n<p>pdata 在大小上是有限的（最大 256 字节）。</p>\n</li>\n<li>\n<p>xdata</p>\n<p>xdata 内存类型只能用于声明变量，不能声明函数。</p>\n<p>该内存使用 16 位地址间接寻址扩展 RAM。</p>\n<p>xdata 的容量限制为 64K 或更少。</p>\n</li>\n<li>\n<p>code</p>\n<p>code 内存类型可用于声明常量或函数。</p>\n<p>该存储器使用 16 位地址进行片上或外部扩展访问。</p>\n<p>code 内存限制为 64K。</p>\n<ul>\n<li>\n<p>对于常量 (ROM 变量)。对象限制为 64K，并且不能跨越 64K 边界。代码声明的常量变量位于 code 内存类中。</p>\n</li>\n<li>\n<p>对于程序代码 (函数)。程序函数默认存储在 code 内存类中。代码内存类型说明符不是必需的。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"const-和-code-的修饰使用\"><a class=\"anchor\" href=\"#const-和-code-的修饰使用\">#</a> const 和 code 的修饰使用</h2>\n<p>参考：  <code>Keil &gt; Help &gt; uVision Help &gt; Cx51 Compiler User’s Guide &gt; Language Extensions &gt; Type Qualifiers &gt; const</code></p>\n<p>const：const 关键字所修饰的变量（注意是变量而非常量），是用来表明该变量的操作行为为只读处理，表示其值在程序执行期间不可改变（即程序员向编译器承诺这个变量不会修改），但你说它只读不可修改，用指针指向该变量然后访问修改，它却又可以修改，所以一般严谨的来说它是直接访问不可修改。前面也说了，const 修饰后的并非常量，因此在 C51 中存储在 RAM 上，至于在哪个存储区域 data? idata? xdata? 跟你所指定的分配或基于内存模型配置进行隐式的分配有关。</p>\n<p>code：code 用于声明存储在只读存储器中。code 关键字通常与函数或程序的定义一起使用，也可以用来修饰常量，限制其只能存储在 ROM 中，从而节省了宝贵的 RAM 资源。</p>\n<p>总结：</p>\n<ol>\n<li>const 声明的对象被 Keil C51 存放在数据区 RAM 中 （可以为 data、idatd、xdata，具体看分配）；</li>\n<li>要想将变量存放到代码区 ROM 中以节省 RAM 资源，需更换为 code 关键字去声明对象；</li>\n<li>虽然可以使用指针访问并修改 const 声明的对象，但最好不要这么做，因为 Keil C51 不一定会如程序员预想那样处理代码；</li>\n<li>无论是 const 还是 code 修饰的对象，都具有不可修改的特性，最大的区别可能是一个存放在数据区一个存放在代码区，因此在使用这些修饰符时，需要根据实际需求选择合适的修饰符。</li>\n</ol>\n<h2 id=\"printf-输出打印\"><a class=\"anchor\" href=\"#printf-输出打印\">#</a> printf 输出打印</h2>\n<p>在 C51 上，printf 的转换说明符跟常用的是有区别的，如果配置不当，那么打印输出的结果是错乱的（eg：char 使用 '% d' 转换）；既然不一样，那么对应的数据类型是分别使用哪些转换说明符呢？</p>\n<p>参考：  <code>Keil &gt; Help &gt; uVision Help &gt; Cx51 Compiler User’s Guide &gt; Library Reference &gt; Reference &gt; printf</code></p>\n<table>\n<thead>\n<tr>\n<th>转换说明符</th>\n<th>变量类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%bd</td>\n<td>char</td>\n<td>带符号字符型</td>\n</tr>\n<tr>\n<td>%hd</td>\n<td>short</td>\n<td>带符号短整型</td>\n</tr>\n<tr>\n<td>%d</td>\n<td>int</td>\n<td>带符号整形</td>\n</tr>\n<tr>\n<td>%ld</td>\n<td>long int</td>\n<td>带符号长整型</td>\n</tr>\n<tr>\n<td>%bu</td>\n<td>unsigned char</td>\n<td>无符号字符型</td>\n</tr>\n<tr>\n<td>%hu</td>\n<td>unsigned short</td>\n<td>无符号短整型</td>\n</tr>\n<tr>\n<td>%u</td>\n<td>unsigned int</td>\n<td>无符号整型</td>\n</tr>\n<tr>\n<td>%lu</td>\n<td>unsigned long int</td>\n<td>无符号长整形</td>\n</tr>\n<tr>\n<td>%bx</td>\n<td>unsigned char</td>\n<td>无符号十六进制字符型</td>\n</tr>\n<tr>\n<td>%hx</td>\n<td>unsigned short</td>\n<td>无符号十六进制短整型</td>\n</tr>\n<tr>\n<td>%x</td>\n<td>unsigned int</td>\n<td>无符号十六进制整型</td>\n</tr>\n<tr>\n<td>%lx</td>\n<td>unsigned long int</td>\n<td>无符号十六进制长整型</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">tst_printf</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">char</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> b  <span class=\"token operator\">=</span> <span class=\"token number\">12365</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">long</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0x7FFFFFFF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> x <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> y  <span class=\"token operator\">=</span> <span class=\"token number\">54321</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> z <span class=\"token operator\">=</span> <span class=\"token number\">0x4A6F6E00</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">float</span> g <span class=\"token operator\">=</span> <span class=\"token number\">22.95</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">char</span> buf <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Test String\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"char %bd int %d long %ld\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Uchar %bu Uint %u Ulong %lu\\n\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"xchar %bx xint %x xlong %lx\\n\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"String %s is at address %p\\n\"</span><span class=\"token punctuation\">,</span>buf<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"%f != %g\\n\"</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"%*f != %*g\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"内存池\"><a class=\"anchor\" href=\"#内存池\">#</a> 内存池</h2>\n<p>在 C51 中，malloc 等内存管理函数并不能像在 PC 上一样直接调用，这涉及到了内存池的概念。</p>\n<p>要想使用内存管理操作，这里需要 3 个步骤：</p>\n<ol>\n<li>声明一个合适的存储空间；</li>\n<li>利用  <code>init_mempool()</code>  初始化内存池；</li>\n<li>调用相关的内存管理 API。</li>\n</ol>\n<p>参考：  <code>Keil &gt; Help &gt; uVision Help &gt; Cx51 Compiler User’s Guide &gt; Library Reference &gt; Reference &gt; init_mempool</code></p>\n<p>eg：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">char</span> xdata mempool<span class=\"token punctuation\">[</span><span class=\"token number\">512</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">tst_init_mempool</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">char</span> xdata <span class=\"token operator\">*</span>str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">init_mempool</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mempool<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>mempool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 初始化内存池</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  str <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 申请内存</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'\\0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">free</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 释放内存</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"for-mdk\"><a class=\"anchor\" href=\"#for-mdk\">#</a> for MDK</h1>\n<h2 id=\"设置-noinit\"><a class=\"anchor\" href=\"#设置-noinit\">#</a> 设置 noinit</h2>\n<p>设置 noinit 的 ram 区域有什么用？</p>\n<p>对于 noinit 的 ram，等同于不断电的 EEPROM，可以在非上电复位后，依然保存该值，你可能会说，不是有备用域寄存器吗，但是你是否想到这样操作起来会比较麻烦，需要配置相应的操作寄存器；而对于直接把 ram noinit，那么可以跟以前一样直接读写数据，也不怕非上电复位导致数据清零；常见的例子有 bootloader 带参数信息跳转、强制复位前的信息保留等。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXJtLmNvbS9kb2N1bWVudGF0aW9uL2thMDAzMDQ2L2xhdGVzdA==\">ARM: Uninialized Variables Get Initialized</span></p>\n<p><strong>1、AC5 编译器</strong></p>\n<p>可以在分散文件中定义  <code>UNINIT</code>  的分区段：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LR_IROM1 0x08000000 0x00080000  &#123; ; load region size_region</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  ER_IROM1 0x08000000 0x00080000  &#123; ; load address = execution address</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   *.o (RESET, +First)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   *(InRoot$$Sections)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   .ANY (+RO)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  RW_IRAM1 0x20000000 UNINIT 0x00000100  &#123; ;no init section</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        *(NO_INIT)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  RW_IRAM2 0x20000100 0x0000FFF0  &#123; ;all other rw data</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        .ANY(+RW +ZI)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  &#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>然后再在 c 代码上面调用指定：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span>  value<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">__attribute__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">section</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NO_INIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> zero_init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>2、AC6 编译器</strong></p>\n<p>也可以像下面这样利用 Target 配置指定地址：</p>\n<p><img data-src=\"/summary-of-keil-tool-use/QQ%E6%88%AA%E5%9B%BE20240104152114.png\" alt=\"QQ截图20240104152114\"></p>\n<p><strong>3、区别</strong></p>\n<p>如果使用分散表来设置，那么 AC5 跟 AC6 调用是有不同的：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// Arm Compiler 5</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>unsigned long NI_longVar __attribute__( ( section( \"NoInit\"),zero_init) ) ;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>// Arm Compiler 6</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>unsigned long NI_longVar __attribute__( ( section( \".bss.NoInit\")) ) ;</pre></td></tr></table></figure><p>而如果是直接指定内存地址：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// Arm Compiler 5</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>static uint32_t BootFlag __attribute__((section(\".ARM.__at_0x2001FFFC\")));</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>// Arm Compiler 6</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>static uint32_t BootFlag __attribute__((section(\".bss.ARM.__at_0x2001FFFC\")));</pre></td></tr></table></figure><p>这种方法需要在分散表中定义  <code>UNINIT</code>  或在 Target 配置上勾选  <code>NoInit</code>  。</p>\n<h2 id=\"半主机模式\"><a class=\"anchor\" href=\"#半主机模式\">#</a> 半主机模式</h2>\n<p>在嵌入式开发中，少不了  <code>printf</code>  等 C 库函数操作，一般来说，这些都是标准库上的操作，然在资源紧凑的单片机中，能不引入完整的 C 标准库就尽量不引入；而 keil 中，提供紧凑型的 C 库，称之为  <code>MicroLIB</code>  ，因此我们在建项目的时候都会在：工程属性的 “Target “ -&gt; ” Code Generation “ 中勾选 ” Use MicroLIB “ 选项，这样避免在以后中使用了 printf、sprintf 等函数而出现异常，同时由于  <code>MicroLIB</code>  库是由官方亲自进行裁剪过，所以相对于 C 标准库编译出来的大小会小很多。</p>\n<p>虽说可以使用  <code>MicroLIB</code>  库，但由于裁剪的问题，注定它无法实现一些比较高级的功能，或者无法重定义该 I/O 功能，所以在某些时候，必须使用 C 标准库，那么在 keil 中如何实现，这就是下文要讨论的了。</p>\n<p>在应用程序代码中经常使用标准 I/O 库函数，如 printf ()、scanf () 或 fgetc () 来执行输入 / 输出操作。 这些函数在标准 ARM 编译器 c 运行时库中的结构是：</p>\n<p><img data-src=\"/summary-of-keil-tool-use/struct_comp_function.png\" alt></p>\n<p>这样一来，要重新定位输入 / 输出，您可以：</p>\n<ul>\n<li>避免高级库函数。</li>\n<li>重新定义底层库函数。</li>\n<li>重新定义系统 I/O 功能。</li>\n</ul>\n<p>而对于重新定义低级库函数还是系统 I/O 函数是更好的解决方案，这取决于您的用例。例如，UART 每次只写一个字符，而默认的 fputc () 使用缓冲，因此重新定义不带缓冲区的函数可能适合 UART。但是，在可能进行缓冲区操作的地方，重新定义系统 I/O 函数可能更合适。</p>\n<p>半主机：Semihosting 是一种机制，通过调试器使 ARM 目标上运行的代码能够与主机上的输入 / 输出设施通信进行交互。当目标板脱离调试器单独运行时，则需要退出半主机模式，否则使得设备运行时会进入软件中断 BAEB 处。</p>\n<p>为了能让目标板在单独运行时进行输入 / 输出，而不进入软件中断 BAEB 处。因此在 keil 中，可以使用如下操作禁止进入半主机模式：</p>\n<ul>\n<li>\n<p>In C source code：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">__ARMCC_VERSION <span class=\"token operator\">>=</span> <span class=\"token number\">6000000</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">//https://developer.arm.com/documentation/100073/0622/The-Arm-C-and-C---Libraries/Support-for-building-an-application-with-the-C-library/Indirect-semihosting-C-library-function-dependencies</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">__asm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".global __use_no_semihosting\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">elif</span> <span class=\"token expression\">__ARMCC_VERSION <span class=\"token operator\">>=</span> <span class=\"token number\">5000000</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// https://developer.arm.com/documentation/dui0475/m/the-arm-c-and-c---libraries/support-for-building-an-application-with-the-c-library/indirect-semihosting-c-library-function-dependencies?lang=en</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">import</span><span class=\"token punctuation\">(</span>__use_no_semihosting<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">error</span> <span class=\"token expression\">Unsupported compiler</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr></table></figure></li>\n<li>\n<p>In armasm assembly language source code：</p>\n<pre><code class=\"language-asm\">IMPORT __use_no_semihosting\n</code></pre>\n</li>\n</ul>\n<p>在禁用半主机模式后，对于标准 C 库一般会重定义实现以下 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXJtLmNvbS9kb2N1bWVudGF0aW9uL2R1aTAyMzIvYi90aGUtYy1hbmQtYy0tLWxpYnJhcmllcy90YWlsb3JpbmctdGhlLWlucHV0LW91dHB1dC1mdW5jdGlvbnMvZGVwZW5kZW5jaWVzLW9uLWxvdy1sZXZlbC1mdW5jdGlvbnM/bGFuZz1lbg==\">Dependencies on low-level functions</span> 函数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">__FILE</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> handle<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Add whatever you need here */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * Re-implementing the printf family. </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * The printf family consists of _printf(), printf(), _fprintf(), fprintf(), vprintf(), and vfprintf().</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// https://www.keil.com/support/man/docs/armlib/armlib_chr1358938930943.htm</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>FILE __stdout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">ferror</span><span class=\"token punctuation\">(</span>FILE <span class=\"token operator\">*</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/* Your implementation of ferror */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">fputc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ch<span class=\"token punctuation\">,</span> FILE <span class=\"token operator\">*</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">/* </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * Re-implementing the scanf family. </pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * The scanf() family consists of scanf() and fscanf().</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// https://www.keil.com/support/man/docs/armlib/armlib_chr1358938931161.htm</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>FILE __stdin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">__backspace</span><span class=\"token punctuation\">(</span>FILE <span class=\"token operator\">*</span>f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// https://www.keil.com/support/man/docs/armlib/armlib_chr1358938931957.htm</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span>FILE <span class=\"token operator\">*</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">_ttywrch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// https://www.keil.com/support/man/docs/armlib/armlib_chr1359122862227.htm</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">_sys_exit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">;</span> <span class=\"token comment\">/* endless loop */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">// https://www.keil.com/support/man/docs/armlib/armlib_chr1359122859512.htm</span></pre></td></tr></table></figure><p>附：</p>\n<p><strong>Indirect Semihosting 依赖函数表：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Function</th>\n<th>Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>__user_setup_stackheap()</code></td>\n<td>Sets up and returns the locations of the stack and the heap.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>__raise()</code></td>\n<td>Catching, handling, or diagnosing C library exceptions, without C signal support. (Tailoring error signaling, error handling, and program exit.)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>__default_signal_handler()</code></td>\n<td>Catching, handling, or diagnosing C library exceptions, with C signal support. (Tailoring error signaling, error handling, and program exit.)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>__Heap_Initialize()</code></td>\n<td>Choosing or redefining memory allocation. Avoiding the heap and heap-using C library functions supplied by Arm®.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>ferror()</code>  &lt;br/&gt; <code>fputc()</code>  &lt;br/&gt; <code>__stdout</code></td>\n<td>Reimplementing the  <code>printf</code>  family. (Tailoring input/output functions in the C and C++ libraries.).</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>__backspace()</code>  &lt;br/&gt; <code>fgetc()</code>  &lt;br/&gt; <code>__stdin</code></td>\n<td>Reimplementing the  <code>scanf</code>  family. (Tailoring input/output functions in the C and C++ libraries.).</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>fwrite()</code>  &lt;br/&gt; <code>fputs()</code>  &lt;br/&gt; <code>puts()</code>  &lt;br/&gt; <code>fread()</code>  &lt;br/&gt; <code>fgets()</code>  &lt;br/&gt; <code>gets()</code>  &lt;br/&gt; <code>ferror()</code></td>\n<td>Reimplementing the stream output family. (Tailoring input/output functions in the C and C++ libraries.).</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Direct Semihosting 依赖函数表：</strong></p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>__user_initial_stackheap()</code></td>\n<td>Sets up and returns the locations of the stack and the heap. If you are using a scatter file at the link stage, you might have to re-implement this function. &lt;br/&gt;The linker issues an error when no semihosting is requested and  <code>__user_initial_stackheap()</code>  is not re-implemented.</td>\n</tr>\n<tr>\n<td><code>_sys_exit()</code>  &lt;br/&gt; <code>_ttywrch()</code></td>\n<td>Error signaling, error handling, and program exit.</td>\n</tr>\n<tr>\n<td><code>_sys_command_string()</code>  &lt;br/&gt; <code>_sys_close()</code>  &lt;br/&gt; <code>_sys_iserror()</code>  &lt;br/&gt; <code>_sys_istty()</code>  &lt;br/&gt; <code>_sys_flen()</code>  &lt;br/&gt; <code>_sys_open()</code>  &lt;br/&gt; <code>_sys_read()</code>  &lt;br/&gt; <code>_sys_seek()</code>  &lt;br/&gt; <code>_sys_write()</code>  &lt;br/&gt; <code>_sys_tmpnam()</code></td>\n<td>Tailoring input/output functions in the C and C++ libraries.</td>\n</tr>\n<tr>\n<td><code>clock()</code>  &lt;br/&gt; <code>_clock_init()</code>  &lt;br/&gt; <code>remove()</code>  &lt;br/&gt; <code>rename()</code>  &lt;br/&gt; <code>system()</code>  &lt;br/&gt; <code>time()</code></td>\n<td>Tailoring other C library functions.</td>\n</tr>\n</tbody>\n</table>\n<p>参考：</p>\n<p>AC5：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXJtLmNvbS9kb2N1bWVudGF0aW9uL2R1aTA0NzUvbQ==\">https://developer.arm.com/documentation/dui0475/m</span></p>\n<p>AC6：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXJtLmNvbS9kb2N1bWVudGF0aW9uLzEwMDA3My8wNjIy\">https://developer.arm.com/documentation/100073/0622</span></p>\n",
            "tags": [
                "IDE"
            ]
        },
        {
            "id": "https://arachnid.cc/SDCC-develop/",
            "url": "https://arachnid.cc/SDCC-develop/",
            "title": "SDCC 编译器 + VSCode 开发",
            "date_published": "2020-10-27T13:06:19.000Z",
            "content_html": "<blockquote>\n<p>SDCC 是一个小型设备的 C 语言编译器，该编译器支持标准 C 语言；相对于 GCC 编译器来说可能知名度不是很高，但它跟 GCC 一样，是跨平台，并且遵循 GPL 开源协议。本次实验是使用 nuvoton 的 MS51 系列单片机来操作（基于 8051 内核）</p>\n</blockquote>\n<p>sdcc 官方网址：<span class=\"exturl\" data-url=\"aHR0cDovL3NkY2Muc291cmNlZm9yZ2UubmV0Lw==\">http://sdcc.sourceforge.net/</span></p>\n<p>Wiki 主页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcC9zZGNjL3dpa2kvSG9tZS8=\">https://sourceforge.net/p/sdcc/wiki/Home/</span></p>\n<h1 id=\"关于-sdcc\"><a class=\"anchor\" href=\"#关于-sdcc\">#</a> 关于 SDCC</h1>\n<p>SDCC 是可重定目标的、优化的标准 C（ANSI C89，ISO C99，ISO C11）编译器套件，针对的是基于 Intel MCS51 的微处理器（8031、8032、8051、8052 等），Maxim（以前为达拉斯）DS80C390 变体，飞思卡尔（ 基于 HC08（hc08，s08），基于 Zilog Z80 的 MCU（z80，z180，gbz80，Rabbit 2000/3000，Rabbit 3000A，TLCS-90），Padauk（pdk14，pdk15）和 STMicroelectronics STM8。</p>\n<p>在安装了 SDCC 后，通过指令查看版本号可以看到它所支持的设备类型：</p>\n<p><img data-src=\"/SDCC-develop/image-20201027210643106.png\" alt=\"image-20201027210643106\"></p>\n<p>然后，这里有个帖子有讨论 SDCC 的一些相关东西，而且好像（我也不确定）SDCC 的开发者也在里面，感兴趣的可以看一下：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93YXAubmV3c210aC5uZXQvYXJ0aWNsZS85MDVlYjI3ZGRkZjgyOWYxNWM4MTA3NzIxNWQ2NjI4ND90aXRsZT0lRTclOTQlQjUlRTglQjclQUYlRTglQUUlQkUlRTglQUUlQTElRTQlQjglOEUlRTglQjAlODMlRTglQUYlOTUmYW1wO2Zyb209c2VhcmNo\">https://wap.newsmth.net/article/905eb27dddf829f15c81077215d66284?title = 电路设计与调试 &amp; from=search</span></p>\n<p>SDCC 较于 Keil 来说，它对 C 语法的严谨度是很高的，更像一个标准的 C 语言编译器，并不会像 Keil 那样把一些 warning 去除掉，自动帮你优化；前面说了， SDCC 是一个好的编译器，可优化方面稍微有点不够完美，以至于代码生成的体积还是比 Keil C51 大一些（是不是我还有些优化指令没 get 到呢？）。</p>\n<h1 id=\"安装及环境配置\"><a class=\"anchor\" href=\"#安装及环境配置\">#</a> 安装及环境配置</h1>\n<p><strong>1、 SDCC</strong></p>\n<p>软件的下载路径在上面的 sdcc 主页上有对应的接口，只需要下载相关的平台程序包安装就好了，安装完成后添加系统环境变量这个就不用多说了，最后就  <code>sdcc -v</code>  测试检验。就这么简单。。。</p>\n<p><strong>2、 MinGW-w64</strong></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvbWluZ3ctdzY0L2ZpbGVzL21pbmd3LXc2NC9taW5ndy13NjQtcmVsZWFzZS8=\">https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/</span></p>\n<p>安装完成后需要添加系统环境变量，可以利用 cmd 命令： <code>gcc -v</code>  测试。</p>\n<p><strong>3、</strong> <strong>MSYS2</strong> 或者 <strong>Git</strong>（只要支持 shell 命令的终端控制台就行）</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tc3lzMi5vcmcv\">msys2 下载 &lt;-- 自戳</span></p>\n<p>Git 自行搜索下载。</p>\n<p><strong>2、 VSCode</strong></p>\n<p>VSCode 环境部署可以看之前的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTkyMDg0L2FydGljbGUvZGV0YWlscy8xMDg4OTIxNjk=\">STM32 开发之 VS Code + gcc 环境编译</span> 的第三节，然后如果你懂得配置 VSCode 的配置项的话，那么你可以跳过下面的配置操作自己写。</p>\n<ul>\n<li>\n<p>c_cpp_properties.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C51\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">\"includePath\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\t\t\t<span class=\"token comment\">// 你的工程中存放 include 的文件夹路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/**\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/App\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Libraries/Device/Include\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Libraries/StdDriver/inc\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"defines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token string\">\"_DEBUG\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token string\">\"UNICODE\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token string\">\"_UNICODE\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">\"compilerPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\\\Program Files\\\\SDCC\\\\bin\\\\sdcc.exe\"</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">//sdcc bin 路径</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"cStandard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gnu18\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token property\">\"cppStandard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gnu++14\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token property\">\"intelliSenseMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gcc-x64\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>tasks.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// for the documentation about the tasks.json format</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"make\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token string\">\"target=$&#123;fileBasenameNoExtension&#125;\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token property\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token property\">\"isDefault\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>settings.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"files.encoding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gb2312\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"files.autoGuessEncoding\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"C_Cpp.errorSquiggles\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Enabled\"</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 语法错误</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"files.associations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token property\">\"main.h\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/* 终端在 Windows 上使用的 shell 的路径 */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">\"terminal.integrated.shell.windows\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"sdcc规则仅对于-mcs51说明\"><a class=\"anchor\" href=\"#sdcc规则仅对于-mcs51说明\">#</a> SDCC 规则（仅对于 MCS51 说明）</h1>\n<p><strong>1、支持的数据类型</strong></p>\n<p><img data-src=\"/SDCC-develop/image-20201027235219085.png\" alt=\"image-20201027235219085\"></p>\n<p><strong>2、存储类型</strong></p>\n<p><img data-src=\"/SDCC-develop/image-20201027235506151.png\" alt=\"image-20201027235506151\"></p>\n<p>相对于 Keil，其存储类型关键字加上了前缀 ’ __ ' 双下划线，这也是 SDCC 的特色风格。</p>\n<p><code>__data</code>  ：这是小内存模式的默认 (通用) 地址空间，声明的变量将被放在 8051 内核的直接寻址 RAM 中。</p>\n<p><code>__idata</code>  ：这个地址空间中的变量将被分配到 8051 的内部 RAM 的间接可寻址部分。</p>\n<p><code>__pdata</code>  ：存储类型 pdata 用于访问分页的外部数据存储器。</p>\n<p><code>__xdata</code>  ：这个地址空间中的变量将被放在外部 RAM 中。</p>\n<p><code>__code</code>  ：存放程序代码的内存地址空间。</p>\n<p><strong>3、存储器模式</strong></p>\n<p>SDCC 支持四种存储器模式：(small, medium, large, huge)</p>\n<p>采用 SDCC 编译时，默认为小模式。如果要强制 SDCC 使用特定的存储器模式，可使用以下命令行参数（在手册的 P3.3.6 章节可以查询得到）：</p>\n<p><img data-src=\"/SDCC-develop/image-20201029212546249.png\" alt=\"image-20201029212546249\"></p>\n<p>类似于 Keil 的这个选项（只不过 Keil 是 GUI 操作，SDCC 是命令操作）：</p>\n<p><img data-src=\"/SDCC-develop/image-20201029212824145.png\" alt=\"image-20201029212824145\"></p>\n<p>关于不同模式下变量的存储位置不一样，可以查阅手册 P3.13 章节；总的来说，对于中（medium）、大（large）、巨大（huge）存储模式来说，所有未指定内部命名地址空间而声明的变量都将分配到外部 RAM 中，这包括所有参数和局部变量（用于不可重入函数），中型模式使用 pdata，大型模式使用 xdata；而小内存模式（small）则默认存放在 data。</p>\n<p><strong>4、bit 和 sbit 关键字</strong></p>\n<p>bit 和 int、char 之类的差不多，只不过 char = 8 位，bit = 1 位；</p>\n<p>sbit 是对应可位寻址空间的一个位。</p>\n<p>同样的，在 SDCC 这里加上了前缀 ’ __ ’  双下划线，变成  <code>__bit</code> 、 <code>__sbit</code></p>\n<p><strong>5、SFR（特殊功能寄存器）</strong></p>\n<p>与 bit 关键字类似，表示命名地址空间，用于描述 8051 的特殊函数寄存器和特殊位变量。</p>\n<p>eg：</p>\n<p>    __sfr __at (0x80) P0;\t\t\t/* special function register P0 at location 0x80 */</p>\n<p><strong>6、绝对寻址</strong></p>\n<p>SDCC 支持采用  <code>__at</code>  关键字表示绝对寻址。</p>\n<p><strong>7、内嵌汇编</strong></p>\n<p>SDCC 完全支持内嵌汇编。使用该功能时，汇编代码应嵌在  <code>__asm</code>  和  <code>__endasm</code>  标识符之间。</p>\n<p><strong>8、编译生成文件</strong></p>\n<ul>\n<li>xxx.asm：程序的汇编文件。</li>\n<li>xxx.lst：程序的列表文件。</li>\n<li>xxx.rst：被链接器更新的列表文件。</li>\n<li>xxx.sym：由链接器生成的符号清单。</li>\n<li>xxx.rel：由汇编器生成的对象文件，提供给链接器使用。</li>\n<li>xxx.map：被链接器更新的最终存储器映射。</li>\n<li>xxx.mem：内存的使用情况摘要。</li>\n<li>xxx.ihx：Intel 十六进制格式的加载模块。该文件必须被下载到微控制器中。</li>\n</ul>\n<h1 id=\"sdcc头文件处理\"><a class=\"anchor\" href=\"#sdcc头文件处理\">#</a> SDCC 头文件处理</h1>\n<p>前面说了，sdcc 的非标关键字是带 ‘ __ ' 双下滑线的，但是 MS51 的官方 SDK 包中，寄存器寻址的关键字全是 keil 格式的，这就需要转换过来；如果是一些成熟的 8051 内核单片机，那么你可以在 sdcc 的安装路径 ...\\SDCC\\include\\mcs51 下找到对应的芯片头文件，若是没有，那么就要自己进行格式转换了。sdcc 格式转换，你可以去上网搜一下，这里给一个链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1vYmJzLmNvbS90aHJlYWQtNTYyNTA0MC0xLTEuaHRtbA==\">https://www.amobbs.com/thread-5625040-1-1.html</span> ，里面有提供一个转换工具，当然你也可以自己去写一个程序。</p>\n<p><img data-src=\"/SDCC-develop/MS51%20include.png\" alt=\"MS51 include\"></p>\n<h1 id=\"工程构建\"><a class=\"anchor\" href=\"#工程构建\">#</a> 工程构建</h1>\n<p>因为是用 VSCode 做编辑开发，只要有 .vscode 文件夹的配置项就可以了，剩下的编译过程就交给 sdcc 编译，所以工程的构建比较简单，文件夹创建以及移植 SDK 库都方便，以下是我的工程文件分布（看起来还是比较容易理解的）：</p>\n<p><img data-src=\"/SDCC-develop/image-20201028213341368.png\" alt=\"image-20201028213341368\"></p>\n<p>这里 Libraries 文件夹的内容是直接移植 SDK 库的，其余的看文件名就知道用途了。</p>\n<p>另外就是，App 文件夹里，除了 lint.h（用来语法解析 mcs51 特定代码）和添加了 main.h 头文件（往常 main 主文件是不带头文件）；然后为什么要这两个呢，是为了避免 VSCode 的语法错误的，当然你也可以一劳永逸，直接关了 VSCode 的语法提示（这个可以看上面的 settings.json 配置文件），至于 lint.h 是从 sdcc 的安装路径 ...\\SDCC\\include\\mcs51 提取出来的，原滋原味。</p>\n<h1 id=\"vscode语法修饰\"><a class=\"anchor\" href=\"#vscode语法修饰\">#</a> VSCode 语法修饰</h1>\n<p>上面也讲了，sdcc 使用了部分非 ASCII C 关键字，所以 VSCode 会在程序中凸显语法错误；那么，我们就来解决这个问题（当然，不是用关闭语法检查这种粗暴形式）：</p>\n<p>1、首先要了解的是，在使用 sdcc 进行编译的时候，是会自动在进行编译前预定义  <code>__SDCC</code>  宏的，这样就好办，利用条件编译，区别智能提示运行环境和 SDCC 实际编译环境，用空的 define 去取代这些关键字，寄存器也都用宏代替，然后在 SDCC 实际编译时调用原来 C51 语法的寄存器定义。</p>\n<p>2、根据上面第一点，然后结合上面的提到的 lint.h（默认是留了 sdcc 关键字的空 define），得到这样的一个例子：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__SDCC</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    __sfr <span class=\"token function\">__at</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> P0<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 实际有效的寄存器定义</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">/* 关键字部分 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">__sfr</span>                    <span class=\"token comment\">// 空的关键字宏，消除关键字不兼容 (在 lint.h 上可以获取到相关的关键字)</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">/* 寄存器部分 */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P0</span>    <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">// 无实际意义，用于兼容（欺骗）标准 C 语法的寄存器符号</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr></table></figure><p>通过以上条件编译，就可以把代码区分到智能提示和实际编译两个环境：</p>\n<ul>\n<li>在实际编译时，SDCC 编译器会预定义  <code>__SDCC</code>  宏，因此实际编译时使用实际有效的寄存器定义；</li>\n<li>而在智能提示环境，用空的宏取代所有关键字，消除关键字的不兼容，然后用一个宏定义寄存器，保证寄存器名智能提示依然可以使用。这里将寄存器定义为 char* 指针解引用的左值表达式，目的是为迎合语法上对寄存器赋值是合法的，括号里的值可以是任意值，意义不大，当然如果使用寄存器本来的值更合适，但处理起来比较麻烦。</li>\n</ul>\n<p>3、对上面的 1、2 点总结起来，就可以得到：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">__MAIN_H__</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">__MAIN_H__</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__SDCC</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MS51_16K.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdbool.h></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"lint.h\"</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SFR_Macro_MS51_16K.h\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/******************************************************************************/</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/*                      Macro define  header files                            */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/******************************************************************************/</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P0</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x80;</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SP</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x81;</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DPL</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x82;</span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DPH</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x83;</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RCTRIM0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x84;</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RCTRIM1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x85;  </span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RWK</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x86;</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PCON</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x87;</span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TCON</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x88;</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TMOD</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x89;</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TL0</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x8A;</span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TL1</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x8B;</span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TH0</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x8C;</span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TH1</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x8D;</span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CKCON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x8E;</span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WKCON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x8F;</span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P1</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x90;</span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SFRS</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x91; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CAPCON0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x92;</span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CAPCON1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x93;</span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CAPCON2</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x94;</span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CKDIV</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x95;</span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CKSWT</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x96; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CKEN</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x97; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SCON</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x98;</span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SBUF</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x99;</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SBUF_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x9A;</span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EIE</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x9B;</span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EIE1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x9C;</span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CHPCON</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0x9F; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P2</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA0;</span></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">AUXR1</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA2;</span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BODCON0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA3; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IAPTRG</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA4; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IAPUEN</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA5;  //TA Protection</span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IAPAL</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA6;</span></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IAPAH</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA7;</span></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IE</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA8;</span></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SADDR</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xA9;</span></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WDCON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAA; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BODCON1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAB; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P3M1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAC;</span></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P3S</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAC; //Page1</span></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P3M2</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAD;</span></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P3SR</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAD; //Page1</span></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IAPFD</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAE;</span></span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IAPCN</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xAF;</span></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P3</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB0;</span></span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P0M1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB1;</span></span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P0S</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB1; //Page1</span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P0M2</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB2;</span></span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P0SR</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB2; //Page1</span></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P1M1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB3;</span></span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P1S</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB3; //Page1</span></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P1M2</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB4;</span></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P1SR</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB4; //Page1</span></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P2S</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB5; </span></span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IPH</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB7;</span></span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMINTC</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB7;  //Page1</span></span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IP</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB8;</span></span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SADEN</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xB9;</span></span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SADEN_1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xBA;</span></span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SADDR_1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xBB;</span></span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2DAT</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xBC;</span></span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2STAT</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xBD;</span></span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2CLK</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xBE;</span></span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2TOC</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xBF;</span></span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2CON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC0;</span></span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2ADDR</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC1;</span></span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCRL</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC2;</span></span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCRH</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC3;</span></span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">T3CON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC4;</span></span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM4H</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC4; //Page1</span></span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RL3</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC5;</span></span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM5H</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC5;  //Page1</span></span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RH3</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC6;</span></span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PIOCON1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC6; //Page1</span></span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TA</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC7;</span></span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">T2CON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC8;</span></span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">T2MOD</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xC9;</span></span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RCMP2L</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCA;</span></span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RCMP2H</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCB;</span></span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TL2</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCC; </span></span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM4L</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCC; //Page1</span></span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TH2</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCD;</span></span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM5L</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCD; //Page1</span></span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCMPL</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCE;</span></span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCMPH</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xCF;</span></span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PSW</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD0;</span></span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMPH</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD1;</span></span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM0H</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD2;</span></span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM1H</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD3;</span></span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM2H</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD4;</span></span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM3H</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD5;</span></span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PNP</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD6;</span></span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FBD</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD7;</span></span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMCON0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD8;</span></span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMPL</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xD9;</span></span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM0L</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xDA;</span></span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM1L</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xDB;</span></span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM2L</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xDC;</span></span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWM3L</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xDD;</span></span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PIOCON0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xDE;</span></span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMCON1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xDF;</span></span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ACC</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE0;</span></span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCCON1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE1;</span></span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCCON2</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE2;</span></span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCDLY</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE3;</span></span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">C0L</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE4;</span></span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">C0H</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE5;</span></span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">C1L</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE6;</span></span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">C1H</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE7;</span></span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCCON0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE8;</span></span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PICON</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xE9;</span></span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PINEN</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xEA;</span></span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PIPEN</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xEB;</span></span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PIF</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xEC;</span></span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">C2L</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xED;</span></span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">C2H</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xEE;</span></span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EIP</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xEF;</span></span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">B</span>           <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF0;</span></span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CAPCON3</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF1;</span></span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CAPCON4</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF2;</span></span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPCR</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF3;</span></span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPCR2</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF3; //Page1</span></span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPSR</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF4;</span></span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPDR</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF5;</span></span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">AINDIDS</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF6;</span></span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EIPH</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF7;</span></span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SCON_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF8;</span></span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PDTEN</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xF9; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PDTCNT</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xFA; //TA Protection</span></span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PMEN</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xFB;</span></span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PMD</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xFC;</span></span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EIP1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xFE;</span></span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EIPH1</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= 0xFF;</span></span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token comment\">/*  BIT Registers  */</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre><span class=\"token comment\">/*  SCON_1  */</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SM0_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^7;</span></span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FE_1</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^7; </span></span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SM1_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^6; </span></span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SM2_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^5; </span></span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">REN_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^4; </span></span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TB8_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^3; </span></span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RB8_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^2; </span></span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TI_1</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^1; </span></span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RI_1</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON_1^0; </span></span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre><span class=\"token comment\">/*  ADCCON0  */</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCF</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^7;</span></span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCS</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^6;</span></span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ETGSEL1</span>    <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^5;</span></span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ETGSEL0</span>    <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^4;</span></span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCHS3</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^3;</span></span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCHS2</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^2;</span></span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCHS1</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^1;</span></span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ADCHS0</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= ADCCON0^0;</span></span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre></pre></td></tr><tr><td data-num=\"193\"></td><td><pre><span class=\"token comment\">/*  PWMCON0  */</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMRUN</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PWMCON0^7;</span></span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PWMCON0^6;</span></span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PWMF</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PWMCON0^5;</span></span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CLRPWM</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PWMCON0^4;</span></span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre><span class=\"token comment\">/*  PSW */</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CY</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^7;</span></span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">AC</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^6;</span></span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">F0</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^5;</span></span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RS1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^4;</span></span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RS0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^3;</span></span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">OV</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^2;</span></span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P</span>          <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= PSW^0;</span></span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token comment\">/*  T2CON  */</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TF2</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= T2CON^7;</span></span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TR2</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= T2CON^2;</span></span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CM_RL2</span>     <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= T2CON^0;</span></span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre> </pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token comment\">/*  I2CON  */</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2CEN</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= I2CON^6;</span></span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STA</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= I2CON^5;</span></span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STO</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= I2CON^4;</span></span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SI</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= I2CON^3;</span></span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">AA</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= I2CON^2;</span></span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">I2CPX</span>  \t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= I2CON^0;</span></span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre></pre></td></tr><tr><td data-num=\"222\"></td><td><pre><span class=\"token comment\">/*  IP  */</span>  </pre></td></tr><tr><td data-num=\"223\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PADC</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^6;</span></span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PBOD</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^5;</span></span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^4;</span></span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PT1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^3;</span></span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PX1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^2;</span></span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PT0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^1;</span></span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PX0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IP^0;</span></span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre></pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token comment\">/*  P3  */</span>  </pre></td></tr><tr><td data-num=\"232\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P30</span>    \t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P3^0;</span></span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre></pre></td></tr><tr><td data-num=\"234\"></td><td><pre></pre></td></tr><tr><td data-num=\"235\"></td><td><pre><span class=\"token comment\">/*  IE  */</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EA</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^7;</span></span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EADC</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^6;</span></span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EBOD</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^5;</span></span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ES</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^4;</span></span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ET1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^3;</span></span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EX1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^2;</span></span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ET0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^1;</span></span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EX0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= IE^0;</span></span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre></pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token comment\">/*  P2  */</span> </pre></td></tr><tr><td data-num=\"246\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P20</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P2^0;</span></span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre></pre></td></tr><tr><td data-num=\"248\"></td><td><pre><span class=\"token comment\">/*  SCON  */</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SM0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^7;</span></span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FE</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^7; </span></span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SM1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^6; </span></span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SM2</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^5; </span></span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">REN</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^4; </span></span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TB8</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^3; </span></span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RB8</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^2; </span></span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TI</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^1; </span></span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RI</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= SCON^0; </span></span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre></pre></td></tr><tr><td data-num=\"259\"></td><td><pre><span class=\"token comment\">/*  P1  */</span>     </pre></td></tr><tr><td data-num=\"260\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P17</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^7;</span></span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P16</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^6;</span></span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TXD_1</span>  \t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^6; </span></span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P15</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^5;</span></span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P14</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^4;</span></span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SDA</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^4;    </span></span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P13</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^3;</span></span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SCL</span>  \t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^3;  </span></span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P12</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^2; </span></span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P11</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^1;</span></span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P10</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P1^0;</span></span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre></pre></td></tr><tr><td data-num=\"272\"></td><td><pre><span class=\"token comment\">/*  TCON  */</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TF1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^7;</span></span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TR1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^6;</span></span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TF0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^5;</span></span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TR0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^4;</span></span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IE1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^3;</span></span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IT1</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^2;</span></span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IE0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^1;</span></span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IT0</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= TCON^0;</span></span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre></pre></td></tr><tr><td data-num=\"282\"></td><td><pre><span class=\"token comment\">/*  P0  */</span>  </pre></td></tr><tr><td data-num=\"283\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P07</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^7;</span></span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RXD</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^7;</span></span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P06</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^6;</span></span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TXD</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^6;</span></span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P05</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^5;</span></span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P04</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^4;</span></span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STADC</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^4;</span></span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P03</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^3;</span></span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P02</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^2;</span></span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RXD_1</span>      <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^2;</span></span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P01</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^1;</span></span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MISO</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^1;</span></span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">P00</span>        <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^0;</span></span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MOSI</span>       <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//= P0^0;</span></span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre></pre></td></tr><tr><td data-num=\"298\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/* __SDCC */</span></span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre></pre></td></tr><tr><td data-num=\"300\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/* __MAIN_H__ */</span></span></pre></td></tr></table></figure><p>对于寄存器定义处理，可以直接 copy 原来的 include 文件内容，然后直接把  <code>sfr</code> 、 <code>sbit</code>  替换成  <code>#define</code>  ，再把  <code>=</code>  替换成  <code>(*(char *) (0)) //=</code>  这样就好，是不是很 nice。</p>\n<h1 id=\"makefile程序化管理\"><a class=\"anchor\" href=\"#makefile程序化管理\">#</a> Makefile 程序化管理</h1>\n<p>SDCC 并不支持同时编译多个源代码文件，所以多文件项目的编译需要分步进行。假如你的项目包含  <code>foo1.c</code>   <code>foo2.c</code>   <code>main.c</code>  三个文件，那么编译过程如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sdcc <span class=\"token parameter variable\">-c</span> foo1.c</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sdcc <span class=\"token parameter variable\">-c</span> foo2.c</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sdcc main.c foo1.rel foo2.rel</pre></td></tr></table></figure><p>还可以使用以下方式编译:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sdcc <span class=\"token parameter variable\">-c</span> main.c</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sdcc main.rel foo1.rel foo2.rel</pre></td></tr></table></figure><p>值得一提的是，sdcc 与 gcc 的命令支持还是有点出入的，但大部分都兼容，因此具体支持哪些命令，需要去翻看 sdcc 的手册。</p>\n<p>对于多文件项目最好是写一个 Makefile 文件来维护或者写一个 bat 批处理文件。这里就直接给出我所用的 Makefile 文件吧，分析什么的，可以看以前的链接：<a href=\"https://arachnid.cc/makefile-summarize/%EF%BC%9B%E5%A6%82%E6%9E%9C%E4%BD%A0%E6%98%AF\">https://arachnid.cc/makefile-summarize/；如果你是</a> Linux 用户，应该很清楚这些命令，若果诸位大佬有懂得多的，还请在评论区不吝赐教：</p>\n<figure class=\"highlight makefile\"><figcaption data-lang=\"makefile\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># target path</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>TARGET <span class=\"token operator\">=</span> MS51FB</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Build path</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>BUILD_DIR <span class=\"token operator\">=</span> build</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># source</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>SRCDIR <span class=\"token operator\">=</span> App</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>LIB_SRC <span class=\"token operator\">=</span> <span class=\"token comment\">#Libraries/StdDriver/src</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>USER_SRC <span class=\"token operator\">=</span> source<span class=\"token comment\">#/bsp.c \\</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>source/bsp_time.c \\</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>source/bsp_uart.c</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># C sources</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>C_SOURCES <span class=\"token operator\">:=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">wildcard</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>SRCDIR<span class=\"token punctuation\">)</span>/*.c <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>LIB_SRC<span class=\"token punctuation\">)</span>/*.c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>C_SOURCES <span class=\"token operator\">+=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">wildcard</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>USER_SRC<span class=\"token punctuation\">)</span>/*.c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ASM_SOURCES <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">wildcard</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>SRCDIR<span class=\"token punctuation\">)</span>/*.asm<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>C_SRC_FILE <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">notdir</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>C_SOURCES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>C_OBJ_FILE <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>C_SRC_FILE<span class=\"token punctuation\">:</span>%.c<span class=\"token operator\">=</span>%.c.rel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>ASM_SRC_FILE <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">notdir</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ASM_SOURCES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>ASM_OBJ_FILE <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ASM_SRC_FILE<span class=\"token punctuation\">:</span>%.asm<span class=\"token operator\">=</span>%.asm.rel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># building variables</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># debug build?</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>DEBUG <span class=\"token operator\">=</span> 1</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># optimization</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>OPT <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># cross compile</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>PREFIX <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>CC <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>PREFIX<span class=\"token punctuation\">)</span>sdcc </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>AS <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>PREFIX<span class=\"token punctuation\">)</span>sdas8051</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>MCU_MODEL <span class=\"token operator\">=</span> -mmcs51</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>RM <span class=\"token operator\">=</span> -rm -rf </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>MAKE <span class=\"token operator\">=</span> make </pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># ------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># Usually SDCC's small memory model is the best choice.  If</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># you run out of internal RAM, you will need to declare</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># variables as \"xdata\", or switch to larger model</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># Memory Model (small, medium, large, huge)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>MODEL  <span class=\"token operator\">=</span> --model-small</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># ------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\"># Memory Layout</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># PRG Size = 4K Bytes</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">#CODE_SIZE = --code-loc 0x0000 --code-size 18432</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>CODE_SIZE <span class=\"token operator\">=</span> --code-size 18432</pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># INT-MEM Size = 256 Bytes</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">#IRAM_SIZE = --idata-loc 0x0000  --iram-size 256</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>IRAM_SIZE <span class=\"token operator\">=</span> --iram-size 256</pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># EXT-MEM Size = 4K Bytes</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">#XRAM_SIZE = --xram-loc 0x0000 --xram-size 768</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>XRAM_SIZE <span class=\"token operator\">=</span> --xram-size 768</pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\"># ------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\"># FLAGS</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># macros for gcc</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\"># AS defines</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>AS_DEFS <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># C defines</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>C_DEFS <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\"># AS includes</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>AS_INCLUDES <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># C includes</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>C_INCLUDES <span class=\"token operator\">=</span>  \\</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>-IApp \\</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>-ILibraries/Device/Include \\</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>-ILibraries/StdDriver/inc \\</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>-Iinclude</pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token comment\"># libraries</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>LIBS <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>LIBDIR <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># compile gcc flags</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>ASFLAGS <span class=\"token operator\">=</span> -l -s</pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>CFLAGS <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MCU_MODEL<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>C_DEFS<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>C_INCLUDES<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MODEL<span class=\"token punctuation\">)</span> --out-fmt-ihx --no-xinit-opt --peep-file tools/peep.def</pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token keyword\">ifeq</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>DEBUG<span class=\"token punctuation\">)</span>, 1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>CFLAGS <span class=\"token operator\">+=</span> </pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>CFLAGS <span class=\"token operator\">+=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>OPT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token keyword\">endif</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\"># LDFLAGS</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>LDFLAGS <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>LIBDIR<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>LIBS<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MCU_MODEL<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MODEL<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CODE_SIZE<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>IRAM_SIZE<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>XRAM_SIZE<span class=\"token punctuation\">)</span> --out-fmt-ihx</pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\"># default action: build all</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token builtin-target builtin\">.PHONY</span><span class=\"token punctuation\">:</span> all</pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token target symbol\">all</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>TARGET<span class=\"token punctuation\">)</span>.hex</pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\"># build the application</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\"># list of objects</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>OBJECTS <span class=\"token operator\">=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>addprefix <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/,<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>C_OBJ_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\"># list of ASM program objects</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>OBJECTS <span class=\"token operator\">+=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>addprefix <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/,<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ASM_OBJ_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)/%.c.rel</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>USER_SRC<span class=\"token punctuation\">)</span>/%.c</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CC<span class=\"token punctuation\">)</span> -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CFLAGS<span class=\"token punctuation\">)</span> -c <span class=\"token variable\">$^</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)/%.c.rel</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>LIB_SRC<span class=\"token punctuation\">)</span>/%.c</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CC<span class=\"token punctuation\">)</span> -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CFLAGS<span class=\"token punctuation\">)</span> -c <span class=\"token variable\">$^</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)/%.c.rel</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>SRCDIR<span class=\"token punctuation\">)</span>/%.c</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CC<span class=\"token punctuation\">)</span> -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CFLAGS<span class=\"token punctuation\">)</span> -c <span class=\"token variable\">$^</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)/%.asm.rel</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>SRCDIR<span class=\"token punctuation\">)</span>/%.asm</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>AS<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ASFLAGS<span class=\"token punctuation\">)</span> -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$^</span> </pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)/%.ihx</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>OBJECTS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CC<span class=\"token punctuation\">)</span> -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>LDFLAGS<span class=\"token punctuation\">)</span> <span class=\"token variable\">$^</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)/%.hex</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/%.ihx <span class=\"token operator\">|</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\tpackihx <span class=\"token variable\">$^</span> > <span class=\"token variable\">$@</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token target symbol\"><span class=\"token variable\">$</span>(BUILD_DIR)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\tmkdir <span class=\"token variable\">$@</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token comment\"># clean up</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token builtin-target builtin\">.PHONY</span><span class=\"token punctuation\">:</span> clean</pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token target symbol\">clean</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>RM<span class=\"token punctuation\">)</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/*</pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token comment\"># build asm</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token comment\">#######################################</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>HEADER_FILE <span class=\"token operator\">=</span> MS51_16K.h</pre></td></tr><tr><td data-num=\"161\"></td><td><pre>HEADER_PATH <span class=\"token operator\">=</span> App</pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token target symbol\">disasm</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>TARGET<span class=\"token punctuation\">)</span>.hex</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t./tools/mcs51-disasm.pl -M <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>HEADER_FILE<span class=\"token punctuation\">)</span> -I <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>HEADER_PATH<span class=\"token punctuation\">)</span> -fl -rj -as <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>TARGET<span class=\"token punctuation\">)</span>.hex > <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILD_DIR<span class=\"token punctuation\">)</span>/<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>TARGET<span class=\"token punctuation\">)</span>.a51</pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token comment\"># *** EOF ***</span></pre></td></tr></table></figure><p>这里说一下，sdcc 特有的  <code>packihx</code>  命令是用来产生 Intel HEX 文件的； <code>mkdir</code>  命令在 sdcc 中是不支持，可以把他删掉，由于这一点，所以得保留着 build 文件夹存放编译文件，如果删除的话，执行会出错；执行  <code>disasm</code>  命令需要工具链 mcs51-disasm.pl 的支持，它的说明如下：</p>\n<p><img data-src=\"/SDCC-develop/image-20201028231938212.png\" alt=\"image-20201028231938212\">；另外， <code>+=</code>  好像也不支持单文件添加，看 USER_SRC 处，只能通过  <code>wildcard</code>  扫描添加。。。不知为啥，望大佬解答一二。</p>\n<h1 id=\"程序编译\"><a class=\"anchor\" href=\"#程序编译\">#</a> 程序编译</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"main.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_uart.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_time.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_eeprom.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_adc.h\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_pwm.h\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_wdt.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>__bit BIT_TMP<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//EA 暂存（对应官方库）</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ENABLE_WDT</span>\t\t\t\t<span class=\"token expression\"><span class=\"token number\">1</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/* ISR 中断函数原型声明（原因看手册 P3.8 章节） */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">UART0_ISR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token function\">__interrupt</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Timer3_ISR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token function\">__interrupt</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">/************************************************</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>函数名称 ： System_Start</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>功    能 ： 系统初始化</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>参    数 ： 无</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>返 回 值 ： 无</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>*************************************************/</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">System_Start</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    clr_EA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">Bsp_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">UART0_Timer1_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">Timer3_Init</span><span class=\"token punctuation\">(</span>TIME_DIV16<span class=\"token punctuation\">,</span> <span class=\"token number\">15000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 10ms</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// Timer0_Init();</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// ADC_Config();</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token comment\">// PWM0_Init();</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">ENABLE_WDT</span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">WDT_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/* ENABLE_WDT */</span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    set_EA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">/************************************************</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>函数名称 ： main</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>功    能 ： 主函数入口</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>参    数 ： 无</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>返 回 值 ： int</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>*************************************************/</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token class-name\">uint16_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token function\">System_Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tP12_QUASI_MODE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    P12 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        P12 <span class=\"token operator\">^=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token function\">SoftwareDelay_ms</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">ENABLE_WDT</span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">WDT_EnableOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token function\">WDT_DisableClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/* ENABLE_WDT */</span></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">ENABLE_WDT</span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token function\">WDT_ReloadCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/* ENABLE_WDT */</span></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token function\">printf_small</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token function\">SoftwareDelay_ms</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">/*---------------------------- END OF FILE ----------------------------*/</span></pre></td></tr></table></figure><p>然后  <code>make</code>  编译，最终输出（方框处显示成功）：</p>\n<p><img data-src=\"/SDCC-develop/image-20201028233905135.png\" alt=\"image-20201028233905135\"></p>\n<p>下载进去，就可以看到 hello world 在不停的打印输出了。</p>\n<p>在这里，需要注意以下几点：</p>\n<p>1、中断函数必须在 main 函数文件中给出 ISR 原型，不然就无法进中断。详细请看手册的 P3.8 章节。以下摘自部分解释：</p>\n<p><img data-src=\"/SDCC-develop/image-20201028234927141.png\" alt=\"image-20201028234927141\"></p>\n<p>2、一般，我们在 C 程序中打印输出是调用  <code>printf</code>  语句进行输出的，但在 sdcc 上，比较建议使用  <code>printf_small</code>  输出，因为对于 8 位微控制起来说，资源是很紧缺的，使用  <code>printf_small</code>  已经可以满足一般输出需求了，当然以上仅限于输出整型以及字符型变量；对于浮点型变量，需要使用特殊的指令对程序进行编译才能得到输出效果，具体的介绍可以看手册的 P3.14.1 章节。</p>\n<p>3、如果是使用 bin 文件烧写到芯片上，可以用 sdcc 自带的 makebin.exe 命令行工具进行转换（不过这个转换出来文件比较大），路径可以在 ...\\SDCC\\bin 下找到，通过以下命令： <code>makebin xxx.ihx &gt; xxx.bin</code></p>\n<p>或者利用 hex2bin，下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvaGV4MmJpbi9maWxlcy9sYXRlc3QvZG93bmxvYWQlRUYlQkMlOEMlRTglQkYlOTklRTQlQjglQUElRTclOUElODQlRTUlOTElQkQlRTQlQkIlQTQlRTUlODglOTklRTYlOTglQUYlRUYlQkMlOUE=\">https://sourceforge.net/projects/hex2bin/files/latest/download，这个的命令则是：</span> <code>hex2bin xxx.hex &gt; xxx.bin</code></p>\n<p>Makefile 下的 bin 文件生成命令：</p>\n<p><img data-src=\"/SDCC-develop/image-20201029233621896.png\" alt=\"image-20201029233621896\"></p>\n<p>两者相比之下，由于前者是做了剩余空间填充处理的，所以转换出来的文件比较大，个人更倾向于后者。</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>1、不能使用 double 数据类型，否则报错。<br>\n2、make 编译只能根据法则编译对应文件夹的全部源文件，不能选择编译相应源文件。<br>\n3、中断函数这里是要在 main 函数所在文件处进行原型声明，否者是无法进入中断程序，原因不声明是并没用把中断函数的向量地址加载到执行文件中。<br>\n4、sdcc 使用的关键字是跟 keilC51 里面的关键字不同的；对于一些非 ANSI C 的关键字，SDCC 均采用双下滑线开头的方式定义，具体可看 sdcc 手册。<br>\n5、sdcc 支持的命令行命令，跟我们平常用的 gcc 命令行命令有所不同，具体翻看 sdcc 手册。<br>\n6、一般串口重定向后，是使用 printf 函数输出，但在 sdcc 编译器中要改用 printf_small 这个函数进行替代。</p>\n<p>7、sdcc 在编译文件时，会把用不到的代码也编译进来，所以如果空间紧张，建议注释掉一些无关的代码，避免代码空间膨胀。</p>\n<h1 id=\"相关链接\"><a class=\"anchor\" href=\"#相关链接\">#</a> 相关链接</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2ZpdmVkb3RzLmNvZS5wc3UuYWMudGgvfmNqL21hc2QvcmVzb3VyY2VzL3NkY2MtZG9jL1NEQ0NVZG9jLmh0bWwjdG9jMjg=\">SDCC Compiler User Guide</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Fib3V0LnV1c3BpZGVyLmNvbS8yMDE5LzAzLzA1L3NkY2MuaHRtbA==\">8051 C Development Using SDCC(Small Device C Compiler)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3drYXN0ZXIvTjc2RTAwMw==\">Nuvoton N76E003 with SDCC</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aHljYW4uY29tL3RfMTI3NS5odG1s\">新唐 N76E003 8051 1T 单片机入坑记录</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aGNoZW4ubmV0L2Jsb2cvc2RjYy1zaW1wbGUtdG8tdXNlLXR1dG9yaWFsLw==\">SDCC 编译器简明使用教程</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF4aW1pbnRlZ3JhdGVkLmNvbS9jbi9kZXNpZ24vdGVjaG5pY2FsLWRvY3VtZW50cy9hcHAtbm90ZXMvMy8zNDc3Lmh0bWw=\">使用免费的 SDCC C 编译器开发 DS89C430/450 系列微控制器固件</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2ViYXVuLmNuL3Bhc3NhZ2VzLzcv\">51 单片机之开发环境使用 VSCode 结合 SDCC 取代 Keil</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC9ldGJlcnppbi9ibG9nLzQ1NjEzOTE=\">使用 Visual Studio Code + CMake + SDCC 进行 C51 开发的一次尝试</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mb3Jtb3Nhb3MudXJsLnR3Lw==\">台湾同胞对 SDCC 的使用介绍</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZGFtc3EuZ2l0aHViLmlvL2Jsb2cvdGFncy8lRTUlQjUlOEMlRTUlODUlQTUlRTUlQkMlOEYv\">sdcc man 阅读笔记</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2p5aHNoaW4zLmJsb2dzcG90LmNvbS8yMDA5LzA0L3NkY2MtcHJpbnRmLmh0bWw=\">SDCC printf 函數介紹</span></p>\n",
            "tags": [
                "history",
                "IDE"
            ]
        },
        {
            "id": "https://arachnid.cc/GDB-debuging/",
            "url": "https://arachnid.cc/GDB-debuging/",
            "title": "GDB 调试器 + VSCode 开发",
            "date_published": "2020-10-02T16:20:26.000Z",
            "content_html": "<h1 id=\"软件下载\"><a class=\"anchor\" href=\"#软件下载\">#</a> 软件下载</h1>\n<p>OpenOCD：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nbnV0b29sY2hhaW5zLmNvbS9hcm0tZWFiaS9vcGVub2NkLw==\">https://gnutoolchains.com/arm-eabi/openocd/</span></p>\n<p>一个开源的片上调试器 (Open On-Chip Debugger)。在其他平台上，OpenOCD 是要自己 Configure 并且自己编译的，但是 Windows 平台上提供了编译好的二进制文件，所以只需要下载下来后随便解压出来就好了。安装完成后添加系统环境变量，可以利用 cmd 命令：openocd -v 测试。</p>\n<p>介绍：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmVybGlvcy5kZS9zb2Z0d2FyZS9vcGVub2NkLw==\">https://www.berlios.de/software/openocd/</span></p>\n<h1 id=\"搭建调试链接\"><a class=\"anchor\" href=\"#搭建调试链接\">#</a> 搭建调试链接</h1>\n<p>在这里需要说明的是，OpenOCD 文件夹下的  <code>share/openocd/scripts</code>  里面放的就是 openocd 在运行时所需要用到的各种配置文件，其中 interface 文件夹下放的是关于调试器的配置文件，而  <code>target</code>  文件夹放的是目标平台的配置文件，这里我们需要的是  <code>interface/stlink.cfg</code>  和  <code>target/stm32l1.cfg</code> ，不过不需要复制出来。注： <code>stm32l1.cfg</code>  是要选择你的目标芯片对应的文件，可以进入  <code>...\\OpenOCD-20200729-0.10.0\\share\\openocd\\scripts\\target</code>  路径下查找。</p>\n<p>连接好 STLink 和板子，如果板子的调试接口正常的话；然后在终端控制台里键入命令： <code>openocd -f interface/stlink.cfg -f target/stm32l1.cfg</code>  回车，得到以下信息，即搭建了一个 GDB Server，连通了硬件调试器和 GDB，通过 USB 和硬件调试器连接，并且通过 TCP 和 GDB 连接：</p>\n<p><img data-src=\"/GDB-debuging/20201003000802158.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"下载配置\"><a class=\"anchor\" href=\"#下载配置\">#</a> 下载配置</h1>\n<p>当你能正确实现以上操作时，那么，关闭终端显示的窗口，使之退出搭建的 GDB Server 链接；然后回到  <code>tasks.json</code>  文件里，在原本的 “tasks” 任务标签里再追加以下内容：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"dependsOn\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Build\"</span><span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 任务依赖</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Build and Download\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"openocd\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"-f\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"interface/stlink.cfg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"-f\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"target/stm32l1.cfg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">\"program ./build/$&#123;workspaceFolderBasename&#125;.elf verify reset exit\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后变成：</p>\n<p><img data-src=\"/GDB-debuging/20201003000817141.png\" alt=\"在这里插入图片描述\"></p>\n<p>这个任务要求先进行 Build 任务，然后通过命令打开 openocd，加载两个配置文件（ <code>-f interface/stlink.cfg</code>  和  <code>-f target/stm32l1.cfg</code> ），同时，这个  <code>-c</code>  的选项后面跟着的就是 openocd 成功加载后执行的内置命令，这里我们让它下载、验证、reset，然后直接退出，这样就实现了一条龙式的下载。运行这个任务的方法就跟 Build 一样，在此就不过多介绍了，最后运行该任务你会发现，这小破板跑起来。</p>\n<p>这里其实是经过了进入调试处理的操作，只不过我们让它自动退出了调试模式而已；因为下载和调试的区别是，下载只是把代码加载到芯片里，而不进行调试，也不会切换到调试页面，其实调试就已经会将代码下载到板子上了，所以这里所设置的下载，其实并不是单纯的下载，而是经过了进入调试，退出调试这样的操作，使我们人为的觉得是下载操作。</p>\n<h1 id=\"调试配置\"><a class=\"anchor\" href=\"#调试配置\">#</a> 调试配置</h1>\n<p>在窗口里点击 运行 -&gt; 添加配置：</p>\n<p><img data-src=\"/GDB-debuging/2020100300084420.png\" alt=\"在这里插入图片描述\"></p>\n<p>接着，如果根据上一篇安装了 Cortex Debug 插件，就会出现如下选项（ps：如果窗口打开的是  <code>.c</code>  文件或者  <code>.h</code>  文件，只会显示前面两个选项，不知道是我电脑问题还是咋的，可以试着切换打开到  <code>.json</code>  文件或者打开  <code>makefile</code>  文件）：</p>\n<p><img data-src=\"/GDB-debuging/20201003000854507.png\" alt=\"在这里插入图片描述\"></p>\n<p>点击框选的选项，在  <code>.vscode</code>  文件里会创建一个  <code>launch.json</code>  文件，然后把里面的内容修改成以下样子：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 使用 IntelliSense 了解相关属性。 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 悬停以查看现有属性的描述。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Cortex Debug\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;workspaceRoot&#125;\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 输出路径</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"executable\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./build/$&#123;workspaceRootFolderName&#125;.elf\"</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 要调试的程序</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cortex-debug\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"servertype\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"openocd\"</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 调试器选择</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"device\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"STM32L151CB\"</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 使用 J-link GDB Server 时必须；其他 GBD Server 时可选（有可能帮助自动选择 SVD 文件）。支持的设备见 https://www.segger.com/downloads/supported-devices.php</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">//\"svdFile\": \"./STM32L15xC.svd\",  //svd 文件，有这个文件才能查看寄存器的值，每个单片机都不同。可以在以下地址找到 https://github.com/posborne/cmsis-svd 下载</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">\"interface\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"swd\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"configFiles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token comment\">//\"$&#123;workspaceRoot&#125;/openocd.cfg\",\t// * 可以通过加载该文件来配置</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token string\">\"interface/stlink.cfg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token string\">\"target/stm32l1.cfg\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token property\">\"runToMain\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token property\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Build\"</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 在调试前预先执行的任务，此处是 tasks.json 中的</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">//\"armToolchainPath\": \"C:\\\\Program Files (x86)\\\\GNU Tools ARM Embedded\\\\5.4 2016q3\\\\bin\"    // 如果没有把 arm 工具链路径添加到系统环境变量，则需要这条指令添加你的路径</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里主要就是指定  <code>preLaunchTask</code> ，顾名思义就是先运行某个任务后再启动调试，我们这里要先运行前面配置的  <code>Build</code>  任务，意为先编译再进行调试操作； <code>servertype</code>  调试器这里，我们就使用  <code>openocd</code>  就好了，因为它支持各种不同的调试器，若是仅使用 Jink，不用其他的调试器，那么，你可以改成 jlink，然后参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNjM3NzEyNzM=\">https://zhuanlan.zhihu.com/p/163771273</span>； <code>device</code>  是指定 STM32 的芯片型号，如果支持，则可以帮助调试器显示外设寄存器的值； <code>configFiles</code>  就是前面说到需要加载的那两个配置文件了（类似于键入命令： <code>openocd –f interface/jlink.cfg –f target/stm32f4.cfg</code> ）； <code>runToMain</code>  就是选择程序是从 main 函数开始加载，还是从汇编代码开始加载，stm32 启动都是从  <code>startup_stm32xxx.s</code>  开始的，所以这里得选择  <code>false</code> 。</p>\n<p>然后在这里说一下，在  <code>configFiles</code>  中，注释了一行，在正常情况下，如果我们不带参数启动（即所谓的单纯键入命令： <code>openocd</code> ），openocd 就会默认自动查找当前目录下有没有名为 openocd.cfg 的文件，并把它作为配置文件来启动。若是你想在利用  <code>openocd.cfg</code>  来加载配置，那么就要在工程路径下（对应你在  <code>configFiles</code>  所填的路径文件）创建一个  <code>openocd.cfg</code>  文件，并添加以下内容：</p>\n<pre><code class=\"language-cfg\"># 选择调试器为JLink or CMSIS-DAP or STlink\n#source [find interface/jlink.cfg]\n#source [find interface/cmsis-dap.cfg]\nsource [find interface/stlink.cfg]\n\n# 选择接口为SWD，jlink下打开\n#transport select swd\n\n# 选择目标芯片\nsource [find target/stm32l1.cfg]\n</code></pre>\n<p>实际上并不推荐这种方式，因为又要创建，又把  <code>launch.json</code>  的配置分开了，当整体移植  <code>.vscode</code>  文件夹并更换目标芯片时容易出现漏改参数。</p>\n<h1 id=\"debug-调试\"><a class=\"anchor\" href=\"#debug-调试\">#</a> DEBUG 调试</h1>\n<p>在配置完成以上的  <code>launch.json</code>  调试参数后，点击窗口 运行 -&gt; 启动调试（或者直接按 f5），就可以进入 debug 模式了：</p>\n<p><img data-src=\"/GDB-debuging/20201003000740708.png\" alt=\"在这里插入图片描述\"></p>\n<p>VSCode 监视窗口 16 进制查看表达式，只需要在表达式后面加  <code>,h</code>  ，eg：<br>\n <code>buf,h</code> ，则以 16 进制显示  <code>buf</code>  的值。</p>\n<h1 id=\"gdb-常用命令\"><a class=\"anchor\" href=\"#gdb-常用命令\">#</a> GDB 常用命令</h1>\n<ul>\n<li>\n<p>显示内存值  <code>x/&lt;n&gt;&lt;f&gt;&lt;u&gt; &lt;addr&gt;</code>  （以  <code>&lt;f&gt;</code>  格式打印从  <code>&lt;addr&gt;</code>  开始的  <code>&lt;n&gt;</code>  个长度单元为  <code>&lt;u&gt;</code>  的内存值）：</p>\n<ul>\n<li><code>&lt;n&gt;</code>  表示要查看几个内存单元</li>\n<li><code>&lt;f&gt;</code>  表示显示的格式， <code>x</code>  以十六进制输出， <code>d</code>  以十进制输出， <code>u</code>  以十六进制无符号输出， <code>o</code>  以八进制输出， <code>t</code>  以二进制输出， <code>c</code>  以字符格式输出， <code>s</code>  以字符串格式输出， <code>f</code>  以浮点型数据输出</li>\n<li><code>&lt;u&gt;</code>  表示内存单元的大小， <code>b</code>  是 1 byte， <code>h</code>  是 2 byte（halfword）， <code>w</code>  是 4 byte（word）， <code>g</code>  是 8 byte（giant word）</li>\n<li><code>&lt;addr&gt;</code>  可以是地址，也可以是变量名</li>\n</ul>\n</li>\n<li>\n<p>查找函数地址  <code>info address &lt;func_name&gt;</code></p>\n</li>\n<li>\n<p>反找函数名  <code>info symbol &lt;func_addr&gt;</code></p>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2V3YXJlLm9yZy9nZGIvY3VycmVudC9vbmxpbmVkb2NzL2dkYi5odG1sL2luZGV4Lmh0bWwjU0VDX0NvbnRlbnRz\">https://sourceware.org/gdb/current/onlinedocs/gdb.html/index.html#SEC_Contents</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aXphcmRmb3JjZWwuZ2l0Ym9va3MuaW8vMTAwLWdkYi10aXBzL2NvbnRlbnQvaW5kZXguaHRtbA==\">https://wizardforcel.gitbooks.io/100-gdb-tips/content/index.html</span></p>\n<p>对于使用 gdb server 调试，可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVub2NkLm9yZy9kb2MvaHRtbC9TZXJ2ZXItQ29uZmlndXJhdGlvbi5odG1s\">https://openocd.org/doc/html/Server-Configuration.html</span></p>\n",
            "tags": [
                "history",
                "IDE"
            ]
        },
        {
            "id": "https://arachnid.cc/GCC-develop/",
            "url": "https://arachnid.cc/GCC-develop/",
            "title": "GCC 编译器 + VSCode 开发",
            "date_published": "2020-09-30T17:09:34.000Z",
            "content_html": "<h1 id=\"程序安装\"><a class=\"anchor\" href=\"#程序安装\">#</a> 程序安装</h1>\n<p>1、VSCode：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vRG93bmxvYWQ=\">https://code.visualstudio.com/Download</span></p>\n<p>好用到爆的文本编辑器，配合强大的插件，使你的开发效率大大提高。</p>\n<p>2、Java：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamF2YS5jb20vemgtQ04vZG93bmxvYWQv\">https://www.java.com/zh-CN/download/</span></p>\n<p>STM32CubeMX 的安装需要 JAVA 运行环境（jre）。</p>\n<p>3、STM32CubeMX：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9teS5zdC5jb20vY29udGVudC9teV9zdF9jb20vZW4vcHJvZHVjdHMvZGV2ZWxvcG1lbnQtdG9vbHMvc29mdHdhcmUtZGV2ZWxvcG1lbnQtdG9vbHMvc3RtMzItc29mdHdhcmUtZGV2ZWxvcG1lbnQtdG9vbHMvc3RtMzItY29uZmlndXJhdG9ycy1hbmQtY29kZS1nZW5lcmF0b3JzL3N0bTMyY3ViZW14Lmh0bWw=\">https://my.st.com/content/my_st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-configurators-and-code-generators/stm32cubemx.html</span></p>\n<p>支持最新的 HAL 库及 LL 库，工程代码配置与生成工具，支持生成 IAR、Keil、STM32CubeIDE、Makefile 等工程，这里使用其生成的 Makefile 工程。</p>\n<p>4、MinGW-w64：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvbWluZ3ctdzY0L2ZpbGVzL21pbmd3LXc2NC9taW5ndy13NjQtcmVsZWFzZS8=\">https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/</span></p>\n<p>一个强大并实用的 C/C++ 编译器。安装完成后需要添加系统环境变量，可以利用 cmd 命令：gcc -v 测试。</p>\n<p>5、arm-none-eabi-gcc：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXVuY2hwYWQubmV0L2djYy1hcm0tZW1iZWRkZWQvK2Rvd25sb2Fk\">https://launchpad.net/gcc-arm-embedded/+download</span></p>\n<p>GUN 的 arm 的通用交叉编译链工具，基本上常用的 arm 处理器均支持。同样的，安装完成后需要添加系统环境变量，可以利用 cmd 命令：arm-none-eabi-gcc -v 测试。</p>\n<h1 id=\"cubemx工程生成\"><a class=\"anchor\" href=\"#cubemx工程生成\">#</a> CubeMX 工程生成</h1>\n<p>目前 STM32 现在主推的库是 HAL 库，当然还有个 LL 库用于操作底层寄存器；对于 HAL 库，官方专门推出了图形化软件 CubeMX 来简化 HAL 库下 STM32 的初始化代码；我们只需要配置好相应的外设功能以及时钟树，点击生成代码，CubeMX 便会生成相应工程文件，并且还支持多种 IDE 工具，实乃居家旅行出门必备啊。咳，偏题！</p>\n<p>首先，选择你的目标芯片，启动工程配置，这里就简单的弄个 LED 控制跟 DEBUG 配置。</p>\n<p>串口配置就像下图那样，像我们平常一样，异步通讯，Baud rate:115200、8Bit、1Stop Bit</p>\n<p><img data-src=\"/GCC-develop/20201001010129515.png\" alt=\"在这里插入图片描述\"></p>\n<p>接着就配置 LED IO 引脚，直接点击对应引脚进行配置，如下图所示：</p>\n<p><img data-src=\"/GCC-develop/20201001010143209.png\" alt=\"在这里插入图片描述\"></p>\n<p>这软件怎么用在这里就不多赘述了，还有就是稍微注意一下：</p>\n<p>如果要使用 STLink 等在线调试器，那么需要在下图的指示处选择你所需要调试方式：</p>\n<p><img data-src=\"/GCC-develop/2020100101015795.png\" alt=\"在这里插入图片描述\"></p>\n<p>对于时钟树，像我们一般是有使用 HSE 高速外部晶振，那么你就需要在 RCC 那里打开相应的配置：</p>\n<p><img data-src=\"/GCC-develop/20201001010208659.png\" alt=\"在这里插入图片描述\"></p>\n<p>接着在时钟配置那里配置相应的外设时钟：</p>\n<p><img data-src=\"/GCC-develop/20201001010221464.png\" alt=\"在这里插入图片描述\"></p>\n<p>最后，由于我们是想要在 VSCode 上开发，就直接选择生成  <code>Makefile</code>  就可以了。需要特别说明的是，这一步并不是必须的，完全可以不用 CubeMX，自己写  <code>Makefile</code>  也是可以的。然后输出生成工程文件。</p>\n<p><img data-src=\"/GCC-develop/20201001010233796.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"vscode环境部署\"><a class=\"anchor\" href=\"#vscode环境部署\">#</a> VSCode 环境部署</h1>\n<p><strong>1、插件安装</strong></p>\n<table>\n<thead>\n<tr>\n<th>插件</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Chinese (Simplified) Language Pack for Visual Studio Code</td>\n<td>中文（简体）语言包</td>\n</tr>\n<tr>\n<td>Comment Translate</td>\n<td>VSCode 注释翻译</td>\n</tr>\n<tr>\n<td>C/C++</td>\n<td>C / C ++ 的语言支持，语法智能感知、加亮及调试功能，当然需要系统安装 arm-none-eabi-gcc 编译器</td>\n</tr>\n<tr>\n<td>Cortex Debug</td>\n<td>提供 jlink、stlink 等调试接口功能</td>\n</tr>\n<tr>\n<td>ARM</td>\n<td>arm 汇编语言支持</td>\n</tr>\n<tr>\n<td>vscode-icons</td>\n<td>文件图标，可快速查看文件类型</td>\n</tr>\n</tbody>\n</table>\n<p><strong>2、配置 VS Code</strong></p>\n<p>首先，把从 STM32CubeMX 创建出来的工程导入到 VS Code 里面，得到：</p>\n<p><img data-src=\"/GCC-develop/20201001010251349.png\" alt=\"在这里插入图片描述\"></p>\n<p>默认情况下，工程中是不含  <code>.vscode</code>  的文件夹的，通过操作以下三种方式时会自动创建：</p>\n<p>打开命令窗口进行编辑配置（Ctrl+Shitf+P &gt; Edit Configurations (JSON)）</p>\n<p><img data-src=\"/GCC-develop/20201001010320901.png\" alt=\"在这里插入图片描述\"></p>\n<p>或点击窗口栏的 终端 -&gt; 配置任务 -&gt; 使用模板创建  <code>task.json</code>  -&gt; Other</p>\n<p><img data-src=\"/GCC-develop/20201001010335263.png\" alt=\"在这里插入图片描述\"></p>\n<p>或修改工作区里的  <code>settings.json</code>  文件（窗口 File--Preferences--Settings--Features--Terminal 的 Terminal &gt; Integrated &gt; Automation Shell: Windows 栏中进行编辑）</p>\n<p><img data-src=\"/GCC-develop/20201001010345892.png\" alt=\"在这里插入图片描述\"></p>\n<p>这三个创建出来的效果如下：</p>\n<p><img data-src=\"/GCC-develop/20201001010401423.png\" alt=\"在这里插入图片描述\"></p>\n<p>先说前面两个文件：</p>\n<ul>\n<li><strong>c_cpp_properties.json</strong></li>\n</ul>\n<p>主要有添加 include 路径，编译器路径，宏定义等；设置好后，索引、编译就跟 keil 一样方便。然后，它的配置修改如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"STM32\"</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 创建一个名为 \"STM32\" 的配置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">\"includePath\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\t\t<span class=\"token comment\">// 声明这个工作区的 C/C++ 工程包含了哪些头文件目录</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/**\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Drivers/CMSIS/Device/ST/STM32L1xx/Include\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Drivers/CMSIS/Include\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Drivers/STM32L1xx_HAL_Driver/Inc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token string\">\"$&#123;workspaceFolder&#125;/Core/Inc\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"defines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\t\t\t<span class=\"token comment\">// 全局的预处理宏定义</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token string\">\"STM32L151xB\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token string\">\"USE_HAL_DRIVER\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"compilerPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gcc.exe\"</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 如果添加了环境变量，可以像这样表示；否则就得加绝对路径，如：C:\\\\Program Files\\\\mingw64\\\\bin\\\\gcc.exe</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token property\">\"cStandard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c11\"</span><span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\">// 使用的 C 标准</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token property\">\"cppStandard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c++17\"</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token comment\">// 使用的 C++ 标准</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token property\">\"intelliSenseMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gcc-x64\"</span>\t<span class=\"token comment\">// 语言风格</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意：这个 json 不允许有注释，所以，如果是像复制到你的文件里，记得把注释删了。</p>\n<ul>\n<li><strong>tasks.json</strong></li>\n</ul>\n<p>这个文件下 tasks 数组里的每一个对象都代表着一个任务。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// for the documentation about the tasks.json format</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Build\"</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token comment\">// 标签名</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token comment\">// 终端（shell）型的任务</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"make\"</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// * 执行的命令</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\t\t\t\t\t<span class=\"token comment\">// 命令的参数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token string\">\"-j6\"</span>\t\t\t\t\t<span class=\"token comment\">// 表示六线程同时编译</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"$gcc\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 表示如果出现了编译报错，问题面板会显示 gcc 类型的错误</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">\"isDefault\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意：上面的 &quot;command&quot; 选项中填的是 &quot;make&quot;；实际上，在我们下载的 MinGW-w64 编译器中，执行的是 mingw32-make.exe；但是，这里可以看到 mingw32-make.exe 文件名太长，并且不好记，因此我们可以将其复制并重命名为 make.exe 这样就与 Linux 下的 make 命令保持一致了；如果没有像前面说的那样复制出 make.exe，那么，在 &quot;command&quot; 选项中填则是 &quot;mingw32-make&quot;，同样的在执行编译操作时，键入的命令则是 mingw32-make。</p>\n<ul>\n<li><strong>settings.json</strong></li>\n</ul>\n<p>这个留着后面结合实例来说。</p>\n<h1 id=\"工程编译\"><a class=\"anchor\" href=\"#工程编译\">#</a> 工程编译</h1>\n<p>当你配置完成上面的操作后，最最最好就是先保存所有文件，然后关闭 VS Code，再重新打开工程。</p>\n<p>编译有两种：</p>\n<p>1、点击窗口栏的 终端 -&gt; 运行生成任务（快捷键 Ctrl+Shitf+B）</p>\n<p><img data-src=\"/GCC-develop/20201001010428974.png\" alt=\"在这里插入图片描述\"></p>\n<p>2、点击窗口栏的 终端 -&gt; 新终端，选择 cmd</p>\n<p><img data-src=\"/GCC-develop/2020100101044477.png\" alt=\"在这里插入图片描述\"></p>\n<p>没有的话，那就点击一下它，然后点 “选择默认 Shell”，再点击旁边的垃圾桶，再重新打开一下。</p>\n<p>键入  <code>make</code> ，最后按回车键。当编译完成后就会像下图这样显示编译文件大小：</p>\n<p><img data-src=\"/GCC-develop/20201001010458669.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"编译清除\"><a class=\"anchor\" href=\"#编译清除\">#</a> 编译清除</h1>\n<p>编译文件清除，只需要在终端命令台里键入  <code>make clean</code>  就可以了，但是，但是，如果使用的是 cmd 的 shell，你会发现：</p>\n<p><img data-src=\"/GCC-develop/20201001010520846.png\" alt=\"在这里插入图片描述\"></p>\n<p>并没有清除掉编译出来的文件。这是为什么呢？可以在这里得到答案：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NUQVQ1NDUtVUJDL0Rpc2N1c3Npb24vaXNzdWVzLzU1\">https://github.com/STAT545-UBC/Discussion/issues/55</span></p>\n<p>根据里面的描述可以总结为：</p>\n<p>解决方法 1：使用 Windows 版本的  <code>rm</code>  是  <code>del</code>  ，因此可以简单地用  <code>rm</code>  替换成  <code>del</code>  。但是要注意，这样做意味着您将无法使用 Git Bash shell，因为它不支持  <code>del</code>  命令程序；</p>\n<p>解决方案 2：假设你已安装 Git Bash（没有那就安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">Git</span> 呗，都 0202 了，不会还有人不用 Git 吧，实在实在不想用 Git，那么就找个支持  <code>rm</code>  的终端命令台，例如：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tc3lzMi5vcmcv\">msys2</span>），那么你可以把终端命令台切换到 Bash 上面</p>\n<p>第一个就简单了，在 makefile 里把  <code>rm</code>  替换成  <code>del</code>  ，如下图所示：</p>\n<p><img data-src=\"/GCC-develop/20201001010543269.png\" alt=\"在这里插入图片描述\"></p>\n<p>第二个，就像上面那样重新点击 “选择默认 Shell”，然后选择 Git bash</p>\n<p><img data-src=\"/GCC-develop/20201001010616688.png\" alt=\"在这里插入图片描述\"></p>\n<p><img data-src=\"/GCC-develop/20201001010555724.png\" alt=\"在这里插入图片描述\"></p>\n<p>然后，用这种操作去修改终端 Shell，不同项目对于选择不同的终端，有时候需要经常切换，不方便；那么就有了工作区  <code>settings.json</code>  文件配置的作用了。</p>\n<p>在  <code>settings.json</code>  文件中，我们只需要配置如下操作：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">/* 终端在 Windows 上使用的 shell 的路径 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"terminal.integrated.shell.windows\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe\"</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 如果添加了环境变量可以去掉路径</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"terminal.external.windowsExec\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe\"</span>\t\t<span class=\"token comment\">// 与上面同理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如此一来，那么就只在该项目工作区内产生作用效果。</p>\n<p>你看，颜色都不一样的：</p>\n<p><img data-src=\"/GCC-develop/20201001010634906.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h1>\n<p>下一篇，下载 &amp; 调试环境搭建：<a href=\"https://arachnid.cc/GDB-debuging/\">GDB 调试器 + VSCode 开发</a></p>\n",
            "tags": [
                "history",
                "IDE"
            ]
        },
        {
            "id": "https://arachnid.cc/keil-iar-memory-analysis/",
            "url": "https://arachnid.cc/keil-iar-memory-analysis/",
            "title": "关于 Keil、IAR 编译后数据内存的分析",
            "date_published": "2019-03-19T15:13:17.000Z",
            "content_html": "<h1 id=\"keil-c51编译器\"><a class=\"anchor\" href=\"#keil-c51编译器\">#</a> Keil C51 编译器</h1>\n<p>1、首先，在 Options ----&gt; Target ----&gt; Memory Model 里可以设置变量分配的空间，如图示：<br>\n<img data-src=\"/keil-iar-memory-analysis/20190319214430417.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Small：变量默认分配到内部存储空间中，通过普通的 MOV 指令寻址，只用低于 2K 的程序空间。</li>\n<li>Compact：变量默认分配到外部页存储空间中，单个函数的代码量不能超过 2K，整个程序可以使用 64K 的程序空间，通过 MOVX, @Ri 之类指令寻址，在不切换页的前提下，最大支持 256 字节外部扩展 RAM。</li>\n<li>Large：变量默认分配到外部存储空间中，通过 MOVX, @DPTR 之类指令寻址，最大支持 64kB 外部扩展 RAM（实际上配合硬件设计以及软件调整，还可以支持更大的扩展空间）。</li>\n</ul>\n<p>2、程序中，如果在变量声明时未声明变量的存储器类型，则该变量的存储器类型，由程序的存储模式来决定，也就是说编译器会根据我们在上面 Memory Model 里所选的模式默认储存在那个区域。</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 小模式（Small model）：默认 data 区</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\"><label for=\"cbx_1\"> 紧凑模式（Compact model）：默认 pdata 区</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\">  大模式（Large model）：默认 xdata 区</label></li>\n</ul>\n<p>3、各分配区域的理解<br>\n data：直接寻址的片内 RAM 区低 128B（00H~7FH） , 可以用 acc 直接读写的，速度最快，生成的代码也最小。</p>\n<p>bdata：片内 RAM 的可位寻址区（20H~2FH），允许字节和位混合访问</p>\n<p>idata：单片机间接访问的片内 RAM 区，允许访问全部片内 RAM（前面 0x00-0xff 的 256 个 RAM）, 其中前 128 和 data 的 128 完全相同，只是因为访问的方式不同。idata 是用类似 C 中的指针方式访问的。汇编中的语句为：mox ACC,@Rx.(不重要的补充：C 中 idata 做指针式的访问效果很好)</p>\n<p>pdata：Ri 间接访问的片外 RAM 的低 256B（00H~FFH）</p>\n<p>xdata：外部扩展 RAM，用 DPTR 间接访问片外 RAM，允许访问全部 64KB 片外 RAM（0000H~FFFFH）</p>\n<p>code：单片机的 64KB 程序存储区 ROM，即代码域，它指的是编译器生成的机器指令，这些内容被存储到 ROM 区，写入后就不能再更改，一般当你定义数组不用更改时可以加上这个关键词，对应的 data 是存入 RAM 的意思</p>\n<p>4、如下图所示，编译出来的 “Program Size: data=10.3 xdata=588 code=8732” ，对应的数值就是该区域所占用的空间大小<img data-src=\"/keil-iar-memory-analysis/20190319220144298.png\" alt=\"在这里插入图片描述\"><br>\n 5、根据上面的信息，可以得知以下的 Flash 和 RAM 占用的空间大小，至于不知道为什么在 data 数据区域内有小数点，估计是因为 51 内核的单片机是 8bit 的，并且支持 bit 数据类型，像我们平时一般定义标志位 flag 都是创建 bit 位的，而在这里显示数据，都是以 Byte 为单位的；估计是因为这样的原因吧；如果有哪个大佬知道，可以说明一下。</p>\n<ul>\n<li>Flash = Code + data + xdata</li>\n<li>RAM = data + xdata</li>\n</ul>\n<h1 id=\"keil-mdk-arm编译器\"><a class=\"anchor\" href=\"#keil-mdk-arm编译器\">#</a> Keil MDK-Arm 编译器</h1>\n<p>1、同样是 Keil 编译器，MDK 相对于 C51，在 Options ----&gt; Target 里并没有 Memory Model 的设置，用的比较多的是下面的这个配置<br>\n<img data-src=\"/keil-iar-memory-analysis/20190319220847231.png\" alt=\"在这里插入图片描述\"><br>\n这个是程序存储在片内、片外的地址设置（一般下载程序都是下载到片内 FLASH），我们也不用怎么去更改它；只有在项目做大了，或有特殊要求时，片内不够使用了才将程序存储在片外</p>\n<p>2、数据类型的理解<br>\n Code：即代码域，它指的是编译器生成的机器指令，这些内容被存储到 ROM 区。</p>\n<p>RO-data：Read Only data，即只读数据域，它指程序中用到的只读数据，这些数据被存储在 ROM 区，因而程序不能修改其内容。例如 C 语言中 const 关键字定义的变量就是典型的 RO-data。</p>\n<p>RW-data：Read Write data，即可读写数据域，它指初始化为 “非 0 值” 的可读写数据，程序刚运行时，这些数据具有非 0 的初始值，且运行的时候它们会常驻在 RAM 区，因而应用程序可以修改其内容。例如 C 语言中使用定义的全局变量，且定义时赋予 “非 0 值” 给该变量进行初始化。</p>\n<p>ZI-data：Zero Initialie data，即 0 初始化数据，它指初始化为 “0 值” 的可读写数据域，它与 RW-data 的区别是程序刚运行时这些数据初始值全都为 0，而后续运行过程与 RW-data 的性质一样，它们也常驻在 RAM 区，因而应用程序可以更改其内容。例如 C 语言中使用定义的全局变量，且定义时赋予 “0 值” 给该变量进行初始化 (若定义该变量时没有赋予初始值，编译器会把它当 ZI-data 来对待，初始化为 0)；</p>\n<p>ZI-data 的栈空间 (Stack) 及堆空间 (Heap)：在 C 语言中，函数内部定义的局部变量属于栈空间，进入函数的时候从向栈空间申请内存给局部变量，退出时释放局部变量，归还内存空间。而使用 malloc 动态分配的变量属于堆空间。在程序中的栈空间和堆空间都是属于 ZI-data 区域的，这些空间都会被初始值化为 0 值。编译器给出的 ZI-data 占用的空间值中包含了堆栈的大小 (经实际测试，若程序中完全没有使用 malloc 动态申请堆空间，编译器会优化，不把堆空间计算在内)。</p>\n<p>3、对比 C51 的，显示的数据类型多了那么几项；那么，根据上面的数据理解，就可以得到：</p>\n<ul>\n<li>Flash = Code + RO-data + RW-data</li>\n<li>RAM = RW-data + ZI-data</li>\n</ul>\n<h1 id=\"iar-for-stm8ewstm8编译器\"><a class=\"anchor\" href=\"#iar-for-stm8ewstm8编译器\">#</a> IAR For STM8 (EWSTM8) 编译器</h1>\n<p>1、IAR 查看编译后内存大小不会像 Keil 那样在编译完直接在 Build 窗口显示出来，需要我们去 Options for node 里面设置一下，具体操作 Options for node ----&gt; Linker ----&gt; List ----&gt; 把 Generate linker map file 打勾；如图：<br>\n<img data-src=\"/keil-iar-memory-analysis/20190319223141520.png\" alt=\"在这里插入图片描述\"><br>\n 2、根据上面的操作，设置完后编译，在工作空间窗口 Output 文件下可以找到 .map 的文件，点击打开，在末尾可以看到目标代码占用的空间大小，如图所示：<br>\n<img data-src=\"/keil-iar-memory-analysis/20190319224645748.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Flash = readonly  code memory + readonly  data memory</li>\n<li>RAM = readwrite data memory</li>\n</ul>\n<p>括号内的，表示内存的绝对使用量，对应你设的全局变量大小；对应生成的 bin 文件大小 = 5590 + 168</p>\n<h1 id=\"keil下的-map文件\"><a class=\"anchor\" href=\"#keil下的-map文件\">#</a> Keil 下的 .map 文件</h1>\n<p>实际上在 keil 下也是可以找到 .map 编译信息的，在 Options ----&gt; Listings 里：<br>\n<img data-src=\"/keil-iar-memory-analysis/20201010202944218.png\" alt=\"在这里插入图片描述\"><br>\n如此操作，就可以在 Select Folder for Listings... 设置的文件夹里找到 .map 编译信息文件了。</p>\n<h1 id=\"优化\"><a class=\"anchor\" href=\"#优化\">#</a> 优化</h1>\n<p>一般每个编译器都有优化选项，对应选择不同的优化等级，你会发现同样的代码，编译出来的占用内存大小是不同的，再细心一点同样可以发现存放在 RAM 区域的内存大小是不会怎么变化的，变化较大的是存在 Flash 区域的内存，所以一般的不会定义全局变量（除非真的要用到），并且全局变量处理起来比较麻烦；另外，开了优化后，如果进入调试，可能有些地方会放不了小红点（打断点），因为编译器根据你所选的优化等级，把对应的代码给优化了。</p>\n",
            "tags": [
                "history",
                "IDE"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "命运转轮 • All posts by \"linux\" tag",
    "description": "不曾亏欠, 不曾辜负, 如此足矣",
    "home_page_url": "https://arachnid.cc",
    "items": [
        {
            "id": "https://arachnid.cc/net-tools-vs-proute2/",
            "url": "https://arachnid.cc/net-tools-vs-proute2/",
            "title": "Linux 网络管理套件",
            "date_published": "2024-03-19T11:51:15.783Z",
            "content_html": "<h1 id=\"简述\"><a class=\"anchor\" href=\"#简述\">#</a> 简述</h1>\n<ul>\n<li>\n<p>net-tools 起源于 BSD 的 TCP/IP 工具箱，后来成为老版本 Linux 内核中配置网络功能的工具。但自 2001 年起，Linux 社区已经对其停止维护，甚至一些 Linux 发行版比如 Arch Linux 和 CentOS/RHEL 7 则已经完全抛弃了 net-tools，只支持 iproute2。</p>\n</li>\n<li>\n<p>iproute2 的出现旨在从功能上取代 net-tools，是目前主流 Linux 所配带的网络套件，同时提供 net-tools 下 ifconfig 和 route 命令所不具备的高级特性。</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>net-tools</th>\n<th>iproute2</th>\n<th>note</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ifconfig</td>\n<td>ip link</td>\n<td>Listing interfaces</td>\n</tr>\n<tr>\n<td>ifconfig -a</td>\n<td>ip addr</td>\n<td>Show addresses</td>\n</tr>\n<tr>\n<td>route</td>\n<td>ip route</td>\n<td>Routing tables</td>\n</tr>\n<tr>\n<td>arp</td>\n<td>ip neigh</td>\n<td>Neighbors</td>\n</tr>\n<tr>\n<td>iptunnel</td>\n<td>ip tunnel</td>\n<td>Tunnels</td>\n</tr>\n<tr>\n<td>nameif, ifrename</td>\n<td>ip link set name</td>\n<td>Rename network interfaces</td>\n</tr>\n<tr>\n<td>ipmaddr</td>\n<td>ip maddr</td>\n<td>Multicast</td>\n</tr>\n<tr>\n<td>netstat</td>\n<td>ss</td>\n<td>Show various networking statistics</td>\n</tr>\n<tr>\n<td>brctl</td>\n<td>bridge</td>\n<td>Handle bridge addresses and devices</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"基本对照\"><a class=\"anchor\" href=\"#基本对照\">#</a> 基本对照</h1>\n<h2 id=\"列出-active-网卡接口信息\"><a class=\"anchor\" href=\"#列出-active-网卡接口信息\">#</a> 列出 active 网卡接口信息</h2>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span></pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">link</span> show up</pre></td></tr></table></figure><h2 id=\"显示网络接口-ip-地址\"><a class=\"anchor\" href=\"#显示网络接口-ip-地址\">#</a> 显示网络接口 ip 地址</h2>\n<p>显示所有接口或指定接口（eg：eth0）的 ip 地址</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span> <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ifconfig</span> eht0</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ip</span> addr show dev eth0</pre></td></tr></table></figure><h2 id=\"激活或禁止网络接口\"><a class=\"anchor\" href=\"#激活或禁止网络接口\">#</a> 激活或禁止网络接口</h2>\n<p>启动或关闭某个接口（eg：eth0）</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 up/down</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> up/down eth0</pre></td></tr></table></figure><h2 id=\"分配-ipv4ipv6-地址\"><a class=\"anchor\" href=\"#分配-ipv4ipv6-地址\">#</a> 分配 ipv4/ipv6 地址</h2>\n<p>给某个接口（eg：eth0）临时配置 ipv4/ipv6 地址，并加上子掩码</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 <span class=\"token number\">192.168</span>.1.56 netmask <span class=\"token number\">255.255</span>.255.0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 inet6 <span class=\"token function\">add</span> <span class=\"token number\">2002</span>:0db5:0:f102::1/64</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.56/24 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token parameter variable\">-6</span> addr <span class=\"token function\">add</span> <span class=\"token number\">2002</span>:0db5:0:f102::1/64 dev eth0</pre></td></tr></table></figure><h2 id=\"删除-ipv4ipv6-地址\"><a class=\"anchor\" href=\"#删除-ipv4ipv6-地址\">#</a> 删除 ipv4/ipv6 地址</h2>\n<p>就 ip 地址的移除而言，除了给接口分配全 0 地址外，net-tools 没有提供任何合适的方法来移除网络接口的 ipv4 地址。</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 inet6 del <span class=\"token number\">2002</span>:0db5:0:f102::1/64</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> addr del <span class=\"token number\">192.168</span>.1.56/24 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token parameter variable\">-6</span> addr del <span class=\"token number\">2002</span>:0db5:0:f102::1/64 dev eth0</pre></td></tr></table></figure><h2 id=\"修改-mac-地址\"><a class=\"anchor\" href=\"#修改-mac-地址\">#</a> 修改 MAC 地址</h2>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ifconfig</span> eth0 hw ether 00:AA:BB:CC:DD:EE</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> dev eth0 address 00:AA:BB:CC:DD:EE</pre></td></tr></table></figure><h2 id=\"查看套接字统计信息\"><a class=\"anchor\" href=\"#查看套接字统计信息\">#</a> 查看套接字统计信息</h2>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">netstat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-l</span></pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ss</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ss <span class=\"token parameter variable\">-l</span></pre></td></tr></table></figure><h2 id=\"查看-arp-表\"><a class=\"anchor\" href=\"#查看-arp-表\">#</a> 查看 ARP 表</h2>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arp <span class=\"token parameter variable\">-an</span></pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> n</pre></td></tr></table></figure><h2 id=\"添加-删除或查看多播地址\"><a class=\"anchor\" href=\"#添加-删除或查看多播地址\">#</a> 添加、删除或查看多播地址</h2>\n<p>对某个接口（eg：eth0）临时操作多播地址及查看</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ipmaddr <span class=\"token function\">add</span> <span class=\"token number\">33</span>:44:00:00:00:01 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ipmaddr del <span class=\"token number\">33</span>:44:00:00:00:01 dev eth0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ipmaddr show dev eth0</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> maddr <span class=\"token function\">add</span> <span class=\"token number\">33</span>:44:00:00:00:01 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ip</span> maddr del <span class=\"token number\">33</span>:44:00:00:00:01 dev eth0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ip</span> maddr list dev eth0</pre></td></tr></table></figure><h2 id=\"查看-ip-路由表\"><a class=\"anchor\" href=\"#查看-ip-路由表\">#</a> 查看 ip 路由表</h2>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>route <span class=\"token parameter variable\">-n</span></pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> route</pre></td></tr></table></figure><h2 id=\"添加或修改默认路由\"><a class=\"anchor\" href=\"#添加或修改默认路由\">#</a> 添加或修改默认路由</h2>\n<p>对某个接口（eg：eth0）添加或修改默认路由</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>route add/del default gw <span class=\"token number\">192.168</span>.10.1 eth0</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> route add/del default via <span class=\"token number\">192.168</span>.10.1 dev eth0</pre></td></tr></table></figure><h2 id=\"添加或删除静态路由\"><a class=\"anchor\" href=\"#添加或删除静态路由\">#</a> 添加或删除静态路由</h2>\n<p>对某个接口（eg：eth0）添加或删除静态路由</p>\n<ul>\n<li>net-tools</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">172.14</span>.32.0/24 gw <span class=\"token number\">192.168</span>.1.1 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>route del <span class=\"token parameter variable\">-net</span> <span class=\"token number\">172.14</span>.32.0/24</pre></td></tr></table></figure><ul>\n<li>iproute2</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ip</span> route <span class=\"token function\">add</span> <span class=\"token number\">172.14</span>.32.0/24 via <span class=\"token number\">192.168</span>.1.1 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ip</span> route del <span class=\"token number\">172.14</span>.32.0/24</pre></td></tr></table></figure><h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3Vndml0YWxlLndvcmRwcmVzcy5jb20vMjAxMS8xMi8yMS9kZXByZWNhdGVkLWxpbnV4LW5ldHdvcmtpbmctY29tbWFuZHMtYW5kLXRoZWlyLXJlcGxhY2VtZW50cy8=\">https://dougvitale.wordpress.com/2011/12/21/deprecated-linux-networking-commands-and-their-replacements/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmF0dXJpbi5vcmcvZG9jcy9pcHJvdXRlMi8=\">https://www.baturin.org/docs/iproute2/</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/linux-network-config-tool/",
            "url": "https://arachnid.cc/linux-network-config-tool/",
            "title": "Linux 网络一探究竟",
            "date_published": "2024-03-06T12:46:05.793Z",
            "content_html": "<h1 id=\"常见网络配置工具包\"><a class=\"anchor\" href=\"#常见网络配置工具包\">#</a> 常见网络配置工具包</h1>\n<p>配置「Linux 操作系统」的网络有以下几款主流的配置工具可供选择：</p>\n<table>\n<thead>\n<tr>\n<th>配置工具</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW5wYWdlcy5kZWJpYW4ub3JnL2J1c3Rlci9pZnVwZG93bi9pbnRlcmZhY2VzLjUuZW4uaHRtbA==\">ifupdown</span></td>\n<td>用来启动 / 关闭网络的标准工具（Debian 及部分衍生版本特有），配置文件在  <code>/etc/network/interfaces</code> 。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvU3lzdGVtZC1uZXR3b3JrZA==\">systemd-networkd</span></td>\n<td>systemd 是许多发行版默认的 kernel 程序，其中 systemd-networkd 组件可用于网络配置管理，配置文件在  <code>/etc/systemd/network/</code> 。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTmV0d29ya01hbmFnZXI=\">NetworkManager</span></td>\n<td>一个为桌面版提供的图形化前端工具，也可以使用内嵌的  <code>nmcli</code>  和  <code>nmtui</code>  进行配置。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRwbGFuLmlvLw==\">netplan</span></td>\n<td>通过 YAML 文件管理网络配置，支持 systemd-networkd 和 NetworkManager 作为后端程序，配置文件在  <code>/etc/netplan/*.yaml</code> 。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"ifupdown\"><a class=\"anchor\" href=\"#ifupdown\">#</a> ifupdown</h1>\n<p><code>ifupdown</code>  网络管理器一直以来都是 Debian 默认使用的网络管理器。大多数教程描述的配置  <code>/etc/network/interfaces</code>  文件就是来自于对  <code>ifupdown</code>  网络的管理。</p>\n<p>与早期版本的 Red Hat 发行版类似，Debian 把网络配置写在一个文件内，并从文件内加载配置。</p>\n<p>但与 Red Hat 系发行版不同的是，Red Hat 发行版将不同的网卡配置文件保存在  <code>/etc/sysconfig/network-scripts/</code>  文件夹中，而 Debian 则将网卡配置统一写在  <code>/etc/network/interfaces</code>  文件中。</p>\n<p>同样的，像 Debian 的衍生版本也会延续将网络配置文件统一写在  <code>/etc/network/interfaces</code>  文件中，例如早期的 Ubuntu 系统，而在 Ubuntu 18.04 LTS 后将使用  <code>netplan</code>  命令和基于  <code>/etc/netplan/*.yaml</code>  文件的配置方法；如果在 Ubuntu 18 上打开  <code>/etc/network/interfaces</code>  文件将会看到提示，而 Ubuntu 20 上则已经完全移除了  <code>/etc/network/interfaces</code>  文件。</p>\n<p>对于  <code>ifupdown</code>  的文件配置，虽然系统默认的网络配置文件是在  <code>/etc/network/interfaces</code>  文件中，但 Debian 给出的最佳实现是将网络配置保存到  <code>/etc/network/interface.d/</code>  下；一些常规的配置如下：</p>\n<ul>\n<li>\n<p>使用 DHCP 自动配置接口</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>auto eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>allow-hotplug eth0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>iface eth0 inet dhcp\t# ipv4 DHCP 模式</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># iface eth0 inet6 dhcp/auto\t# ipv6 DHCP 或 Auto 模式</pre></td></tr></table></figure></li>\n<li>\n<p>使用静态 IP 配置接口</p>\n<p>ipv4：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>auto eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iface eth0 inet static</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\taddress 192.0.2.7/24</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tnetmask 255.255.255.0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tgateway 192.0.2.254</pre></td></tr></table></figure><p>ipv6：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>auto eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iface eth0 inet6 static</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\taddress 2001:db8::c0ca:1eaf/64</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tnetmask 64</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tgateway 2001:db8::1ead:ed:beef</pre></td></tr></table></figure></li>\n<li>\n<p>设置 DNS</p>\n<p>如果你要直接 ping 域名就需要开启 DNS 服务，在这里有两种方法：</p>\n<p>一种是修改  <code>/etc/resolv.conf</code>  文件，添加需要配置的 DNS，例如添加两个 DNS 服务：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nameserver 8.8.8.8</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nameserver 114.114.114.114</pre></td></tr></table></figure><p>另一种是直接编辑  <code>/etc/network/interfaces</code>  文件，但这种需要  <code>resolvconf</code>  程序的支持：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>auto eth0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iface eth0 inet static</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\taddress 192.0.2.7/24</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tnetmask 255.255.255.0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tgateway 192.0.2.254</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tdns-nameservers 8.8.8.8 114.114.114.114\t# 此行便是用作 DNS 解析，对于多个解析地址，应共用一行并用空格区分</pre></td></tr></table></figure><p>note：这两种方法各有缺点， <code>/etc/resolv.conf</code>  中的 DNS 配置将会被 C 库或其它解析器库所查找并解析 DNS 服务，同时该文件还会被 resolvconf、network-manager 及 DHCP 客户端修改所覆盖；而在  <code>/etc/network/interfaces</code>  上编辑，则需要提供  <code>resolvconf</code>  程序，可以使用  <code>which resolvconf</code>  命令查看是否存在，否者将要进行下载才可使用。</p>\n</li>\n<li>\n<p>网络接口生效</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>systemctl restart networking</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ifdown</span> eth0 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ifup</span> eth0</pre></td></tr></table></figure></li>\n</ul>\n<p>tips：</p>\n<p>在  <code>/etc/network/interfaces</code>  文件中一般用  <code>auto</code>  或者  <code>allow-hotplug</code>  来定义接口的启动行为。</p>\n<ul>\n<li>auto：在系统启动的时候启动网络接口，无论网络接口有无连接（插入网线）；如果该接口配置了 DHCP，则无论有无网线，系统都会去执行 DHCP，如果没有插入网线，则等该接口超时后才会继续。</li>\n<li>allow-hotplug：只有当内核从该接口检测到热插拔事件后才启动该接口。如果系统开机时该接口没有插入网线，则系统不会启动该接口，系统启动后，如果插入网线，系统会自动启动该接口（也就是将网络接口设置为热插拔模式），但是值得注意的是，重启  <code>networking</code>  之后网卡不能自动重启。</li>\n</ul>\n<h1 id=\"systemd-networkd\"><a class=\"anchor\" href=\"#systemd-networkd\">#</a> systemd-networkd</h1>\n<p><code>systemd-networkd</code>  网络管理器是  <code>systemd</code>  软件包其中的一个组件，目前一些主流的 Linux 系统都内置着  <code>systemd</code>  包，像 Arch、Debian、Ubuntu 等。</p>\n<ul>\n<li>\n<p>静态 IP 配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 启动 \"ens37\" 接口并配置一个静态地址。 此处设置的网关将被用作默认路由。</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/systemd/network/10-static-ens37.network <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>[Match]</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>Name=ens37</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>[Network]</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>Address=192.168.0.2/24</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>Gateway=192.168.0.1</pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre>DNS=192.168.0.1</pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>EOF</pre></td></tr></table></figure></li>\n<li>\n<p>DHCP 配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 在所有名字以 \"en\" 开头的接口 (也就是以太网接口) 上开启 DHCPv4 与 DHCPv6</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/systemd/network/10-dhcp-en.network <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>[Match]</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>Name=en*</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>[Network]</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>DHCP=yes</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>EOF</pre></td></tr></table></figure></li>\n<li>\n<p>服务启动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>systemctl start systemd-networkd</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> systemd-networkd</pre></td></tr></table></figure></li>\n</ul>\n<p>剩下的这里就不详细阐述了，说一下值得注意的点吧：</p>\n<ul>\n<li>如果 <em>.network</em> 文件中指定了 DNS 条目，则 <em>systemd-resolved</em> 服务是必需的， <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvc3lzdGVtZC1yZXNvbHZlZA==\">systemd-resolved</span> 是可选的，它是一个为本地应用程序提供网络名称（DNS）解析服务。</li>\n<li>配置文件位于  <code>/usr/lib/systemd/network</code> ，非持久化的运行时网络配置目录位于  <code>/run/systemd/network</code>  ，本地管理网络配置位于  <code>/etc/systemd/network</code> 。 <code>/etc/systemd/network</code>  中的配置文件具有最高优先级。</li>\n<li>如果某个网络接口既没有配置静态 IPv6 地址、也没有启用 DHCPv6 或 IPv6LL 的话， 将会被视为禁用 IPv6 支持。同时，systemd 将会自动向  <code>/proc/sys/net/ipv6/conf/if_name/disable_ipv6</code>  中写入 &quot;1&quot;，以彻底禁用此接口上的 IPv6 支持。</li>\n</ul>\n<p>ref：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eGNuLm9yZy93aWtpL1N5c3RlbWQtbmV0d29ya2Q=\">https://wiki.archlinuxcn.org/wiki/Systemd-networkd</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvU3lzdGVtZE5ldHdvcmtk\">https://wiki.debian.org/SystemdNetworkd</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamluYnVndW8uY29tL3N5c3RlbWQvc3lzdGVtZC5uZXR3b3JrLmh0bWw=\">https://www.jinbuguo.com/systemd/systemd.network.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXNvbmdtaW4uZ2l0aHViLmlvL29zLXN5c3RlbWQtbmV0d29ya2Qv\">https://lisongmin.github.io/os-systemd-networkd/</span></p>\n<h1 id=\"networkmanager\"><a class=\"anchor\" href=\"#networkmanager\">#</a> NetworkManager</h1>\n<p><code>NetworkManager</code>  是一个为系统提供检测和配置功能以便自动连接到网络的程序。 <code>NetworkManager</code>  的功能对无线和有线网络都很有用。其有两个组件：</p>\n<ol>\n<li>一个以超级用户运行的守护进程（network-manager）；</li>\n<li>一个前端管理程序（network-manager-gnome、network-manager-kde 或者 cnetworkmanager）。</li>\n</ol>\n<p><strong>默认情况下， <code>NetworkManager</code>  不接管任何  <code>/etc/network/interfaces</code>  里配置的网络接口，而对于已经在  <code>/etc/network/interfaces</code>  中声明过的网络接口，在 Desktop 环境上你会看到  <code>NetworkManager</code>  菜单中相应的网络接口显示 “device not managed”，但如果使用  <code>NetworkManager</code>  的  <code>nmcli</code>  或  <code>nmtui</code>  工具去配置  <code>/etc/network/interfaces</code>  中声明过的网络接口，可能会对该网卡造成冲突（包括其它的网络配置服务共存也将导致冲突）。</strong></p>\n<p>如果希望  <code>NetworkManager</code>  接管在  <code>/etc/network/interfaces</code>  配置了的网络接口，则进行以下操作：</p>\n<ol>\n<li>\n<p>在  <code>/etc/NetworkManager/NetworkManager.conf</code>  里把  <code>[ifupdown]</code>  中的  <code>managed</code>  属性修改为此设置  <code>managed=true</code> ；如果有手动改过  <code>/etc/network/interfaces</code> ，那么  <code>NetworkManager</code>  会自行把这行改成： <code>managed=false</code> ；</p>\n</li>\n<li>\n<p>以 root 形式重新启动  <code>NetworkManager</code>  服务： <code>sudo systemctl restart NetworkManager</code> 。</p>\n</li>\n</ol>\n<p><code>NetworkManager</code>  除了给 Desktop 环境带来图形操作，还内置提供了一个命令行界面（nmcli）和一个基于 curses 的界面（nmtui）这两个工具：</p>\n<ul>\n<li>nmcli</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 查看 nmcli 使用说明</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>nmcli <span class=\"token parameter variable\">--help</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>Usage: nmcli <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span> OBJECT <span class=\"token punctuation\">&#123;</span> COMMAND <span class=\"token operator\">|</span> <span class=\"token builtin class-name\">help</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre>OPTIONS</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>  -a, <span class=\"token parameter variable\">--ask</span>                                ask <span class=\"token keyword\">for</span> missing parameters</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>  -c, <span class=\"token parameter variable\">--colors</span> auto<span class=\"token operator\">|</span><span class=\"token function\">yes</span><span class=\"token operator\">|</span>no                 whether to use colors <span class=\"token keyword\">in</span> output</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>  -e, <span class=\"token parameter variable\">--escape</span> <span class=\"token function\">yes</span><span class=\"token operator\">|</span>no                      escape columns separators <span class=\"token keyword\">in</span> values</pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre>  -f, <span class=\"token parameter variable\">--fields</span> <span class=\"token operator\">&lt;</span>field,<span class=\"token punctuation\">..</span>.<span class=\"token operator\">>|</span>all<span class=\"token operator\">|</span>common      specify fields to output</pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>  -g, --get-values <span class=\"token operator\">&lt;</span>field,<span class=\"token punctuation\">..</span>.<span class=\"token operator\">>|</span>all<span class=\"token operator\">|</span>common  shortcut <span class=\"token keyword\">for</span> <span class=\"token parameter variable\">-m</span> tabular <span class=\"token parameter variable\">-t</span> <span class=\"token parameter variable\">-f</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre>  -h, <span class=\"token parameter variable\">--help</span>                               print this <span class=\"token builtin class-name\">help</span></pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre>  -m, <span class=\"token parameter variable\">--mode</span> tabular<span class=\"token operator\">|</span>multiline             output mode</pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre>  -o, <span class=\"token parameter variable\">--overview</span>                           overview mode</pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre>  -p, <span class=\"token parameter variable\">--pretty</span>                             pretty output</pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre>  -s, --show-secrets                       allow displaying passwords</pre></td></tr><tr><td data-num=\"16\"></td><td data-command></td><td><pre>  -t, <span class=\"token parameter variable\">--terse</span>                              terse output</pre></td></tr><tr><td data-num=\"17\"></td><td data-command></td><td><pre>  -v, <span class=\"token parameter variable\">--version</span>                            show program version</pre></td></tr><tr><td data-num=\"18\"></td><td data-command></td><td><pre>  -w, <span class=\"token parameter variable\">--wait</span> <span class=\"token operator\">&lt;</span>seconds<span class=\"token operator\">></span>                     <span class=\"token builtin class-name\">set</span> <span class=\"token function\">timeout</span> waiting <span class=\"token keyword\">for</span> finishing operations</pre></td></tr><tr><td data-num=\"19\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td data-command></td><td><pre>OBJECT</pre></td></tr><tr><td data-num=\"21\"></td><td data-command></td><td><pre>  g<span class=\"token punctuation\">[</span>eneral<span class=\"token punctuation\">]</span>       NetworkManager<span class=\"token string\">'s general status and operations</span></pre></td></tr><tr><td data-num=\"22\"></td><td data-command></td><td><pre>  n[etworking]    overall networking control</pre></td></tr><tr><td data-num=\"23\"></td><td data-command></td><td><pre>  r[adio]         NetworkManager radio switches</pre></td></tr><tr><td data-num=\"24\"></td><td data-command></td><td><pre>  c[onnection]    NetworkManager's connections</pre></td></tr><tr><td data-num=\"25\"></td><td data-command></td><td><pre>  d<span class=\"token punctuation\">[</span>evice<span class=\"token punctuation\">]</span>        devices managed by NetworkManager</pre></td></tr><tr><td data-num=\"26\"></td><td data-command></td><td><pre>  a<span class=\"token punctuation\">[</span>gent<span class=\"token punctuation\">]</span>         NetworkManager secret agent or polkit agent</pre></td></tr><tr><td data-num=\"27\"></td><td data-command></td><td><pre>  m<span class=\"token punctuation\">[</span>onitor<span class=\"token punctuation\">]</span>       monitor NetworkManager changes</pre></td></tr></table></figure><ul>\n<li>nmtui</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 查看 NetworkManager 是否启动</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>nmcli networking</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>enabled</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token comment\"># 调出伪图形界面，然后根据选项编辑网络配置，最后启用网络连接。</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>nmtui</pre></td></tr></table></figure><p><img data-src=\"/linux-network-config-tool/FQ0$U9UCJOL_LF_H%7B5%7D3Z41-1709729923652.jpg\" alt=\"img\"></p>\n<p>note：</p>\n<p>一些  <code>NetworkManager</code>  网络命令处理：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 重启服务</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>systemctl restart NetworkManager</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token comment\"># 查看开机自启是否启用</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>systemctl list-unit-files <span class=\"token parameter variable\">--type</span> <span class=\"token function\">service</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> NetworkManager</pre></td></tr></table></figure><p>附：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvemhfQ04vTmV0d29ya01hbmFnZXI=\">https://wiki.debian.org/zh_CN/NetworkManager</span></p>\n<h1 id=\"netplan\"><a class=\"anchor\" href=\"#netplan\">#</a> netplan</h1>\n<p>netplan 是 Canonical (Ubuntu) 开发的，作为某些 Linux 发行版（主力为 ubuntu Linux 发行版）上默认的网络配置命令行工具。netplan 使用 YAML 描述文件来配置网络，然后，通过这些描述为任何给定的底层呈现工具（主要就是  <code>systemd-networkd</code>  和  <code>networkmanager</code>  二种工具）生成必要的配置选项。在 Ubuntu 17.10 引入 netplan 作为 network 的替代品，Ubuntu 20.04 正式使用 netplan 作为网络配置工具。</p>\n<p><img data-src=\"/linux-network-config-tool/a1a80854-netplan_design_overview.svg\" alt=\"img\"></p>\n<p>A、指定 NetworkManager 接管网络</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cat</span> /etc/systemd/network/xxx.yaml</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre><span class=\"token comment\"># Let NetworkManager manage all devices on this system</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>network:</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>  version: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre>  renderer: NetworkManager</pre></td></tr></table></figure><p>最后就可以使用可视化界面配置网络了，一般像在桌面上使用无线连接就会很方便，而不用使用  <code>iw</code>  等命令搜索 WiFi 然后指定 SSID 这么麻烦。</p>\n<p>B、指定 systemd-networkd 接管网络</p>\n<ul>\n<li>\n<p>ipv4 DHCP</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">renderer</span><span class=\"token punctuation\">:</span> networkd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">ethernets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">ens33</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">dhcp4</span><span class=\"token punctuation\">:</span> yes</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">dhcp4-overrides</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token key atrule\">route-metric</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></pre></td></tr></table></figure></li>\n<li>\n<p>单网卡多网段</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">renderer</span><span class=\"token punctuation\">:</span> networkd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">ethernets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">ens33</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> 192.168.1.20/24</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">-</span> 192.168.50.20/24</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token key atrule\">nameservers</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>8.8.8.8<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span> 0.0.0.0/0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">via</span><span class=\"token punctuation\">:</span> 192.168.1.1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">metric</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span> 0.0.0.0/0</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token key atrule\">via</span><span class=\"token punctuation\">:</span> 192.168.50.1</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">metric</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></pre></td></tr></table></figure></li>\n<li>\n<p>桥接</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">renderer</span><span class=\"token punctuation\">:</span> networkd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">ethernets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">enp3s0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">dhcp4</span><span class=\"token punctuation\">:</span> yes</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">bridges</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">br0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">interfaces</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>enp3s0<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">dhcp4</span><span class=\"token punctuation\">:</span> no</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">-</span> 192.168.1.20/24</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span> 0.0.0.0/0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>         <span class=\"token key atrule\">via</span><span class=\"token punctuation\">:</span> 192.168.1.1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         <span class=\"token key atrule\">metric</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">nameservers</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">addresses</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>8.8.8.8<span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n</ul>\n<p>命令：</p>\n<ul>\n<li>\n<p>netplan generate</p>\n<p>将  <code>yaml</code>  文件中的设置转换为适合正在使用的渲染器的配置，但不应用它们。</p>\n</li>\n<li>\n<p>netplan apply<br>\n 应用配置，使配置生效；会自动调用  <code>netplan generate</code> 。</p>\n</li>\n<li>\n<p>netplan try<br>\n 测试配置，然后等待用户的确认；如果取消确认或超时退出则自动恢复配置，注意不是恢复配置文件。</p>\n</li>\n</ul>\n<p>note：</p>\n<p><strong>注意在  <code>/etc/netplan</code>  目录下，有多个  <code>yaml</code>  文件存在时，netplan 是根据字母表排序，挨个生效的，后面的  <code>yaml</code>  指定的配置会覆盖前面的  <code>yaml</code>  指定的配置。</strong></p>\n<p><strong> <code>netplan</code>  会一次从以下 3 个位置读取配置文件，并且按照优先级，仅有一个位置的配置文件生效：</strong></p>\n<ul>\n<li><strong> <code>/run/netplan</code>  优先级最高</strong></li>\n<li><strong> <code>/etc/netplan</code>  次优先级</strong></li>\n<li><strong> <code>/lib/netplan</code>  最低优先级</strong></li>\n</ul>\n<p>ref：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC1hdGxhcy5yZWFkdGhlZG9jcy5pby96aC1jbi9sYXRlc3QvbGludXgvdWJ1bnR1X2xpbnV4L25ldHdvcmsvbmV0cGxhbi5odG1s\">https://cloud-atlas.readthedocs.io/zh-cn/latest/linux/ubuntu_linux/network/netplan.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmljc3lzLmNvbS50dy96aC1oYW5zL3RlY2gvdWIvdWItbmV0d29yay5odG1s\">https://www.vicsys.com.tw/zh-hans/tech/ub/ub-network.html</span></p>\n<h1 id=\"other\"><a class=\"anchor\" href=\"#other\">#</a> other</h1>\n<p>其他包含网络配置的重要文件，但我们在这里不会碰到他们：</p>\n<ul>\n<li><code>/etc/hosts</code>  - 操作系统中使用的计算机文件，用于将主机名映射到 IP 地址。 <code>hosts</code>  文件是一个纯文本文件，通常按照惯例命名为  <code>hosts</code> 。</li>\n<li><code>/etc/hostname</code>  - 分配给连接到计算机网络的设备的标签，并用于识别各种形式的电子通信设备。</li>\n<li><code>/etc/resolv.conf</code>  - 各种操作系统中的计算机文件，用于配置域名系统（DNS）解析器库。该文件是纯文本文件，通常由网络管理员或管理系统配置任务的应用创建。因此  <code>/etc/resolv.conf</code>  是依据网络管理产生，修改  <code>resolv.conf</code>  只在本次有作用，重启服务将会重置。</li>\n</ul>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>桌面环境建议使用 NetworkManager；在服务器上建议使用默认的配置工具 network，或者切换到 systemd-networkd；但是只能选取其一。除了 network 不支持无线配置，其余三个都支持。</p>\n<h2 id=\"关于-networkmanager-与-systemd-networkd-之间的切换\"><a class=\"anchor\" href=\"#关于-networkmanager-与-systemd-networkd-之间的切换\">#</a> 关于 NetworkManager 与 systemd-networkd 之间的切换</h2>\n<p>A、停用 Network Manager 并激活 systemd-networkd</p>\n<ul>\n<li>\n<p>停止并禁用 NetworkManager：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl stop NetworkManager</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl disable NetworkManager</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl mask NetworkManager</pre></td></tr></table></figure></li>\n<li>\n<p>启动和激活 systemd-networkd：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl unmask systemd-networkd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> systemd-networkd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start systemd-networkd</pre></td></tr></table></figure></li>\n</ul>\n<p>B、激活 NetworkManager 关闭 systemd-networkd</p>\n<ul>\n<li>\n<p>停止并禁用 systemd-networkd：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl disable systemd-networkd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl mask systemd-networkd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl stop systemd-networkd</pre></td></tr></table></figure></li>\n<li>\n<p>启动和激活 NetworkManager：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl unmask NetworkManager</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> NetworkManager</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start NetworkManager</pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"关于-netplan-指定-renderer\"><a class=\"anchor\" href=\"#关于-netplan-指定-renderer\">#</a> 关于 netplan 指定 renderer</h2>\n<p>在  <code>/etc/netplan</code>  目录下将配置文件  <code>.yaml</code>  中的  <code>renderer</code>  字段更改为需要的后端工具：</p>\n<ul>\n<li>\n<p>NetworkManager</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">renderer</span><span class=\"token punctuation\">:</span> NetworkManager</pre></td></tr></table></figure></li>\n<li>\n<p>systemd-networkd</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">renderer</span><span class=\"token punctuation\">:</span> networkd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">ethernets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    enxx：</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">...</span></pre></td></tr></table></figure></li>\n</ul>\n<p>最后执行： <code>netplan apply</code> ；如果使用  <code>NetworkManager</code>  则不需要编写后面的  <code>ethernets</code>  字段了，完全交由 GUI 界面操作；而如果  <code>renderer</code>  指定  <code>networkd</code>  ，则为  <code>ethernets</code>  编写对应的网卡配置信息，以使  <code>netplan</code>  配置到  <code>systemd-networkd</code>  工具上。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTmV0d29ya19jb25maWd1cmF0aW9u\">https://wiki.archlinux.org/title/Network_configuration</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvTmV0d29ya0NvbmZpZ3VyYXRpb24=\">https://wiki.debian.org/NetworkConfiguration</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4teGlhby5naXRib29rLmlvL2RlYmlhbi9jb25maWcvbmV0d29yaw==\">https://pan-xiao.gitbook.io/debian/config/network</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pdGJvb24uZ2l0aHViLmlvL2xpbnV4LTIwL25ldHdvcmsvY29uZmlndXJhdGlvbi8=\">https://itboon.github.io/linux-20/network/configuration/</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/linux-environment-variables/",
            "url": "https://arachnid.cc/linux-environment-variables/",
            "title": "Linux 环境变量的增删改",
            "date_published": "2024-03-01T12:54:01.000Z",
            "content_html": "<h1 id=\"shell-和-bash\"><a class=\"anchor\" href=\"#shell-和-bash\">#</a> shell 和 bash</h1>\n<p>在计算机科学中，shell 俗称壳（用来区别于核，核是指 “内核”），shell 是指 “提供使用者使用界面” 的软件（命令解析器）。它类似于  <code>DOS</code>  下的  <code>command.com</code>  和后来的  <code>cmd.exe</code> 。它接收用户命令，然后调用相应的应用程序。</p>\n<p>在很多并不正式的场合，这两个名词表达的意思相同，即命令解释器。但从严格的意义上讲，命令行是指供用户输入命令的界面，其本身只是接受输入，然后把命令传递给命令解释器，后者就是 shell，从本质上讲，shell 是一个程序，它在用户和操作系统之间提供了一个面向行的可交互接口，用户在命令行中输入命令，运行在后台的 shell 把命令转换成指令代码发送给操作系统。shell 并非只有命令行这一种形式，例如 GNOME、KDE 等图形界面也是 shell，不过它们是 GUI shell，都是为了解决人机交互的问题。</p>\n<p>目前在 Linux 环境下有几种不同类型的 shell，常用的有 Bourne Shell（sh）、Bourne Again Shell（bash）、Z Shell（zsh）、C Shell（csh）、tcsh（csh 的扩展）、Korn Shell（ksh）、pdksh（ksh 的扩展）。不同的 Shell 提供不同的语法和特性。</p>\n<p>bash 相当于 shell 中的某个，shell 的范围更广。bash 的全称是 Bourne Again Shell。</p>\n<h1 id=\"获取当前环境变量\"><a class=\"anchor\" href=\"#获取当前环境变量\">#</a> 获取当前环境变量</h1>\n<ul>\n<li>\n<p><code>echo $varname</code>  命令输出当前指定的环境变量的值</p>\n<p>使用  <code>echo</code>  命令可以输出指定的环境变量的值，例如： <code>echo $PATH</code> ，该命令会输出当前用户的  <code>PATH</code>  环境变量值。如果你想查看其他环境变量，只需要将上述命令中的  <code>PATH</code>  替换为其他环境变量即可。</p>\n</li>\n<li>\n<p><code>export</code>  命令显示当前系统定义的所有环境变量</p>\n</li>\n<li>\n<p><code>printenv</code>  /  <code>env</code>  命令查看所有已定义环境变量或指定的环境变量</p>\n<p><code>printenv</code>  或  <code>env</code>  都可以输出所有已定义的环境变量及其对应的值。 <code>printenv</code>  命令也可以单独输出当前指定的环境变量的值，例如： <code>printenv SHELL</code> ，该命令会输出已定义的  <code>SHELL</code>  环境变量值。而  <code>env</code>  命令，可以使用  <code>env | grep VARIABLE_NAME</code> ，查看对应的  <code>VARIABLE_NAME</code>  环境变量值。</p>\n</li>\n</ul>\n<p>note： <code>PATH</code>  变量定义了运行命令的查找路径，以冒号  <code>:</code>  分割不同的路径，使用  <code>export</code>  定义的时候可加双引号也可不加。</p>\n<h1 id=\"设置环境变量\"><a class=\"anchor\" href=\"#设置环境变量\">#</a> 设置环境变量</h1>\n<h2 id=\"临时环境变量\"><a class=\"anchor\" href=\"#临时环境变量\">#</a> 临时环境变量</h2>\n<h3 id=\"export-命令\"><a class=\"anchor\" href=\"#export-命令\">#</a> export 命令</h3>\n<p><code>export</code>  命令也可用于设置环境变量。</p>\n<p>在 shell 中执行程序时，shell 会提供一组环境变量。 <code>export</code>  可新增，修改或删除环境变量，供后续执行的程序使用。 <code>export</code>  的效力仅限于该次登陆操作。</p>\n<h3 id=\"set-命令\"><a class=\"anchor\" href=\"#set-命令\">#</a> set 命令</h3>\n<p><code>set</code>  命令作用主要是显示系统中已经存在的 shell 变量，以及设置 shell 变量的新变量值。使用  <code>set</code>  更改 shell 特性时，符号 &quot;+&quot; 和 &quot;-&quot; 的作用分别是打开和关闭指定的模式。 <code>set</code>  命令不能够定义新的 shell 变量。</p>\n<p>具体可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ251Lm9yZy9zb2Z0d2FyZS9iYXNoL21hbnVhbC9odG1sX25vZGUvVGhlLVNldC1CdWlsdGluLmh0bWw=\">https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html</span></p>\n<h2 id=\"永久环境变量\"><a class=\"anchor\" href=\"#永久环境变量\">#</a> 永久环境变量</h2>\n<h3 id=\"系统级\"><a class=\"anchor\" href=\"#系统级\">#</a> 系统级</h3>\n<ol>\n<li>\n<p><code>/etc/environment</code>  ：系统在登录时读取的第一个文件，用于为所有进程设置环境变量。系统使用此文件时并不是执行此文件中的命令，而是根据  <code>KEY=VALUE</code>  模式的代码，对  <code>KEY</code>  赋值以  <code>VALUE</code> ，因此文件中如果要定义  <code>PATH</code>  环境变量，只需加入类似如  <code>PATH=$PATH:/xxx/bin</code>  的代码即可。</p>\n</li>\n<li>\n<p><code>/etc/profile</code>  ：是系统登录时执行的第二个文件，可以用于设定针对全系统所有用户的环境变量，并从  <code>/etc/profile.d</code>  目录的配置文件中搜集 shell 的设置；这个文件，是任何用户登陆操作系统以后都会读取的文件（如果用户的 shell 是 csh 、tcsh 、zsh ，则不会读取此文件）。该文件一般是调用  <code>/etc/bash.bashrc</code>  文件。</p>\n</li>\n<li>\n<p><code>/etc/bash.bashrc</code>  ：系统级的  <code>bashrc</code>  文件，为每一个运行 bash shell 的用户执行此文件。此文件会在用户每次打开 bash shell 时执行一次；因此，如果你想让每个使用 bash 的用户每新开一个 bash 和每次登陆都执行某些操作，或者给他们定义一些新的环境变量，就可以在这个里面设置。</p>\n</li>\n</ol>\n<p>note：</p>\n<ul>\n<li>\n<p>生效时间：使用相同的用户打开新的终端时生效，或者手动更新环境变量生效（见更新环境变量）</p>\n</li>\n<li>\n<p>生效期限：永久有效</p>\n</li>\n<li>\n<p>生效范围：<mark>所有用户</mark></p>\n</li>\n</ul>\n<h3 id=\"用户级\"><a class=\"anchor\" href=\"#用户级\">#</a> 用户级</h3>\n<ol>\n<li>\n<p>~/.profile: 是对应当前登录用户的  <code>profile</code>  文件，用于定制当前用户的个人工作环境。每个用户都可使用该文件输入专用于自己使用的 shell 信息，当用户登录时，该文件仅仅执行一次。默认情况下，会设置一些环境变量，执行用户的  <code>.bashrc</code>  文件。</p>\n</li>\n<li>\n<p>~/.bashrc: 是对应当前登录用户的 bash 初始化文件，当用户每次打开 bash shell 时，系统都会执行此文件一次。通常设置环境变量修改这个文件。</p>\n</li>\n</ol>\n<p>note：</p>\n<ul>\n<li>生效时间：使用相同的用户打开新的终端时生效，或者手动更新环境变量生效（见更新环境变量）</li>\n<li>生效期限：永久有效</li>\n<li>生效范围：<mark>仅对当前用户有效</mark></li>\n</ul>\n<p><strong>总结：</strong></p>\n<p>环境变量的分类可以简单的分成用户级别的环境变量以及系统级别的环境变量。</p>\n<p>系统级别环境变量定义文件： <code>/etc/bash.bashrc</code> （部分系统为： <code>/etc/bashrc</code> ）、 <code>/etc/profile</code> （部分系统为： <code>/etc/bash_profile</code> ）、 <code>/etc/environment</code></p>\n<p>用户级别环境变量定义文件： <code>~/.bashrc</code> 、 <code>~/.profile</code> （部分系统为： <code>~/.bash_profile</code> ）</p>\n<p>另外在用户环境变量中，系统会首先读取  <code>~/.profile</code> （或者  <code>~/.bash_profile</code> ）文件，如果没有该文件则读取  <code>~/.bash_login</code> ，根据这些文件中内容再去读取  <code>~/.bashrc</code> 。</p>\n<p>环境变量加载顺序：</p>\n<p><code>/etc/enviroment</code>  –&gt;  <code>/etc/profile</code>  –&gt;  <code>/etc/bash.bashrc</code>  –&gt;  <code>~/.profile</code>  –&gt;  <code>~/.bashrc</code></p>\n<p><strong>tips：</strong></p>\n<p>一般在  <code>/etc/profile.d/</code>  目录下创建一个自定义脚本会是修改环境变量的更好方法，这样无论你在一个终端中如何切换用户，环境变量依然存在。eg：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/profile.d/test.sh <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>export PATH=<span class=\"token environment constant\">$PATH</span>:/home/arachnid/mysql/bin</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>EOF</pre></td></tr></table></figure><h1 id=\"删除环境变量\"><a class=\"anchor\" href=\"#删除环境变量\">#</a> 删除环境变量</h1>\n<p>如果是临时环境变量，或者是要临时删除一下环境变量，可以使用  <code>unset</code>  命令： <code>unset VARIABLE_NAME</code> ；如果是要永久删除配置文件中的环境变量，需要去相应的配置文件中移除相关的配置项。</p>\n<h1 id=\"更新环境变量\"><a class=\"anchor\" href=\"#更新环境变量\">#</a> 更新环境变量</h1>\n<p>eg：更新  <code>/etc/profile</code>  文件的环境变量</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">source</span> /etc/profile</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token comment\"># or</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">.</span> /etc/profile</pre></td></tr></table></figure><h1 id=\"常用环境变量\"><a class=\"anchor\" href=\"#常用环境变量\">#</a> 常用环境变量</h1>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DISPLAY</td>\n<td>如果你正在运行图形界面环境，那么这个变量就是你显示器的名字。通常，它是 “:0”， 意思是由 X 产生的第一个显示器。</td>\n</tr>\n<tr>\n<td>EDITOR</td>\n<td>文本编辑器的名字。</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>shell 程序的名字。</td>\n</tr>\n<tr>\n<td>HOME</td>\n<td>用户家目录。</td>\n</tr>\n<tr>\n<td>LANG</td>\n<td>定义了字符集以及语言编码方式。</td>\n</tr>\n<tr>\n<td>OLD_PWD</td>\n<td>先前的工作目录。</td>\n</tr>\n<tr>\n<td>PAGER</td>\n<td>页输出程序的名字。这经常设置为 /usr/bin/less。</td>\n</tr>\n<tr>\n<td>PATH</td>\n<td>由冒号分开的目录列表，当你输入可执行程序名后，会搜索这个目录列表。</td>\n</tr>\n<tr>\n<td>PS1</td>\n<td>Prompt String 1. 这个定义了你的 shell 提示符的内容。随后我们可以看到，这个变量内容可以全面地定制。</td>\n</tr>\n<tr>\n<td>PWD</td>\n<td>当前工作目录。</td>\n</tr>\n<tr>\n<td>TERM</td>\n<td>终端类型名。类 Unix 的系统支持许多终端协议；这个变量设置你的终端仿真器所用的协议。</td>\n</tr>\n<tr>\n<td>TZ</td>\n<td>指定你所在的时区。大多数类 Unix 的系统按照协调时间时 (UTC) 来维护计算机内部的时钟 ，然后应用一个由这个变量指定的偏差来显示本地时间。</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>你的用户名</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvRW52aXJvbm1lbnRfdmFyaWFibGVz\">https://wiki.archlinux.org/title/Environment_variables</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veW91eW91aS9wLzEwNjgwMzI5Lmh0bWw=\">https://www.cnblogs.com/youyoui/p/10680329.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3J2ZHNkLnRvcC8yMDE4LzA0LzI4L0xpbnV4L0xpbnV4JUU3JThFJUFGJUU1JUEyJTgzJUU1JThGJTk4JUU5JTg3JThGLw==\">http://rvdsd.top/2018/04/28/Linux/Linux 环境变量 /</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/omv6-install/",
            "url": "https://arachnid.cc/omv6-install/",
            "title": "debian 11 桌面安装 OMV 6",
            "date_published": "2024-01-13T13:04:04.775Z",
            "content_html": "<h1 id=\"debian-安装\"><a class=\"anchor\" href=\"#debian-安装\">#</a> Debian 安装</h1>\n<p>需要注意的几个点是：</p>\n<ol>\n<li>安装语言的时候选择英文安装，否者会造成部分乱码，至于后面想要使用中文，安装完成后再配置就好了。</li>\n<li>配置软件包不需要选择网络镜像，后期再配置镜像源。</li>\n<li>勾选 ssh 服务，以方便远程操作；至于是否选择图形界面，随个人喜好。</li>\n</ol>\n<h2 id=\"基本配置\"><a class=\"anchor\" href=\"#基本配置\">#</a> 基本配置</h2>\n<h3 id=\"添加-sudo-管理组\"><a class=\"anchor\" href=\"#添加-sudo-管理组\">#</a> 添加 sudo 管理组</h3>\n<p><code>your_name is not in the sudoers file. This incident will be reported.</code></p>\n<p>出现这种情况一般是你用普通用户键入  <code>sudo</code>  命令，但这个用户又没有加入  <code>sudo</code>  组上面，导致权限不够。</p>\n<p>解决：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>添加设置默认网关</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[your_name@localhost] $\"></td><td><pre><span class=\"token function\">su</span> -</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>Password: </pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>visudo</pre></td></tr></table></figure><p>然后移动光标，添加  <code>your_name ALL=(ALL:ALL) ALL</code>  在  <code># User privilege specification</code>  下面，根据提示  <code>写入 ^O</code>  ， <code>回车 Enter</code>  确认保存，  <code>退出 ^X</code>   ，得到：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>添加设置默认网关</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cat</span> /etc/sudoers</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># This <span class=\"token function\">file</span> MUST be edited with the <span class=\"token string\">'visudo'</span> <span class=\"token builtin class-name\">command</span> as root.</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># Please consider adding <span class=\"token builtin class-name\">local</span> content <span class=\"token keyword\">in</span> /etc/sudoers.d/ instead of</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># directly modifying this file.</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># See the <span class=\"token function\">man</span> page <span class=\"token keyword\">for</span> details on how to <span class=\"token function\">write</span> a sudoers file.</pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>Defaults\tenv_reset</pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre>Defaults\tmail_badpass</pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre>Defaults\t<span class=\"token assign-left variable\">secure_path</span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># Host <span class=\"token builtin class-name\">alias</span> specification</pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># User <span class=\"token builtin class-name\">alias</span> specification</pre></td></tr><tr><td data-num=\"17\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># Cmnd <span class=\"token builtin class-name\">alias</span> specification</pre></td></tr><tr><td data-num=\"19\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># User privilege specification</pre></td></tr><tr><td data-num=\"21\"></td><td data-command></td><td><pre>root\t<span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL:ALL<span class=\"token punctuation\">)</span> ALL</pre></td></tr><tr><td data-num=\"22\"></td><td data-command></td><td><pre>your_name\t<span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL:ALL<span class=\"token punctuation\">)</span> ALL</pre></td></tr><tr><td data-num=\"23\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># Allow members of group <span class=\"token function\">sudo</span> to execute any <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"25\"></td><td data-command></td><td><pre>%sudo\t <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL:ALL<span class=\"token punctuation\">)</span> ALL</pre></td></tr><tr><td data-num=\"26\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td data-command></td><td><pre><span class=\"token punctuation\">\\</span># See sudoers<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information on <span class=\"token string\">\"@include\"</span> directives:</pre></td></tr><tr><td data-num=\"28\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td data-command></td><td><pre>@includedir /etc/sudoers.d</pre></td></tr></table></figure><p>note：</p>\n<p><code>su</code>  带有  <code>-</code>  ，这和  <code>su</code>  是不同的，在用命令  <code>su</code>  的时候只是切换到 root，但没有把 root 的环境变量传过去，还是当前用户的环境变量，用  <code>su -</code>  命令会将环境变量也一起带过去，就像和  <code>root</code>  登录一样。关于  <code>su -</code>  的分析可参看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZGJvb2wuY29tL2Rwa2ctcmVjb25maWd1cmUtYmFzaC1jb21tYW5kLW5vdC1mb3VuZC5odG1s\">dpkg-reconfigure 命令找不到问题解决</span></p>\n<h3 id=\"避免提示光盘安装软件包\"><a class=\"anchor\" href=\"#避免提示光盘安装软件包\">#</a> 避免提示光盘安装软件包</h3>\n<p><code>Media change: please insert the disc labeled 'Debian GNU/Linux xxx DVD' Media change: please insert the disc labeled.</code></p>\n<p>在 Debian 系统中，如果您碰巧使用 DVD 安装，当你调用  <code>apt</code>  时，会抛出一个错误消息，表示存储库 cdrom 没有发布文件，并要求插入 Debian 光盘来离线安装软件包，这时候我们需要绕过去掉提示，以便使用网络安装。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/apt/sources.list</pre></td></tr></table></figure><p>得到：</p>\n<figure class=\"highlight wiki\"><figcaption data-lang=\"Wiki markup\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">#</span> deb cdrom:<span class=\"token url\">[Debian GNU/Linux 11.8.0 _Bullseye_ - Official amd64 DVD Binary-1 20231007-14:05]</span>/ bullseye contrib main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deb cdrom:<span class=\"token url\">[Debian GNU/Linux 11.8.0 _Bullseye_ - Official amd64 DVD Binary-1 20231007-14:05]</span>/ bullseye contrib main</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">#</span> Line commented out by installer because it failed to verify:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">#</span>deb http://security.debian.org/debian-security bullseye-security main contrib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">#</span> Line commented out by installer because it failed to verify:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">#</span>deb-src http://security.debian.org/debian-security bullseye-security main contrib</pre></td></tr></table></figure><p>可以看到，默认是先通过  <code>deb cdrom:...</code>  安装软件的。所以在前面加一个  <code>#</code>  把这行注释掉即可；最后  <code>写入 ^O</code>  ， <code>回车 Enter</code>  确认保存，  <code>退出 ^X</code>  。</p>\n<h3 id=\"更换软件包镜像源\"><a class=\"anchor\" href=\"#更换软件包镜像源\">#</a> 更换软件包镜像源</h3>\n<p><code>E: Package 'xxx' has no installation candidate.</code></p>\n<p>这种情况一般是软件包获取不到，可能是网络问题，也可能是因为源的问题，换个好一点的镜像源就行了。</p>\n<p>例如：更换为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvZGViaWFuLw==\">清华源地址</span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/apt/sources.list /etc/apt/sources.list.back</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/apt/sources.list</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr></table></figure><p>note：</p>\n<p>先找到镜像源文件并备份，然后使用  <code>nano</code>  编辑，把获取到的镜像源地址全部覆盖替换原有的文本，最后再执行  <code>apt update</code>  更新软件包，至此就可以安装原本装失败的软件了。如果用不习惯  <code>nano</code>  编辑器，可以安装  <code>vim</code>  。</p>\n<h3 id=\"内核编译工具\"><a class=\"anchor\" href=\"#内核编译工具\">#</a> 内核编译工具</h3>\n<p><code>make[n]: *** /lib/modules/kernel_version-amd64/build: No such file or directory.</code></p>\n<p>在编译部署内核模块的时候，如果报这个错误，是因为没有  <code>linux-headers</code>  导致。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> linux-headers-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-r</span><span class=\"token variable\">)</span></span>-amd64</pre></td></tr></table></figure><p>note：</p>\n<p>命令  <code>uname -r</code>  就是用来获取当前内核版本的。</p>\n<p>一般编译驱动会用到  <code>sudo apt-get install build-essential linux-headers-$(uname -r)-amd64</code></p>\n<h3 id=\"网卡驱动添加\"><a class=\"anchor\" href=\"#网卡驱动添加\">#</a> 网卡驱动添加</h3>\n<p>获取网卡型号：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lspci <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> net</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>02:00.0 Network controller: Realtek Semiconductor Co., Ltd. RTL8723BE PCIe Wireless Network Adapter</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>03:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller <span class=\"token punctuation\">(</span>rev <span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中  <code>Ethernet controller</code>  后面的表示以太网有线网卡，这里是 RTL8111/8168/8411；  <code>Network controller</code>  后面表示无线网卡，这里则是 RTL8723BE。</p>\n<ul>\n<li>\n<p>有线网卡</p>\n<p>一般主板上的有线网卡都是自带驱动的，但不排除驱动不管用或者另类没有，这个时候就需要自己找驱动，当然，如果有现成编译好打好包的驱动，那么只需要用 U 盘 copy 到系统然后进行安装即可，如果没有，那么就需要自己编译驱动了，这是一个很麻烦的事，特别是你完全没网的时候，光是安装一堆依赖都得一个个找。。。</p>\n<p>当然你也可以找个联网的虚拟机，安装一样的系统，编译好再 copy 过去；或者利用  <code>apt-cache depends package_name</code>  获取安装依赖，然后一个个安装；对于  <code>.deb</code>  文件，可以用  <code>dpkg --info path_deb_file</code>  查看。</p>\n</li>\n<li>\n<p>无线网卡</p>\n<p>在 Debian 最小安装中，是不存在无线网卡驱动的，只能自己安装：</p>\n<ul>\n<li>\n<p>intel 的无线网卡驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> firmware-iwlwifi</pre></td></tr></table></figure><p>支持型号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1bGxzZXllL2Zpcm13YXJlLWl3bHdpZmk=\">https://packages.debian.org/bullseye/firmware-iwlwifi</span></p>\n</li>\n<li>\n<p>realtek（小螃蟹）的无线网卡驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> firmware-realtek</pre></td></tr></table></figure><p>支持型号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1bGxzZXllL2Zpcm13YXJlLXJlYWx0ZWs=\">https://packages.debian.org/bullseye/firmware-realtek</span></p>\n</li>\n<li>\n<p>高通的无线网卡驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> firmware-atheros</pre></td></tr></table></figure><p>支持型号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1bGxzZXllL2Zpcm13YXJlLWF0aGVyb3M=\">https://packages.debian.org/bullseye/firmware-atheros</span></p>\n</li>\n<li>\n<p>other：</p>\n<p>当然，如果你像一劳永逸，可以直接安装  <code>firmware-nonfree</code>  整个大包，或者在里面找相应的型号子包安装：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL3NvdXJjZS9idWxsc2V5ZS9maXJtd2FyZS1ub25mcmVlJUVGJUJDJTlCJUU4JTgwJThDJUU1JUFGJUI5JUU0JUJBJThFJUU1JTg1JUI2JUU1JUFFJTgzJUU2JUFGJTk0JUU4JUJFJTgzJUU2JTk2JUIwJUU3JTlBJTg0JUU4JUFFJUJFJUU1JUE0JTg3JUU2JTg4JTk2JUU4JTgwJTg1JUU0JUI4JThEJUU1JTlDJUE4JUU2JUI4JTg1JUU1JThEJTk1JUU0JUI4JThBJUU3JTlBJTg0JUU4JUFFJUJFJUU1JUE0JTg3JUVGJUJDJThDJUU1JThGJUFGJUU0JUJCJUE1JUU1JThFJUJCJUU1JUFFJTk4JUU3JUJEJTkxJUU2JTg4JTk2JUU4JTgwJTg1JUU1JUJDJTgwJUU2JUJBJTkwJUU1JUI5JUJGJUU1JTlDJUJBJUU0JUI4JThBJUU2JTg5JUJFJUVGJUJDJThDJUU0JUJEJTg2JUU1JUE0JUE3JUU5JTgzJUE4JUU1JTg4JTg2JUU5JTlDJTgwJUU4JUE2JTgxJUU4JTg3JUFBJUU1JUI3JUIxJUU3JUJDJTk2JUU4JUFGJTkxJUU5JUE5JUIxJUU1JThBJUE4JUUzJTgwJTgy\">https://packages.debian.org/source/bullseye/firmware-nonfree；而对于其它比较新的设备或者不在清单上的设备，可以去官网或者开源广场上找，但大部分需要自己编译驱动。</span></p>\n</li>\n</ul>\n</li>\n</ul>\n<p>关于网卡驱动安装完后，可以  <code>reboot</code>  重启，然后执行  <code>dmesg -l err</code>  查看日志，看驱动是否生效，如果没有，将会出现 error，然后排查解决就好了。</p>\n<h3 id=\"引导时间修改\"><a class=\"anchor\" href=\"#引导时间修改\">#</a> 引导时间修改</h3>\n<p>如果你是单系统，可以更改引导时间缩短跳转启动系统的时间。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nano</span> /etc/default/grub</pre></td></tr></table></figure><p>更改  <code>GRUB_TIMEOUT</code>  数值为 1，这里建议不要改成 0，留出 1s 的时间，防止以后有用到。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /etc/default/grub</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># If you change this file, run 'update-grub' afterwards to update</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># /boot/grub/grub.cfg.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># For full documentation of the options in this file, see:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#   info -f grub -n 'Simple configuration'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">GRUB_DEFAULT</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">GRUB_TIMEOUT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">GRUB_DISTRIBUTOR</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>lsb_release <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-s</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">echo</span> Debian<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX_DEFAULT</span><span class=\"token operator\">=</span><span class=\"token string\">\"quiet\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Uncomment to enable BadRAM filtering, modify to suit your needs</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># This works with Linux (no patch required) and with any kernel that obtains</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#GRUB_BADRAM=\"0x01234567,0xfefefefe,0x89abcdef,0xefefefef\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Uncomment to disable graphical terminal (grub-pc only)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#GRUB_TERMINAL=console</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># The resolution used on graphical terminal</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># note that you can use only modes which your graphic card supports via VBE</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># you can see them in real GRUB with the command `vbeinfo'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#GRUB_GFXMODE=640x480</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># Uncomment if you don't want GRUB to pass \"root=UUID=xxx\" parameter to Linux</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#GRUB_DISABLE_LINUX_UUID=true</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># Uncomment to disable generation of recovery mode menu entries</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#GRUB_DISABLE_RECOVERY=\"true\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># Uncomment to get a beep at grub start</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#GRUB_INIT_TUNE=\"480 440 1\"</span></pre></td></tr></table></figure><p>最后更新 Grub：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">update-grub</span></pre></td></tr></table></figure><p>note：</p>\n<p>可以通过  <code>systemd-analyze time</code>  查看开机时间，通过  <code>systemd-analyze blame</code>  查看开机服务占用时间。</p>\n<h3 id=\"ssh-配置\"><a class=\"anchor\" href=\"#ssh-配置\">#</a> ssh 配置</h3>\n<p>在安装的时候有勾选 ssh 服务的话，那么只需要配置一下文件即可，否则就需要自己去下载。（当然，这里只是前置使用，后期安装 OMV 后，将由 OMV 接管）</p>\n<h3 id=\"安装中文输入法\"><a class=\"anchor\" href=\"#安装中文输入法\">#</a> 安装中文输入法</h3>\n<p>在 linux 系统中，常见的两大输入法框架：ibus 和 fcitx，而这里使用 Fcitx5，是用来接替 Fcitx 的。</p>\n<blockquote>\n<p>注意： fcitx5 包仅提供基本框架，且仅支持英文。如果要输入其他语言（例如中文或日文），则需要安装输入法引擎（IME）。</p>\n</blockquote>\n<p>Fcitx5 输入法引擎有以下几种：</p>\n<p><strong>中文</strong></p>\n<ul>\n<li>\n<p>fcitx5-chewing 包：是流行的繁体中文注音输入引擎，它基于 libchewing 包。</p>\n</li>\n<li>\n<p>fcitx5-chinese-addons 包：包含与中文相关的 addon，例如拼音、双拼和五笔。</p>\n</li>\n<li>\n<p>fcitx5-rime 包：使用 Rime 引擎。</p>\n</li>\n</ul>\n<p><strong>日文</strong></p>\n<ul>\n<li>\n<p>fcitx5-anthy 包：是流行的日文输入引擎。但是，它已不再受到积极开发。</p>\n</li>\n<li>\n<p>fcitx5-kkc 包：是日文假名输入引擎，它基于 libkkc 包。</p>\n</li>\n<li>\n<p>fcitx5-mozc 包：基于 Mozc（Google 日文输入法的开源版本）。</p>\n</li>\n<li>\n<p>fcitx5-skk 包：是日文假名输入引擎，它基于 libskk 包。</p>\n</li>\n</ul>\n<p><strong>其他语言</strong></p>\n<ul>\n<li>fcitx5-hangul 包：用于输入韩文，基于 libhangul 包。</li>\n<li>fcitx5-unikey 包：可用于输入越南语字符。</li>\n<li>fcitx5-m17n 包：可用于各种语言。</li>\n</ul>\n<p>1、卸载旧版及其余输入法</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> purge fcitx* ibus*</pre></td></tr></table></figure><p>2、安装 Fcitx5 简体中文输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> fcitx5 fcitx5-chinese-addons</pre></td></tr></table></figure><p>3、重启配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>开机后查看 fcitx5 是否随桌面环境自动启动，如无，则添加开机自启：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"~/.config/autostart/\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token function\">mkdir</span>  ~/.config/autostart/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">cp</span> /usr/share/applications/org.fcitx.Fcitx5.desktop ~/.config/autostart/</pre></td></tr></table></figure><p>4、添加拼音输入</p>\n<p>在应用中打开 Fcitx5 配置，然后在输入法中添加中文拼音，同时在全局选项中配置输入法切换快捷键（默认是  <code>Ctrl + 空格键</code>  切换）。</p>\n<p>5、修改全局变量</p>\n<ul>\n<li>使用  <code>im-config</code>  组件配置</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> im-config</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>im-config</pre></td></tr></table></figure><p>进入图形界面选择 Fcitx5 输入法。</p>\n<ul>\n<li>编辑  <code>/etc/environment</code></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/environment</pre></td></tr></table></figure><p>添加如下全局配置：</p>\n<figure class=\"highlight wiki\"><figcaption data-lang=\"Wiki markup\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GTK_IM_MODULE=fcitx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>QT_IM_MODULE=fcitx</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>XMODIFIERS=@im=fcitx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>SDL_IM_MODULE=fcitx</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>INPUT_METHOD=fcitx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>GLFW_IM_MODULE=ibus</pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eGNuLm9yZy93aWtpL0ZjaXR4NQ==\">https://wiki.archlinuxcn.org/wiki/Fcitx5</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvemhfQ04vSTE4bi9GY2l0eDU=\">https://wiki.debian.org/zh_CN/I18n/Fcitx5</span></p>\n<h2 id=\"节电处理\"><a class=\"anchor\" href=\"#节电处理\">#</a> 节电处理</h2>\n<h3 id=\"无线\"><a class=\"anchor\" href=\"#无线\">#</a> 无线</h3>\n<p>软件关闭蓝牙功能：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rfkill block bluetooth</pre></td></tr></table></figure><p>软件关闭 wifi 功能：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rfkill block wifi</pre></td></tr></table></figure><h3 id=\"usb\"><a class=\"anchor\" href=\"#usb\">#</a> USB</h3>\n<p>添加 USB 空闲自动挂起处理，空闲等待时间为 2S， <code>reboot</code>  重启生效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'ACTION==\"add\", SUBSYSTEM==\"usb\",  ATTR&#123;power/control&#125;=\"auto\", ATTR&#123;power/autosuspend_delay_ms&#125;=\"2000\"'</span> <span class=\"token operator\">></span> /etc/udev/rules.d/50-usb_power_save.rules</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>其它控制：</p>\n<p><code>ATTR&#123;power/control&#125;=&quot;on&quot;</code>  or  <code>ATTR&#123;power/autosuspend_delay_ms&#125;=&quot;-1&quot;</code> ，表示禁用挂起； <code>ATTR&#123;power/wakeup&#125;=&quot;enable&quot;</code> ，表示使能 usb 唤醒，写入  <code>disable</code>  则关闭。</p>\n<p>如果想要单独设置，可以如下查看 usb 设备对应的 udev 字段，eg：查看 Logitech 鼠标：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lsusb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Bus 002 Device 001: ID 1d6b:0003 Linux Foundation <span class=\"token number\">3.0</span> root hub</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Bus 001 Device 003: ID 0bda:b728 Realtek Semiconductor Corp. RTL8723B Bluetooth</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Bus 001 Device 002: ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation <span class=\"token number\">2.0</span> root hub</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lsusb <span class=\"token parameter variable\">-tvv</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/:  Bus 02.Port <span class=\"token number\">1</span>: Dev <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>root_hub, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>xhci_hcd/7p, 5000M</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ID 1d6b:0003 Linux Foundation <span class=\"token number\">3.0</span> root hub</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    /sys/bus/usb/devices/usb2  /dev/bus/usb/002/001</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>/:  Bus 01.Port <span class=\"token number\">1</span>: Dev <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>root_hub, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>xhci_hcd/9p, 480M</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ID 1d6b:0002 Linux Foundation <span class=\"token number\">2.0</span> root hub</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    /sys/bus/usb/devices/usb1  /dev/bus/usb/001/001</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">4</span>: Dev <span class=\"token number\">2</span>, If <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Human Interface Device, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>usbhid, 12M</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        /sys/bus/usb/devices/1-4  /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">4</span>: Dev <span class=\"token number\">2</span>, If <span class=\"token number\">2</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Human Interface Device, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>usbhid, 12M</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        /sys/bus/usb/devices/1-4  /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">4</span>: Dev <span class=\"token number\">2</span>, If <span class=\"token number\">0</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Human Interface Device, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>usbhid, 12M</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        /sys/bus/usb/devices/1-4  /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">8</span>: Dev <span class=\"token number\">3</span>, If <span class=\"token number\">0</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Wireless, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>btusb, 12M</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ID 0bda:b728 Realtek Semiconductor Corp. RTL8723B Bluetooth</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        /sys/bus/usb/devices/1-8  /dev/bus/usb/001/003</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">8</span>: Dev <span class=\"token number\">3</span>, If <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Wireless, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>btusb, 12M</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        ID 0bda:b728 Realtek Semiconductor Corp. RTL8723B Bluetooth</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        /sys/bus/usb/devices/1-8  /dev/bus/usb/001/003</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>udevadm info <span class=\"token parameter variable\">-a</span> /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>Udevadm info starts with the device specified by the devpath and <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>walks up the chain of parent devices. It prints <span class=\"token keyword\">for</span> every device</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>found, all possible attributes <span class=\"token keyword\">in</span> the udev rules key format.</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>A rule to match, can be composed by the attributes of the device</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>and the attributes from one single parent device.</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  looking at device <span class=\"token string\">'/devices/pci0000:00/0000:00:15.0/usb1/1-4'</span><span class=\"token builtin class-name\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token assign-left variable\">KERNEL</span><span class=\"token operator\">==</span><span class=\"token string\">\"1-4\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token assign-left variable\">SUBSYSTEM</span><span class=\"token operator\">==</span><span class=\"token string\">\"usb\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token assign-left variable\">DRIVER</span><span class=\"token operator\">==</span><span class=\"token string\">\"usb\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>authorized<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>avoid_reset_quirk<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bConfigurationValue<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bDeviceClass<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bDeviceProtocol<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bDeviceSubClass<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bMaxPacketSize0<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"8\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bMaxPower<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"98mA\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bNumConfigurations<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bNumInterfaces<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\" 3\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bcdDevice<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1211\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bmAttributes<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"a0\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>busnum<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>configuration<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"RQR12.11_B0032\"</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>devnum<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"2\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>devpath<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"4\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>idProduct<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"c52b\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>idVendor<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"046d\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>ltm_capable<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"no\"</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>manufacturer<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"Logitech\"</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>maxchild<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/active_duration<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"5486884\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/async<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"enabled\"</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/autosuspend<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"2\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/autosuspend_delay_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"2000\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/connected_duration<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"5486884\"</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/control<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"on\"</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/level<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"on\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/persist<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_active_kids<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_active_time<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"5486602\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_enabled<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"forbidden\"</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_status<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"active\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_suspended_time<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_usage<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"enabled\"</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_abort_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_active<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_active_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_expire_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_last_time_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_max_time_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_total_time_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>product<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"USB Receiver\"</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>quirks<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0x0\"</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>removable<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"removable\"</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>rx_lanes<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>speed<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"12\"</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>tx_lanes<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>urbnum<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"34\"</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>version<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\" 2.00\"</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p><strong>参看：</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmtlcm5lbC5vcmcvZHJpdmVyLWFwaS91c2IvcG93ZXItbWFuYWdlbWVudC5odG1s\">https://docs.kernel.org/driver-api/usb/power-management.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvVWRldiNXYWtpbmdfZnJvbV9zdXNwZW5kX3dpdGhfVVNCX2RldmljZQ==\">https://wiki.archlinux.org/title/Udev#Waking_from_suspend_with_USB_device</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5yZWFjdGl2YXRlZC5uZXQvd3JpdGluZ191ZGV2X3J1bGVzLmh0bWwjZXhhbXBsZS1wcmludGVy\">http://www.reactivated.net/writing_udev_rules.html#example-printer</span></p>\n<h3 id=\"cpu-调度\"><a class=\"anchor\" href=\"#cpu-调度\">#</a> cpu 调度</h3>\n<p>一般支持以下几种策略，旧内核可能不支持  <code>schedutil</code>  ：</p>\n<table>\n<thead>\n<tr>\n<th>Governor</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>performance</td>\n<td>Run the CPU at the maximum frequency, obtained from  <code>/sys/devices/system/cpu/cpuX/cpufreq/scaling_max_freq</code> .</td>\n</tr>\n<tr>\n<td>powersave</td>\n<td>Run the CPU at the minimum frequency, obtained from  <code>/sys/devices/system/cpu/cpuX/cpufreq/scaling_min_freq</code> .</td>\n</tr>\n<tr>\n<td>userspace</td>\n<td>Run the CPU at user specified frequencies, configurable via  <code>/sys/devices/system/cpu/cpuX/cpufreq/scaling_setspeed</code> .</td>\n</tr>\n<tr>\n<td>ondemand</td>\n<td>Scales the frequency dynamically according to current load. Jumps to the highest frequency and then possibly back off as the idle time increases.</td>\n</tr>\n<tr>\n<td>conservative</td>\n<td>Scales the frequency dynamically according to current load. Scales the frequency more gradually than ondemand.</td>\n</tr>\n<tr>\n<td>schedutil</td>\n<td>Scheduler-driven CPU frequency selection.</td>\n</tr>\n</tbody>\n</table>\n<p>关于  <code>schedutil</code>  的原理可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZWVwaW5vdXQuY29tL2FuZHJvaWQtc3lzdGVtLWFuYWx5c2lzL2FuZHJvaWQtY3B1LXJlbGF0ZWQvcHJpbmNpcGxlLWFuYWx5c2lzLW9mLWNwdS1nb3Zlcm5vci1zY2hlZHV0aWwuaHRtbA==\">https://deepinout.com/android-system-analysis/android-cpu-related/principle-analysis-of-cpu-governor-schedutil.html</span></p>\n<p>查看 cpu 支持的调度策略及当前使用的模式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conservative ondemand performance schedutil</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>schedutil</pre></td></tr></table></figure><p>修改所有 cpu 的策略：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> governor <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>governor</pre></td></tr></table></figure><p>note： <code>governor</code>  为支持的策略之一，选你需要更改的就好了。</p>\n<p><strong>注意，该操作只在当前生效，任何复位或重启后，都将恢复默认操作，因此如果要让每次生效，那么需要编写开机脚本或写入内核。</strong></p>\n<p>查看各 cpu 频率：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /proc/cpuinfo <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">'^model name|^cpu MHz'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1029.564</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1168.290</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">818.342</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">960.974</span></pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvQ1BVX2ZyZXF1ZW5jeV9zY2FsaW5nI1NjYWxpbmdfZ292ZXJub3Jz\">https://wiki.archlinux.org/title/CPU_frequency_scaling#Scaling_governors</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmtlbHUub3JnL3RlY2gvMjAyMS8wNS8xMy9iaW9zLWNvbmZpZy1yZW1hcmsuaHRtbA==\">https://blog.kelu.org/tech/2021/05/13/bios-config-remark.html</span></p>\n<h3 id=\"睡眠与休眠\"><a class=\"anchor\" href=\"#睡眠与休眠\">#</a> 睡眠与休眠</h3>\n<p>关于 Suspend，Linux 内核提供了四种电源模式，如下表：</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>freeze</td>\n<td>冻结 I/O 设备，将它们置于低功耗状态，使处理器进入空闲状态，唤醒最快，耗电比其它 standby, mem, disk 方式高。</td>\n</tr>\n<tr>\n<td>standby</td>\n<td>除了冻结 I/O 设备外，还会暂停系统，唤醒较快，耗电比其它 mem, disk 方式高。</td>\n</tr>\n<tr>\n<td>mem</td>\n<td>将运行状态数据存到内存，并关闭外设，进入等待模式，唤醒较慢，耗电比 disk 方式高。（实际由  <code>/sys/power/mem_sleep</code>  抉择）</td>\n</tr>\n<tr>\n<td>disk</td>\n<td>将运行状态数据存到硬盘，然后关机，唤醒最慢；对于嵌入式系统，由于没有硬盘，所以一般不支持。（实际由  <code>/sys/power/disk</code>  抉择）</td>\n</tr>\n</tbody>\n</table>\n<p>然，虽然 linux 内核支持，但实际上不同的平台，对应的支持也是不一样的；可以使用以下命令查看对 Suspend 支持：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /sys/power/state</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>freeze mem disk</pre></td></tr></table></figure><p>在这里，就只支持 3 种： <code>freeze</code>  、  <code>mem</code>  、  <code>disk</code>  。</p>\n<p>在 linux 中，有两个比较特殊的 Suspend 管理，那就是  <code>mem</code>  和  <code>disk</code>  ，分别是 <strong>Suspend to RAM（挂起到内存，通称睡眠）</strong> 和 <strong>Suspend to disk（挂起到硬盘，通称休眠）</strong> 这两种电源管理模式，它们默认使用的 ACPI 定义如下：</p>\n<ul>\n<li>\n<p>Suspend to RAM（挂起到内存，通称睡眠）</p>\n<p>ACPI 定义的 <strong>S3</strong> 睡眠状态。通过将机器中大多数和 RAM 不相关的部件断电来工作，RAM 是恢复机器状态所必需的。由于可以节省大量电力，建议笔记本电脑在使用电池运行且盖子关闭时（或用户在一段时间内处于非活动状态）自动进入此模式。</p>\n</li>\n<li>\n<p>Suspend to disk（挂起到硬盘，通称休眠）</p>\n<p>ACPI 定义的 <strong>S4</strong> 睡眠状态。将机器状态保存到交换空间并关闭机器。再次开机后，恢复状态。直到开机前，机器都不会有任何待机功耗。</p>\n</li>\n</ul>\n<p>note：实际上，  <code>mem</code>  和  <code>disk</code>  是由它们对应的配置文件决定的，但一般默认会使用上面的 ACPI 状态。</p>\n<p>对于  <code>mem</code>  和  <code>disk</code>  的控制：</p>\n<p><code>mem</code>  模式的操作由  <code>/sys/power/mem_sleep</code>  抉择，常见以下几种睡眠处理：</p>\n<ul>\n<li>deep：Suspend-To-RAM，对应 ACPI 为 S3；</li>\n<li>shallow：Power-On Suspend，对应 ACPI 为 S1；</li>\n<li>s2idle：Suspend-To-Idle，对应 ACPI 为 S0；</li>\n</ul>\n<p><code>disk</code>  模式的操作则由  <code>/sys/power/disk</code>  抉择，常见以下几种休眠处理：</p>\n<ul>\n<li>platform：使用平台（BIOS 支持）提供的方法将把系统置于超低功耗状态（如 ACPI S4），使得额外的唤醒选项可用，并且让平台固件在唤醒之后可能允许做一个简简的初始化；</li>\n<li>shutdown：顾名思义就是关闭系统设备断电；</li>\n<li>reboot：这个。。。不用说了吧；</li>\n<li>suspend：系统混合挂起，是的没错，可以将睡眠和休眠混合，可以通过在   <code>/etc/systemd/sleep.conf</code>  文件进行配置以达到效果，可参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eGNuLm9yZy93aWtpLyVFNyU5NCVCNSVFNiVCQSU5MCVFNyVBRSVBMSVFNyU5MCU4NiMlRTYlOEMlODIlRTglQjUlQjclRTYlODglOTYlRTQlQkMlOTElRTclOUMlQTAlRTglQUYlQjclRTYlQjElODIlRTYlOTclQjYlRTclOUElODQlRTYlQjclQjclRTUlOTAlODglRTclOUQlQTElRTclOUMlQTA=\">挂起或休眠请求时的混合睡眠</span> ；</li>\n<li>test_resume：诊断操作。先是加载镜像（就好像系统刚从休眠中醒来，当前运行的内核实例是还原内核），然后再恢复整个系统。</li>\n</ul>\n<p>查看支持：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /sys/power/mem_sleep</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s2idle <span class=\"token punctuation\">[</span>deep<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">cat</span> /sys/power/disk</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>platform<span class=\"token punctuation\">]</span> <span class=\"token function\">shutdown</span> <span class=\"token function\">reboot</span> <span class=\"token function\">suspend</span> test_resume</pre></td></tr></table></figure><p>如果想要切换相应的控制，只需往写入你要的处理模式就好了；当然，这只是在下一次中生效，当执行完一次后将会恢复；若要设成永久处理，那么可以通过修改内核属性来达到效果。</p>\n<p><strong>自动休眠：</strong></p>\n<p>一般作为服务器，是不需要自动休眠的，但对于一周也用不了多少次的，可能使用自动休眠会省电一点，配合唤醒功能即可达到快速恢复工作环境的效果。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/default/grub</pre></td></tr></table></figure><p>然后添加  <code>GRUB_CMDLINE_LINUX=&quot;mem_sleep_default=deep&quot;</code>  ，然后重新生成  <code>grub.cfg</code>  文件，重启生效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">grub-mkconfig</span> <span class=\"token parameter variable\">-o</span> /boot/grub/grub.cfg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUG93ZXJfbWFuYWdlbWVudC9TdXNwZW5kX2FuZF9oaWJlcm5hdGU=\">https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vc2xlZXAuY29uZi5kLjU=\">https://man.archlinux.org/man/sleep.conf.d.5</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUG93ZXJfbWFuYWdlbWVudCNTdXNwZW5kX2FuZF9oaWJlcm5hdGU=\">https://wiki.archlinux.org/title/Power_management#Suspend_and_hibernate</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudW5peHR1dG9yaWFsLm9yZy9kaXNhYmxlLXNsZWVwLW9uLXVidW50dS1zZXJ2ZXIv\">https://www.unixtutorial.org/disable-sleep-on-ubuntu-server/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2MvaHRtbC9sYXRlc3QvYWRtaW4tZ3VpZGUvcG0vc2xlZXAtc3RhdGVzLmh0bWw=\">https://www.kernel.org/doc/html/latest/admin-guide/pm/sleep-states.html</span></p>\n<p>更多电源管理：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUG93ZXJfbWFuYWdlbWVudCNQb3dlcl9zYXZpbmc=\">https://wiki.archlinux.org/title/Power_management#Power_saving</span></p>\n<p>Kernel 参数：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2MvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9rZXJuZWwtcGFyYW1ldGVycy50eHQ=\">https://www.kernel.org/doc/Documentation/admin-guide/kernel-parameters.txt</span></p>\n<h2 id=\"图形环境切换\"><a class=\"anchor\" href=\"#图形环境切换\">#</a> 图形环境切换</h2>\n<p>前提：系统已经安装了桌面环境，需要禁止桌面环境，以纯命令行启动，以节约性能。</p>\n<p>获取当前系统运行的界面模式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl get-default</pre></td></tr></table></figure><p>纯命令行启动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl set-default multi-user.target</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>桌面环境启动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl set-default graphical.target</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>对于多桌面，可以使用下面命令，然后选择对应的桌面系统，输入序号确认：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>update-alternatives <span class=\"token parameter variable\">--config</span> x-session-manager</pre></td></tr></table></figure><p>如果要删除  <code>x-session-manager</code>  的某个选项，可以先通过以下方式列出其路径，然后通过删除选项（eg：gnome-session）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>update-alternatives <span class=\"token parameter variable\">--list</span> x-session-manager</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>update-alternatives <span class=\"token parameter variable\">--remove</span> x-session-manager /usr/bin/gnome-session</pre></td></tr></table></figure><p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zNjcyOTQvaG93LWRvLWktY2hhbmdlLW15LWRlZmF1bHQtc2Vzc2lvbg==\">https://unix.stackexchange.com/questions/367294/how-do-i-change-my-default-session</span></p>\n<h2 id=\"远程唤醒\"><a class=\"anchor\" href=\"#远程唤醒\">#</a> 远程唤醒</h2>\n<p>首先，查看系统主板 BIOS 是否支持 Wake-On-LAN ，要是支持的话，必须先启动它，因为它被默认设禁用。</p>\n<p>然后，需要一个支持 Wake-On-LAN 的网卡；<mark>无线网卡并不支持</mark>。你需要运行  <code>ethtool</code>  命令查看网卡是否支持 Wake-On-LAN ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">ethtool</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ethtool</span> eno1 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> Wake-on</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Supports Wake-on: pumbg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        Wake-on: d</pre></td></tr></table></figure><p>这条命令输出的  <code>Supports Wake-on</code>  字段会告诉你你的网卡支持哪些功能，同时  <code>Wake-on</code>  指示着当前配置的模式，一般有以下几种选项：</p>\n<ul>\n<li>d -- 禁用（disable）</li>\n<li>p -- 物理活动唤醒（Wake on PHY activity）</li>\n<li>u -- 单播消息唤醒（Wake on unicast activity）</li>\n<li>m -- 多播（组播）消息唤醒（Wake on multicast activity）</li>\n<li>b -- 广播消息唤醒（Wake on broadcast activity）</li>\n<li>a -- ARP 唤醒（Wake on ARP activity）</li>\n<li>g -- 特定数据包唤醒（magic packet activity）</li>\n</ul>\n<p>修改 wol 功能：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ethtool</span> <span class=\"token parameter variable\">-s</span> eno1 wol g</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ethtool</span> eno1 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> Wake-on</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Supports Wake-on: pumbg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        Wake-on: g</pre></td></tr></table></figure><p>此刻已经开启 magic packet 唤醒了，然后执行  <code>ip a</code>  查看网卡的 mac 地址和 ip 并记录，再写入  <code>echo mem &gt; /sys/power/state</code>  ，让系统进入休眠，再在另一台主机测试网络唤醒。</p>\n<ul>\n<li>\n<p>Windows</p>\n<p>可以选择该工具使用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGVwaWN1cy5jb20vd2FrZS1vbi1sYW4vd2FrZS1vbi1sYW4tY21k\">Wake On Lan Command Line</span> 。</p>\n</li>\n<li>\n<p>Linux</p>\n<p>可以安装对应的 pack 包（eg：etherwake），这里就不多说了。</p>\n</li>\n</ul>\n<p>当你能成功唤醒后，就证明你的主板支持，bios 上的 wol 有启用，系统配置上也打开了。</p>\n<p>最后，对于部分系统，可能有些在设置完显示  <code>Wake-on: g</code>  后，重启会变回默认配置，这时可以编写一个开机启动服务：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/systemd/system/wol@.service</pre></td></tr></table></figure><p>添加如下内容：</p>\n<figure class=\"highlight wiki\"><figcaption data-lang=\"Wiki markup\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token url\">[Unit]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Description=Wake-on-LAN for %i</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Requires=network.target</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>After=network.target</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token url\">[Service]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ExecStart=/usr/bin/ethtool -s %i wol g</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Type=oneshot</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token url\">[Install]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>WantedBy=multi-user.target</pre></td></tr></table></figure><p>然后 [Install] 区块中的  <code>WantedBy</code>  字段，是表示该服务所在的 Target。如  <code>WantedBy=multi-user.target</code>  指的是该服务所属于  <code>multi-user.target</code>  ；当执行  <code>systemctl enable xxx.service</code>  命令时， <code>xxx.service</code>  的符号链接就会被创建在  <code>/etc/systemd/system/multi-user.target</code>  目录下。可以通过  <code>systemctl get-default</code>  命令查看系统默认启动的 target，一般为  <code>multi-user</code>  或者是  <code>graphical</code> 。因此配置好相应的  <code>WantedBy</code>  字段，可以实现服务的开机启动。</p>\n<p><code>multi-user.target</code>  表示多用户命令行状态；  <code>graphical.target</code>  表示图形用户状态，它依赖于  <code>multi-user.target</code>  。官方文档有一张非常清晰的 [Target 依赖关系图](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWRlc2t0b3Aub3JnL3NvZnR3YXJlL3N5c3RlbWQvbWFuL2Jvb3R1cC5odG1sI1N5c3RlbQ==\">https://www.freedesktop.org/software/systemd/man/bootup.html#System</span> Manager Bootup)。</p>\n<p>嘛，如果你是用图形界面的，也是可以用  <code>multi-user.target</code>  的，因为  <code>graphical.target</code>  依赖  <code>multi-user.target</code>  ，可以利用命令  <code>systemctl list-units --type=target</code>  查看到  <code>multi-user.target</code>  是处于 Active 状态的。</p>\n<p>最后，重新加载所有的 systemd 服务，打开自启动并启动服务，其中  <code>@</code>  后面跟随的是你的 wol 网卡名称：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl daemon-reload</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> wol@eno1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start wol@eno1</pre></td></tr></table></figure><p>note：</p>\n<p>对于 systemd 服务的控制，可以使用如下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>unit<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>[command]：</p>\n<ul>\n<li>\n<p>start：立刻启动后面接的 unit。</p>\n</li>\n<li>\n<p>stop：立刻关闭后面接的 unit。</p>\n</li>\n<li>\n<p>restart：立刻关闭后启动后面接的 unit，亦即执行 stop 再 start 的意思。</p>\n</li>\n<li>\n<p>reload：不关闭 unit 的情况下，重新载入配置文件，让设置生效。</p>\n</li>\n<li>\n<p>enable：设置下次开机时，后面接的 unit 会被启动。</p>\n</li>\n<li>\n<p>disable：设置下次开机时，后面接的 unit 不会被启动。</p>\n</li>\n<li>\n<p>status：目前后面接的这个 unit 的状态，会列出有没有正在执行、开机时是否启动等信息。</p>\n</li>\n<li>\n<p>is-active：目前有没有正在运行中。</p>\n</li>\n<li>\n<p>is-enable：开机时有没有默认要启用这个 unit。</p>\n</li>\n<li>\n<p>kill ：不要被 kill 这个名字吓着了，它其实是向运行 unit 的进程发送信号。</p>\n</li>\n<li>\n<p>show：列出 unit 的配置。</p>\n</li>\n<li>\n<p>mask：注销 unit，注销后你就无法启动这个 unit 了。</p>\n</li>\n<li>\n<p>unmask：取消对 unit 的注销。</p>\n</li>\n</ul>\n<p>一些其它命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl poweroff <span class=\"token comment\"># 系统关机</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl <span class=\"token function\">reboot</span> <span class=\"token comment\"># 重新开机</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>systemctl <span class=\"token function\">suspend</span> <span class=\"token comment\"># 进入暂停模式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>systemctl hibernate <span class=\"token comment\"># 进入休眠模式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>systemctl rescue <span class=\"token comment\"># 强制进入救援模式</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>systemctl emergency <span class=\"token comment\"># 强制进入紧急救援模式</span></pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvV2FrZS1vbi1MQU4=\">https://wiki.archlinux.org/title/Wake-on-LAN</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvV2FrZU9uTGFu\">https://wiki.debian.org/WakeOnLan</span></p>\n<h2 id=\"异常记录查看\"><a class=\"anchor\" href=\"#异常记录查看\">#</a> 异常记录查看</h2>\n<p>使用  <code>last -x shutdown reboot</code>  命令可以查看系统的关机和重启记录，包括异常关机。该命令会显示每次关机或重启的时间、持续时间。</p>\n<p>使用  <code>dmesg | grep &quot;shutdown&quot;</code>  命令可以查看内核的消息缓冲区，筛选出关机的相关信息。</p>\n<p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy85ODE5L2hvdy10by1maW5kLW91dC1mcm9tLXRoZS1sb2dzLXdoYXQtY2F1c2VkLXN5c3RlbS1zaHV0ZG93bg==\">https://unix.stackexchange.com/questions/9819/how-to-find-out-from-the-logs-what-caused-system-shutdown</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4MzQ1NjU3L2FydGljbGUvZGV0YWlscy8xMjY4MzMxMzE=\">https://blog.csdn.net/qq_28345657/article/details/126833131</span></p>\n<h2 id=\"系统备份\"><a class=\"anchor\" href=\"#系统备份\">#</a> 系统备份</h2>\n<p>linux 系统说白了就是一个强大的文件系统，既然是文件，哪能不能像日常备份文件那样直接压缩备份呢？答案是可以，只是在备份压缩的时候注意把各个文件的权限都保留下来。</p>\n<p>在备份之前先了解一下 linux 的系统目录结构：</p>\n<table>\n<thead>\n<tr>\n<th>文件夹</th>\n<th>英文全称</th>\n<th>文件夹作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/boot</td>\n<td>Boot</td>\n<td>存放的启动 Linux 时使用的内核文件，包括连接文件以及镜像文件。</td>\n</tr>\n<tr>\n<td>/bin</td>\n<td>Binaries</td>\n<td>存放着最常用的程序和指令，所有用户都可以执行。是  <code>/usr/bin</code>  目录的软连接。</td>\n</tr>\n<tr>\n<td>/sbin</td>\n<td>Super User Binaries</td>\n<td>保存和系统环境设置相关的命令，只有超级用户可以使用这些命令，有些命令可以允许普通用户查看。是  <code>/usr/sbin</code>  目录的软连接。</td>\n</tr>\n<tr>\n<td>/usr</td>\n<td>Unix Software Resources</td>\n<td>用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</td>\n</tr>\n<tr>\n<td>/usr/bin</td>\n<td>Unix Software Resources Binaries</td>\n<td>系统用户使用的应用程序与指令。</td>\n</tr>\n<tr>\n<td>/usr/sbin</td>\n<td>Unix Software Resources Superuser Binaries</td>\n<td>超级用户使用的比较高级的管理程序和系统守护程序。</td>\n</tr>\n<tr>\n<td>/usr/local</td>\n<td>Unix Software Resources Local</td>\n<td>安装第三方软件的安装目录，一般是通过编译源码的方式安装的程序。</td>\n</tr>\n<tr>\n<td>/usr/src</td>\n<td>Unix Software Resources Source</td>\n<td>内核源代码默认的放置目录。</td>\n</tr>\n<tr>\n<td>/dev</td>\n<td>Devices</td>\n<td>存放的是 Linux 的外部设备。注意：在 Linux 中访问设备和访问文件的方式是相同的。</td>\n</tr>\n<tr>\n<td>/etc</td>\n<td>Editable Text Configuration Chest</td>\n<td>存放所有的系统需要的配置文件和子目录列表，更改目录下的文件可能会导致系统不能启动。</td>\n</tr>\n<tr>\n<td>/opt</td>\n<td>Optional Application Software Packages</td>\n<td>可选应用软件包，第三方安装的软件保存位置，存放软件安装包。</td>\n</tr>\n<tr>\n<td>/lib</td>\n<td>Library</td>\n<td>存放基本代码库（比如 c++ 库），其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</td>\n</tr>\n<tr>\n<td>/proc</td>\n<td>Processes</td>\n<td>虚拟文件系统，数据保存在内存中，存放当前进程信息</td>\n</tr>\n<tr>\n<td>/root</td>\n<td>Root</td>\n<td>系统管理员的用户主目录。</td>\n</tr>\n<tr>\n<td>/tmp</td>\n<td>Temporary</td>\n<td>存放临时文件</td>\n</tr>\n<tr>\n<td>/var</td>\n<td>Variable</td>\n<td>存放经常修改的数据，比如程序运行的日志文件（ <code>/var/log</code>  目录下）。</td>\n</tr>\n<tr>\n<td>/home</td>\n<td>Home</td>\n<td>用户缺省宿主目录。</td>\n</tr>\n<tr>\n<td>/lost+found</td>\n<td>Lost And Found</td>\n<td>一般情况下为空的，存放一些系统出错的检查结果</td>\n</tr>\n<tr>\n<td>/srv</td>\n<td>Server</td>\n<td>服务数据目录</td>\n</tr>\n<tr>\n<td>/sys</td>\n<td>System</td>\n<td>这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs。sysfs 文件系统集成了下面 3 种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中。</td>\n</tr>\n<tr>\n<td>/mnt</td>\n<td>Mount</td>\n<td>挂载目录。临时文件系统的安装点，默认挂载光驱和软驱的目录</td>\n</tr>\n<tr>\n<td>/media</td>\n<td>Media</td>\n<td>挂载目录。 挂载媒体设备，如软盘和光盘</td>\n</tr>\n<tr>\n<td>/misc</td>\n<td>Miscellaneous Device</td>\n<td>挂载目录。 挂载 NFS 服务</td>\n</tr>\n<tr>\n<td>/run</td>\n<td>Run</td>\n<td>里面的东西是系统运行时需要的，不能随便删除。当系统重启时，这个目录下的文件应该被删掉或清除；下次系统运行时重新生成。</td>\n</tr>\n</tbody>\n</table>\n<p>备份系统：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">su</span> -</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zcvpf</span> backup.tgz <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/proc <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/lost+found <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/backup.tgz <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/mnt <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/sys <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/media /</pre></td></tr></table></figure><h1 id=\"安装-openmediavault-6x\"><a class=\"anchor\" href=\"#安装-openmediavault-6x\">#</a> 安装 openmediavault 6.x</h1>\n<p>在操作如下流程前，要进行备份！备份！备份！</p>\n<p>具体安装以 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9wZW5tZWRpYXZhdWx0Lm9yZy9lbi9sYXRlc3QvaW5zdGFsbGF0aW9uL29uX2RlYmlhbi5odG1s\">https://docs.openmediavault.org/en/latest/installation/on_debian.html</span> 为准。</p>\n<p>1、临时配置环境变量</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>C.UTF-8</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">DEBIAN_FRONTEND</span><span class=\"token operator\">=</span>noninteractive</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">APT_LISTCHANGES_FRONTEND</span><span class=\"token operator\">=</span>none</pre></td></tr></table></figure><p>2、添加软件包存储库</p>\n<p>进入文件编辑：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/apt/sources.list.d/openmediavault.list</pre></td></tr></table></figure><p>然后粘贴以下存储库链接（这里使用的是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmJmc3UuZWR1LmNuL2hlbHAvb3Blbm1lZGlhdmF1bHQv\">北外镜像</span>，以加快国内访问速度，当然你也可以使用源链接），保存退出：</p>\n<figure class=\"highlight wiki\"><figcaption data-lang=\"Wiki markup\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deb https://mirrors.bfsu.edu.cn/OpenMediaVault/public shaitan main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>deb https://mirrors.bfsu.edu.cn/OpenMediaVault/packages shaitan main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">#</span><span class=\"token punctuation\">#</span> Uncomment the following line to add software from the proposed repository.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">#</span> deb https://mirrors.bfsu.edu.cn/OpenMediaVault/public shaitan-proposed main</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">#</span> deb https://mirrors.bfsu.edu.cn/OpenMediaVault/packages shaitan-proposed main</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">#</span><span class=\"token punctuation\">#</span> This software is not part of OpenMediaVault, but is offered by third-party</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">#</span><span class=\"token punctuation\">#</span> developers as a service to OpenMediaVault users.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">#</span> deb https://mirrors.bfsu.edu.cn/OpenMediaVault/public shaitan partner</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">#</span> deb https://mirrors.bfsu.edu.cn/OpenMediaVault/packages shaitan partner</pre></td></tr></table></figure><p>3、添加 openmediavault 密钥：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--yes</span> gnupg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--quiet</span> --output-document<span class=\"token operator\">=</span>- https://packages.openmediavault.org/public/archive.key <span class=\"token operator\">|</span> gpg <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">--yes</span> <span class=\"token parameter variable\">--output</span> <span class=\"token string\">\"/usr/share/keyrings/openmediavault-archive-keyring.gpg\"</span></pre></td></tr></table></figure><p>4、更新软件包源并安装 omv</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt-get</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token parameter variable\">--yes</span> --auto-remove --show-upgraded <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    --allow-downgrades --allow-change-held-packages <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    --no-install-recommends <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token parameter variable\">--option</span> DPkg::Options::<span class=\"token operator\">=</span><span class=\"token string\">\"--force-confdef\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token parameter variable\">--option</span> DPkg::Options::<span class=\"token operator\">=</span><span class=\"token string\">\"--force-confold\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">install</span> openmediavault</pre></td></tr></table></figure><p>5、同步系统配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>omv-confdbadm populate</pre></td></tr></table></figure><p>note：</p>\n<p>对于网络服务，现在只解析  <code>/etc/network/interfaces</code>  以获取当前的网络配置。 如果以不同的方式配置网络（例如通过  <code>systemd</code>  或  <code>NetworkManager</code> ），则不会填充数据库，并且不包含使用  <code>netplan for systemd-networkd 和 systemd-resolved</code>  部署网络配置所需的信息。 在这种情况下，请使用  <code>omv-firstaid</code>  命令执行初始网络配置。</p>\n<p>如果想通过 openmediavault 使用的服务重新部署网络配置，则执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/network/interfaces</pre></td></tr></table></figure><p>然后把里面的网卡配置用  <code>#</code>  注释掉，接着：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">rm</span> /etc/systemd/network/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>netplan apply</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>omv-salt deploy run systemd-networkd</pre></td></tr></table></figure><h2 id=\"omv6-基本配置\"><a class=\"anchor\" href=\"#omv6-基本配置\">#</a> omv6 基本配置</h2>\n<p>配置基本链接的镜像源（原因是在你安装完 omv 后，前面配置的软件包存储库链接将会修改为官方默认的链接，此时需要重新设置镜像）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/OpenMediaVault/public\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_ALT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/OpenMediaVault/packages\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_KERNEL_BACKPORTS_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/debian\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_SECURITY_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/debian-security\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>omv-salt stage run all</pre></td></tr></table></figure><p>然后执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>重启后回到 omv 网页，你会看到有提示显示可以更新软件。</p>\n<p>note：</p>\n<p>对于使用  <code>omv-env set</code>  更换源，其实是在不同的  <code>openmediavault</code>  文件写入，这些文件可以在  <code>/etc/apt/sources.list.d/</code>  中找到。</p>\n<h2 id=\"安装-omv-extras\"><a class=\"anchor\" href=\"#安装-omv-extras\">#</a> 安装 omv-extras</h2>\n<p>由于国内原因，防 github 解析错误，执行以下操作，如果这时候已经出现网络问题，则使用手动方法，查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzUyMXh1ZXdlaWhhbi9HaXRIdWI1MjA=\">GitHub520</span> ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"/# GitHub520 Host Start/Q\"</span> /etc/hosts <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">curl</span> https://raw.hellogithub.com/hosts <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr></table></figure><p>根据<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9tdi1leHRyYXMub3JnL2Rva3UucGhwP2lkPW9tdjY6bmV3X3VzZXJfZ3VpZGUjb212LWV4dHJhcw==\">官方</span>提供，安装 omv-extras：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>然后刷新 omv 网页，即可在  <code>系统</code>  中找到 omv-extras。</p>\n<p>如果网络不好可以手动安装：</p>\n<ol>\n<li>进入 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09wZW5NZWRpYVZhdWx0LVBsdWdpbi1EZXZlbG9wZXJzL3BhY2thZ2Vz\">https://github.com/OpenMediaVault-Plugin-Developers/packages</span> 下载对应的插件包，然后把插件包放到 omv 上，路径自己决定，然后进入该路径执行：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-i</span> openmediavault-omvextrasorg_xxx.deb</pre></td></tr></table></figure><p>更新 omv-extras 镜像源：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_EXTRAS_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/OpenMediaVault/openmediavault-plugin-developers\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_DOCKER_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/docker-ce/linux/debian\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_PROXMOX_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/proxmox/debian\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>omv-salt stage run all</pre></td></tr></table></figure><h2 id=\"安装-docker\"><a class=\"anchor\" href=\"#安装-docker\">#</a> 安装 docker</h2>\n<p>进入  <code>系统</code>  -&gt;  <code>插件</code> ，搜索  <code>compose</code>  ，点击选择下载，然后等待下载完成；</p>\n<p>进入  <code>系统</code>  -&gt;  <code>omv-extras</code> ，勾选  <code>Docker repo</code> ，点保存；</p>\n<p>最后在  <code>服务</code>  -&gt;  <code>Compose</code>  中可以找到  <code>设置</code> ，查看 Docker 状态是否为  <code>Installed and running</code> ，如果不是，可以尝试重启 Docker 或者重新安装 Docker；再不行就回到第二点先取消勾选接着保存，然后再把   <code>Docker repo</code>  勾选上保存并重复后面操作。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9tdi1leHRyYXMub3JnL2Rva3UucGhwP2lkPW9tdjY6ZG9ja2VyX2luX29tdiNkb2t1d2lraV9fdG9w\">https://wiki.omv-extras.org/doku.php?id=omv6:docker_in_omv#dokuwiki__top</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/linux_c-time-configuration/",
            "url": "https://arachnid.cc/linux_c-time-configuration/",
            "title": "Linux c 时间时区配置",
            "date_published": "2023-06-21T15:54:38.000Z",
            "content_html": "<h1 id=\"时间与日期\"><a class=\"anchor\" href=\"#时间与日期\">#</a> 时间与日期</h1>\n<p><strong>GMT 和 UTC</strong></p>\n<p>GMT，即格林尼治标准时间，也就是世界时。GMT 的正午是指当太阳横穿格林尼治子午线（本初子午线）时的时间。但由于地球自转不均匀不规则，导致 GMT 不精确，现在已经不再作为世界标准时间使用。</p>\n<p>UTC，即协调世界时。UTC 是以原子时秒长为基础，在时刻上尽量接近于 GMT 的一种时间计量系统。为确保 UTC 与 GMT 相差不会超过 0.9 秒，在有需要的情况下会在 UTC 内加上正或负闰秒。UTC 现在作为世界标准时间使用。</p>\n<p>所以，UTC 与 GMT 基本上等同，误差不超过 0.9 秒。</p>\n<p><strong>时区</strong></p>\n<p>地球自西向东旋转，东边比西边先看到太阳，东边的时间也比西边的早。为了统一世界的时间，1884 年的国际经度会议规规定将全球划分为 24 个时区（东、西各 12 个时区）。规定英国（格林尼治天文台旧址）为零时区（GMT+00），东 1-12 区，西 1-12 区，中国北京处于东 8 区（GMT+08）。</p>\n<p>若中国当前时间为 8 点整，则英国时间为 0 点整。</p>\n<p><strong>UTC 时间与本地时间</strong></p>\n<p>UTC + 时区差 = 本地时间</p>\n<p>时区差东为正，西为负。在此，把东八区时区差记为  <code>+08</code></p>\n<p>UTC + (+08) = 本地（北京）时间</p>\n<p><strong>UNIX 时间戳</strong></p>\n<p>由 Unix 内核提供的基本时间服务是自国际标准时间公元 1970 年 1 月 1 日 00:00:00 以来的秒数。</p>\n<h1 id=\"时间及时区查看命令\"><a class=\"anchor\" href=\"#时间及时区查看命令\">#</a> 时间及时区查看命令</h1>\n<ul>\n<li>获取 UTC 世界时间</li>\n</ul>\n<p><code>date -u</code></p>\n<ul>\n<li>获取当地时间</li>\n</ul>\n<p><code>date</code></p>\n<ul>\n<li>获取当地时间及时差</li>\n</ul>\n<p><code>date -R</code></p>\n<h1 id=\"时区设置命令\"><a class=\"anchor\" href=\"#时区设置命令\">#</a> 时区设置命令</h1>\n<p><strong>1、对于完整的 Linux 系统</strong></p>\n<ol>\n<li>命令跟描述对不上号的  <code>tzselect</code></li>\n</ol>\n<p>看起来很像一个时区选择的工具，但并非如此。事实上 tzselect 仅仅是一个查看时区表示方式的『向导』程序而已。通过依次询问大洲→国家→城市，最后告诉你如何 TZ 变量的写法，比如北京时间是： <code>Asia/Shanghai</code></p>\n<ol start=\"2\">\n<li>TZ 变量</li>\n</ol>\n<p>根据上面的指导，可以获知通过修改 TZ 变量，直接修改时区信息，例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">date</span> <span class=\"token parameter variable\">-R</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre> Tue, <span class=\"token number\">17</span> Jan <span class=\"token number\">2017</span> <span class=\"token number\">13</span>:57:06 +0000</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">export</span>  <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span><span class=\"token string\">'Asia/Shanghai'</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">date</span> <span class=\"token parameter variable\">-R</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre> Tue, <span class=\"token number\">17</span> Jan <span class=\"token number\">2017</span> <span class=\"token number\">19</span>:57:18 +0600</pre></td></tr></table></figure><p>但如果不写在环境变量文件配置里的话，一般是会话级的操作，取消重新打开便会失效；因此对于在 shell 中实现更改 TZ 变量，只能做到临时变更时区信息。</p>\n<p>正确做法是到  <code>/etc/profile</code>  里（或用户的  <code>~/.profile</code>  或  <code>~/.bashrc</code>  文件等），直接  <code>export TZ='xxx'</code>  更改时区（时区的名字可以用  <code>tzselect</code>  向导来确定）</p>\n<ol start=\"3\">\n<li><code>/etc/localtime</code>  文件</li>\n</ol>\n<p>默认情况下情况下，TZ 属性是空，这时候是靠  <code>/etc/localtime</code>  文件来确定的时区。而此文件通常又是一个到  <code>/usr/share/zoneinfo/</code>  下各种时区文件的软连接。通过修改  <code>/etc/localtime</code>  指向的软连接，进而修改系统的时区。比如下面的方法，将 localtime 文件设置为了北京时间：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</pre></td></tr></table></figure><p><strong>2、对于裁剪的 Linux 系统，如：arm linux</strong></p>\n<ol>\n<li><code>tzselect</code>  命令</li>\n</ol>\n<p>正常情况下，裁剪过的是不支持该命令的，因此相对于上面的 2、3 两点并不适用于此。</p>\n<ol start=\"2\">\n<li>TZ 变量</li>\n</ol>\n<p>与上面一样可通过修改 TZ 变量，直接修改时区信息，但与此不同的是，并不能通过  <code>TZ='Asia/Shanghai'</code>  去修改，只能通过时区偏移量来修改，例如我们中国的北京时间相对于  <code>UTC-0</code>  的偏移量是  <code>UTC+8</code>  ；那么则修改为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">date</span> <span class=\"token parameter variable\">-R</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre> Tue, <span class=\"token number\">17</span> Jan <span class=\"token number\">2017</span> <span class=\"token number\">13</span>:57:06 +0000</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">export</span>  <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span><span class=\"token string\">'CST-8'</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">date</span> <span class=\"token parameter variable\">-R</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre> Tue, <span class=\"token number\">17</span> Jan <span class=\"token number\">2017</span> <span class=\"token number\">19</span>:57:18 +0600</pre></td></tr></table></figure><p>注意，在这里，UTC+、- 是相反的，UTC-8 代表的是相对于 UTC 加八个小时，反之减八个小时......；而 CST 则是对应为北京时区缩写。</p>\n<p>时区表信息可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGltZWFuZGRhdGUuY29tL3RpbWUvem9uZXMv\">https://www.timeanddate.com/time/zones/</span></p>\n<ol start=\"3\">\n<li><code>/etc/localtime</code>  文件</li>\n</ol>\n<p>由于裁剪问题，系统中是没有  <code>/usr/share/zoneinfo/</code>  文件夹的，如有需要，将 PC 端的  <code>/usr/share/zoneinfo</code>  整个  <code>zoneinfo</code>  文件夹复制到 rootfs 的  <code>/usr/share</code>  下，这样嵌入式系统中就有了  <code>timezone</code>  。</p>\n<p>最后同样执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</pre></td></tr></table></figure><p>note：时区信息保存在  <code>/etc/localtime</code>  文件里，如果没有该文件则系统是零时区，有该文件时系统会去读取该文件。具体该文件的内容可以不同关心，在  <code>/usr/share/zoneinfo/</code>  目录下有各个时区对应的文件，只需要拷贝过去就可以。比如我们常用的东八区时间就是对应  <code>/usr/share/zoneinfo/Asia/Shanghai</code>  文件，只需要将该文件指向或拷贝到  <code>/etc/localtime</code>  就将系统时间改为东八区。</p>\n<h1 id=\"常用-api\"><a class=\"anchor\" href=\"#常用-api\">#</a> 常用 API</h1>\n<h2 id=\"时间结构体\"><a class=\"anchor\" href=\"#时间结构体\">#</a> 时间结构体</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_sec<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* Seconds (0-60) */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_min<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* Minutes (0-59) */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_hour<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Hours (0-23) */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_mday<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Day of the month (1-31) */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_mon<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* Month (0-11) */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_year<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Year - 1900 */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_wday<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Day of the week (0-6, Sunday = 0) */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_yday<span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* Day in the year (0-365, 1 Jan = 0) */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> tm_isdst<span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* Daylight saving time */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">time_t</span>      tv_sec<span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* seconds (秒) */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">suseconds_t</span> tv_usec<span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* microseconds (微秒) */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">timezone</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> tz_minuteswest<span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* minutes west of Greenwich */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> tz_dsttime<span class=\"token punctuation\">;</span>         <span class=\"token comment\">/* type of DST correction */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"时间函数归类\"><a class=\"anchor\" href=\"#时间函数归类\">#</a> 时间函数归类</h2>\n<p><strong>1、C99 标准库函数</strong></p>\n<p>需  <code>#include &lt;time.h&gt;</code></p>\n<ul>\n<li>获取时间戳：</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* time () 函数，返回一个从 1970 年 1 月 1 日 00:00:00 到现在的 time_t 类型 UTC 时间，当参数为 NULL 时直接返回秒数，当然也会将该值写入 t 指针指向的地址。 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">time_t</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/* mktime () 会把本地时间转换为 UTC 时间 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">time_t</span> <span class=\"token function\">mktime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>tm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//note：两者区别在于传入的参数结构体不同，mktime 存在时区转换；time (t) 等价于 mktime (localtime (time (t)))。</span></pre></td></tr></table></figure><ul>\n<li>获取  <code>struct tm</code>  类型的时间：</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* gmtime () 是零时区，把 UTC 时间转换成北京时间的话，需要在年数上加 1900，月份上加 1，小时数加上 8。 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span><span class=\"token function\">gmtime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>timep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span><span class=\"token function\">gmtime_r</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>timep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* localtime () 将得到本地时间，该函数与 gmtime () 唯一区别是，在转换成北京时间的小时数不需要加上 8。 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span><span class=\"token function\">localtime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>timep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span><span class=\"token function\">localtime_r</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>timep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//note：localtime 是将时区考虑在内了，转出的是当前时区的时间。但是注意，有些嵌入式设备上被裁减过的系统，时区没有被设置好，导致二者转出来的时间都是零时区的。在多线程应用里面，应该用后缀不带 `_r` 的函数，如： localtime_r 函数替代 localtime 函数，因为 localtime_r 是线程安全的，例子看第五大点。</span></pre></td></tr></table></figure><ul>\n<li>时间日期格式化：</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 将 tm 结构中的时间信息转换为相应时间的字符串 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">asctime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>tm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">asctime_r</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>tm<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 将日历时间参数 timep 转换为一个表示本地当前时间的字符串，函数已经由时区转换成当地时间 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">ctime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>timep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">ctime_r</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span>timep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//note：两者区别在于传入的参数结构体不同，但转换出来的信息格式显示是一样的；asctime 是直接把时间格式化，而 ctime 是经过时区转换后再格式化输出；ctime (t) 等价于 asctime (localtime (t))。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/* 常用时间格式化参数看下方描述 */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">size_t</span> <span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>format<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>tm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在使用  <code>strftime</code>  时间格式化函数所涉及的相关参数的含义如下：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%F</td>\n<td>将时间格式化为年 - 月 - 日</td>\n</tr>\n<tr>\n<td>%T</td>\n<td>将时间格式化为显示时分秒: hh:mm:ss</td>\n</tr>\n<tr>\n<td>%Y</td>\n<td>将时间格式化为带世纪部分的十制年份</td>\n</tr>\n<tr>\n<td>%m</td>\n<td>将时间格式化为十进制表示的月份</td>\n</tr>\n<tr>\n<td>%d</td>\n<td>将时间格式化为十进制的每月中的第几天</td>\n</tr>\n<tr>\n<td>%H</td>\n<td>将时间格式化为 24 小时制的小时</td>\n</tr>\n<tr>\n<td>%M</td>\n<td>将时间格式化为十进制表示的分钟数</td>\n</tr>\n<tr>\n<td>%S</td>\n<td>将时间格式化为十进制表示的秒数</td>\n</tr>\n</tbody>\n</table>\n<p>更多参数请阅：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jcHJvZ3JhbW1pbmcvYy1mdW5jdGlvbi1zdHJmdGltZS5odG1s\">https://www.runoob.com/cprogramming/c-function-strftime.html</span></p>\n<ul>\n<li>获取时间差：</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token function\">difftime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">time_t</span> time1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">time_t</span> time0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>2、Uinx 系统函数</strong></p>\n<p>需  <code>#include &lt;sys/time.h&gt;</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/time.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>获取 <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> 类型的时间：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/* 相对于 time () 和 mktime () ，gettimeofday () 能获取更精准的微秒级别，及相应的时区信息，需要注意的是 tz 是依赖于系统，不同的系统可能存在获取不到的可能，因此通常设置为 NULL */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> <span class=\"token operator\">*</span>tv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timezone</span> <span class=\"token operator\">*</span>tz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 成功则返回 0，失败返回 －1，错误代码存于 errno</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// EFAULT：指针 tv 或 tz 所指的内存空间无效。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>设置 <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> 类型的时间：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">settimeofday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> <span class=\"token operator\">*</span>tv<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timezone</span> <span class=\"token operator\">*</span>tz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 成功则返回 0，失败返回 －1，错误代码存于 errno</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// EPERM：调用进程没有足够权限调用 settimeofday ()，即权限不够。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// EINVAL：时区或其它内容无效，无法正确设置时间。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//note：settimeofday 的修改时间需要在 root 权限下才能配置成功。</span></pre></td></tr></table></figure><p><strong>3、总结</strong></p>\n<p><code>time</code> 、 <code>gmtime</code> 、 <code>asctime</code>  所表示的时间都是 UTC 时间，只是数据类型不一样，<br>\n而  <code>mktime</code> 、 <code>localtime</code> 、 <code>ctime</code>  的时间都存在时区之间变换。</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>传参类型</th>\n<th>返回类型</th>\n<th>时区转换</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>time()</td>\n<td>time_t</td>\n<td>time_t</td>\n<td>UTC+0</td>\n<td>用于获取 UTC 零时区的时间戳格式</td>\n</tr>\n<tr>\n<td>mktime()</td>\n<td>struct tm</td>\n<td>time_t</td>\n<td>UTC-t</td>\n<td>用于获取 UTC 零时区的时间戳格式，但会经过时区转换，把本地时间内部换成 UTC+0</td>\n</tr>\n<tr>\n<td>gmtime()</td>\n<td>time_t</td>\n<td>struct tm</td>\n<td>UTC+0</td>\n<td>用于获取 UTC 零时区的</td>\n</tr>\n<tr>\n<td>localtime()</td>\n<td>time_t</td>\n<td>struct tm</td>\n<td>UTC+t</td>\n<td></td>\n</tr>\n<tr>\n<td>asctime()</td>\n<td>struct tm</td>\n<td>string</td>\n<td>UTC+0</td>\n<td></td>\n</tr>\n<tr>\n<td>ctime()</td>\n<td>time_t</td>\n<td>string</td>\n<td>UTC+t</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"函数应用\"><a class=\"anchor\" href=\"#函数应用\">#</a> 函数应用</h2>\n<p>1、获取当前时区的时间戳偏移量</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">time_t</span> <span class=\"token function\">get_localtime_interval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">time_t</span> timep_utc<span class=\"token punctuation\">,</span> timep_local<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> tm_utc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>timep_utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">gmtime_r</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>timep_utc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tm_utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ttimep_local <span class=\"token operator\">=</span> <span class=\"token function\">mktime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tm_utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>timep_utc <span class=\"token operator\">-</span> timep_local<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2、获取当前时区的时间戳（带时区的本地时间）</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">time_t</span> <span class=\"token function\">get_time_stamp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token class-name\">time_t</span> timep<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>timep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ttimep <span class=\"token operator\">+=</span> <span class=\"token function\">get_localtime_interval</span><span class=\"token punctuation\">(</span>timep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> timep<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3、获取时区偏移量</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">time_t</span> <span class=\"token function\">get_time_stamp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token class-name\">time_t</span> timep_zone<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    timep_zone <span class=\"token operator\">=</span> <span class=\"token function\">get_localtime_interval</span><span class=\"token punctuation\">(</span>timep<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> timep_zone<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>4、时区设置函数</p>\n<p>时间函数除了 gmttime ()、asctime () 不受环境变量 TZ 的影响外，大部分函数都受到环境变量 TZ 的影响，这几个函数是： localtime、mktime、ctime 和 strftime。如果定义了 TZ，则这些函数将使用其值以代替系统默认时区。</p>\n<p>在 Unix 环境下可以通过改变系统文件修改环境变量，也可以通过函数 setenv () 修改。</p>\n<p>TZ 指定了当前的系统时区。这个时区会影响我们所做的时间转换。例如假设当前的系统时间是 8:00AM，如果我们把当前的时区设置成东八区，则标准时间就是（即 UTC+0）的时间就是 8-8=0:00AM，如果是看成是东六区的话，则标准时间就变成了 8-6=2:00AM。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span>  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span>  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span>    </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">setenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TZ\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CST-8\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 北京东八区</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">//setenv (\"TZ\", \"UTC+0\", 1);   // 将当前时区设置成标准区</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> tv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span><span class=\"token operator\">*</span> tm_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    tm_time <span class=\"token operator\">=</span> <span class=\"token function\">gmtime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">.</span>tv_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%a %b %m %H:%M:%S %Z %Y\"</span><span class=\"token punctuation\">,</span> tm_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GMT time: %s\\n\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    tm_time <span class=\"token operator\">=</span> <span class=\"token function\">localtime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">.</span>tv_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%a %b %m %H:%M:%S %Z %Y\"</span><span class=\"token punctuation\">,</span> tm_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"local time: %s\\n\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"localtime-和-localtime_r-区别\"><a class=\"anchor\" href=\"#localtime-和-localtime_r-区别\">#</a> localtime 和 localtime_r 区别</h1>\n<p>示例来源（下方为原文备份记录）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rlc3QxMjgwL2FydGljbGUvZGV0YWlscy84MDkxNzk2Mg==\">https://blog.csdn.net/test1280/article/details/80917962</span></p>\n<p><code>localtime</code>  和  <code>localtime_r</code>  的函数功能： converts the calendar time timep to broken-time representation</p>\n<p>在调用  <code>localtime</code>  和  <code>localtime_t</code>  函数时，需特别注意：</p>\n<ul>\n<li>\n<p><code>localtime</code>  是不可重入函数，非线程安全</p>\n</li>\n<li>\n<p><code>localtime_r</code>  是可重入函数，线程安全</p>\n</li>\n</ul>\n<p>1、使用  <code>localtime</code>  时不可重入示范：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">time_t</span> curTime <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">time_t</span> aftTime <span class=\"token operator\">=</span> curTime <span class=\"token operator\">+</span> <span class=\"token number\">3600</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>pTm1 <span class=\"token operator\">=</span> <span class=\"token function\">localtime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>curTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> <span class=\"token operator\">*</span>pTm2 <span class=\"token operator\">=</span> <span class=\"token function\">localtime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>aftTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%04d%02d%02d%02d%02d%02d\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            pTm1<span class=\"token operator\">-></span>tm_year <span class=\"token operator\">+</span> <span class=\"token number\">1900</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            pTm1<span class=\"token operator\">-></span>tm_mon <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            pTm1<span class=\"token operator\">-></span>tm_mday<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            pTm1<span class=\"token operator\">-></span>tm_hour<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            pTm1<span class=\"token operator\">-></span>tm_min<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            pTm1<span class=\"token operator\">-></span>tm_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%04d%02d%02d%02d%02d%02d\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            pTm2<span class=\"token operator\">-></span>tm_year <span class=\"token operator\">+</span> <span class=\"token number\">1900</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            pTm2<span class=\"token operator\">-></span>tm_mon <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            pTm2<span class=\"token operator\">-></span>tm_mday<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            pTm2<span class=\"token operator\">-></span>tm_hour<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            pTm2<span class=\"token operator\">-></span>tm_min<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            pTm2<span class=\"token operator\">-></span>tm_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译 &amp; 运行：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ gcc <span class=\"token parameter variable\">-o</span> main main.c</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">20180704225205</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">20180704225205</span></pre></td></tr></table></figure><p>调用  <code>localtime</code>  函数并获取其返回值（一个指向  <code>struct tm</code>  结构类型数据的指针）后，我们并未对返回值进行<strong>显式地释放</strong>。</p>\n<p><strong>这并没有什么问题（不会导致内存泄漏）</strong>。</p>\n<p>因为  <code>localtime</code>  函数返回值是一个指针，指向一个静态变量，这个静态变量是库中的一个  <code>static struct tm</code>  类型数据。</p>\n<p>man localtime：</p>\n<p>The return value points to a <strong>statically allocated struct</strong> which might <strong>be overwritten</strong> by <strong>subsequent calls</strong> to any of the date and time functions.</p>\n<p>这将引出新的问题，<strong>同一进程</strong>多个线程中同时调用（极短时间内连续调用）  <code>localtime</code>  函数，返回值  <code>tm</code>  可能被覆盖。</p>\n<p>举个栗子：</p>\n<p>两个线程 A 和 B 同时调用  <code>localtime</code>  函数：</p>\n<p>时刻 1：线程 A 调用  <code>localtime</code>  函数，得到一个指针，指向  <code>static struct tm</code>  类型变量；（tm 中存储的值更新为 value-a）</p>\n<p>时刻 2：线程 B 调用  <code>localtime</code>  函数，得到一个指针，指向  <code>static struct tm</code>  类型变量；（tm 中存储的值更新为 value-b）</p>\n<p>时刻 3：线程 A 对  <code>localtime</code>  返回的指针进行相关引用操作（例如 printf 输出某字段），此时  <code>static struct tm</code>  中的值实际是 value-b，并非预期的 value-a。</p>\n<p>时刻 4：线程 B 对  <code>localtime</code>  返回的指针进行相关引用操作，此时  <code>static struct tm</code>  中的值实际是 value-b。</p>\n<p>上面的示范代码虽然是在同一线程中，但是已经可以简单模拟这样的多线程执行调用流程。</p>\n<p><strong>如何解决？</strong></p>\n<p><code>localtime_r</code>  是  <code>localtime</code>  的可重入版本（线程安全版本）。</p>\n<p><code>localtime</code>  不可重入是由于  <code>static struct tm</code>  是库中的一个静态变量，如果我们在调用  <code>localtime</code>  时传入一个  <code>struct tm</code>  类型变量（指针）用于存放结果，岂不是实现<strong>可重入</strong>？</p>\n<p>Bingo！</p>\n<p><code>struct tm *localtime(const time_t *timep);</code></p>\n<p><code>struct tm *localtime_r(const time_t *timep, struct tm *result);</code></p>\n<p>调用  <code>localtime</code>  只需要传入指向  <code>time_t</code>  的一个常量指针；</p>\n<p>调用  <code>localtime_t</code>  不仅需要传入指向  <code>time_t</code>  的一个常量指针，还需要传入指向  <code>struct tm</code>  的一个指针，结果将存储在  <code>result</code>  指向的  <code>struct tm</code>  对象中；</p>\n<p>The return value points to a statically allocated struct which might be overwritten by subsequent calls to any of the date and time functions.</p>\n<p>The localtime_r() function does the same, <strong>but stores the data in a user-supplied struct</strong>.</p>\n<p>2、使用  <code>localtime_r</code>  时可重入示范：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">time_t</span> curTime <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">time_t</span> aftTime <span class=\"token operator\">=</span> curTime <span class=\"token operator\">+</span> <span class=\"token number\">3600</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> tm1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tm</span> tm2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">localtime_r</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>curTime<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tm1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">localtime_r</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>aftTime<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tm2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%04d%02d%02d%02d%02d%02d\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            tm1<span class=\"token punctuation\">.</span>tm_year <span class=\"token operator\">+</span> <span class=\"token number\">1900</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            tm1<span class=\"token punctuation\">.</span>tm_mon <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            tm1<span class=\"token punctuation\">.</span>tm_mday<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            tm1<span class=\"token punctuation\">.</span>tm_hour<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            tm1<span class=\"token punctuation\">.</span>tm_min<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            tm1<span class=\"token punctuation\">.</span>tm_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%04d%02d%02d%02d%02d%02d\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            tm2<span class=\"token punctuation\">.</span>tm_year <span class=\"token operator\">+</span> <span class=\"token number\">1900</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            tm2<span class=\"token punctuation\">.</span>tm_mon <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            tm2<span class=\"token punctuation\">.</span>tm_mday<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            tm2<span class=\"token punctuation\">.</span>tm_hour<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            tm2<span class=\"token punctuation\">.</span>tm_min<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            tm2<span class=\"token punctuation\">.</span>tm_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>编译 &amp; 运行：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ gcc <span class=\"token parameter variable\">-o</span> main main.c</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">20180704200531</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">20180704230531</span></pre></td></tr></table></figure><h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3VuLWZyZWRlcmljay9wLzQ3NzI1MzUuaHRtbA==\">https://www.cnblogs.com/sun-frederick/p/4772535.html</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Rlc3QxMjgwL2FydGljbGUvZGV0YWlscy84MDkxNzk2Mg==\">https://blog.csdn.net/test1280/article/details/80917962</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/6ull-kernel-transplant/",
            "url": "https://arachnid.cc/6ull-kernel-transplant/",
            "title": "imx-6ULL kernel 移植",
            "date_published": "2023-03-04T15:32:46.000Z",
            "content_html": "",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/6ull-uboot-transplant/",
            "url": "https://arachnid.cc/6ull-uboot-transplant/",
            "title": "imx-6ULL uboot 移植",
            "date_published": "2023-03-03T12:52:11.803Z",
            "content_html": "<blockquote>\n<p>开发平台：Ubuntu 18.04.6</p>\n<p>目标平台：imx-6ull</p>\n<p>uboot 版本：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL254cC1pbXgvdWJvb3QtaW14L3RyZWUvaW14X3YyMDIwLjA0XzUuNC43MF8yLjMuMA==\">uboot-imx-imx_v2020.04_5.4.70_2.3.0</span></p>\n<p>编译工具链：gcc versions 10.3.1 20210621 (GNU Toolchain for the A-profile Architecture 10.3-2021.07 (arm-10.29))</p>\n</blockquote>\n<h1 id=\"环境搭建\"><a class=\"anchor\" href=\"#环境搭建\">#</a> 环境搭建</h1>\n<h2 id=\"交叉编译器\"><a class=\"anchor\" href=\"#交叉编译器\">#</a> 交叉编译器</h2>\n<p>在 ARM <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYXJtLmNvbS9kb3dubG9hZHMvLS9nbnUtYQ==\">官方链接</span>下载 Arm A-profile architecture 编译工具链，选择自己相应的平台，这里的话是： <code>gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf</code>  。</p>\n<p>解压添加至本地：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 创建存放编译工具链的文件夹</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /usr/local/arm</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token comment\"># 移动文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf.tar.xz /usr/local/arm/</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token comment\"># 解压文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xvf</span> /usr/local/arm/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf.tar.xz</pre></td></tr></table></figure><p>添加环境变量：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 添加到系统环境变量 (对所有用户有效)</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/profile</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/usr/local/arm/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf/bin</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token comment\"># 添加到用户环境变量 (仅对当前用户有效)</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> ~/.bashrc </pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/usr/local/arm/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf/bin</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre><span class=\"token comment\"># 以上二选一</span></pre></td></tr></table></figure><p>测试命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 成功打印版本信息则为通过</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] $\"></td><td><pre>arm-none-linux-gnueabihf-gcc <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><h2 id=\"uboot-源码\"><a class=\"anchor\" href=\"#uboot-源码\">#</a> uboot 源码</h2>\n<p>NXP 维护的 uboot 仓库地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL254cC1pbXgvdWJvb3QtaW14\">https://github.com/nxp-imx/uboot-imx</span></p>\n<p>获取 NXP uboot 5.4.70_2.3.0 版本的源码：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 拉取源码文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/nxp-imx/uboot-imx.git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 切换到</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> checkout imx_v2020.04_5.4.70_2.3.0</pre></td></tr></table></figure><p>上面的 clone 操作会拉取所有分支文件及历史提交信息下来，文件比较大，如果网络不太好，可以尝试打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL254cC1pbXgvdWJvb3QtaW14L3RyZWUvaW14X3YyMDIwLjA0XzUuNC43MF8yLjMuMA==\">https://github.com/nxp-imx/uboot-imx/tree/imx_v2020.04_5.4.70_2.3.0</span> 只下载 ZIP 压缩包下来，然后利用  <code>unzip</code>  命令解压。</p>\n<p>note：对于不同分支，有  <code>fslc</code>  和  <code>imx</code>  关键字的区分，以下摘录解释：</p>\n<figure class=\"highlight wiki\"><figcaption data-lang=\"Wiki markup\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>There are two BSPs, the BSP Releases which are supported by NXP and their documentation can be found on the Linux i.MX webpage, and the Community BSP.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>A BSP Release roadmap is not publicly available, but as you may see there are new BSPs every several months. However, it usually lags in respect to the Linux Mainline Kernel as a lot of work is done to ensure that the kernel works correctly on the NXP hardware. The kernel from these BSP Releases (linux-imx) can be found on the following repository and it is indeed an upstream from the Community BSP Kernel.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https://source.codeaurora.org/external/imx/linux-imx/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>As for the Community BSP, it’s constantly being updated by the Community but due to its nature is hard to predict how fast each branch will be developed.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>You can find more information about the Community BSP on the link below:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>http://freescale.github.io/</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>The Kernel recipes of the community BSP (linux-fslc) would be on the meta-freescale layer:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>http://git.yoctoproject.org/cgit/cgit.cgi/meta-freescale</pre></td></tr></table></figure><p>简单的来讲，就是  <code>imx</code>  是官方发行版，而  <code>fslc</code>  是社区发行版。</p>\n<p>来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21tdW5pdHkubnhwLmNvbS90NS9pLU1YLVByb2Nlc3NvcnMvd2hhdC1pcy10aGUtcHVycG9zZS1vZi1saW51eC1mc2xjLWdpdC9tLXAvMTA0NzYwMg==\">https://community.nxp.com/t5/i-MX-Processors/what-is-the-purpose-of-linux-fslc-git/m-p/1047602</span></p>\n<p>关于 uboot 版本选择：</p>\n<p>随着时间的变化，uboot 的更新也出现了多个的版本，那么到底应该选择哪一个呢？有些人可能会说当然是越新越好啦。其实呢不是这个样子的，虽然 uboot 本身是在不断的开发和进化当中，但对于新版本来说，可能开发者们在某一个版本中加入了一些新的特性，然后呢过了一段时间又发现这个新功能不是很稳定，就有可能会把它删掉或者需要后期继续更新迭代修复；这样一来就会对我们所移植的 uboot 来说就会增加很多不必要的复杂性，因为不排除是否会影响到所使用的功能，所以一般的原则就是够用就可以了，不需要频繁更新。</p>\n<p>那如何选择属于自己的版本呢：</p>\n<ol>\n<li>\n<p>打开下载的 uboot 目录下的： <code>arch/arm/cpu</code>  目录，确认使用的 cpu 型号是否支持及对应。</p>\n</li>\n<li>\n<p>打开 uboot 目录下的： <code>board</code>  目录，查看相对应的外设是否都支持。eq： <code>board/freescale/mx6ull_board/</code>  。</p>\n</li>\n</ol>\n<p>一般来说，uboot 版本越新支持的开发板和 cpu 就越多，代码量就越多，如果我们的 cpu 和开发板的并没有这么多东西，那我们可以不用新的。而用适合自己产品外设的，通常是根据开发板发行的日期和 uboot 的更新日期来找到合适的 uboot。</p>\n<h1 id=\"编译验证\"><a class=\"anchor\" href=\"#编译验证\">#</a> 编译验证</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-s</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span>arm</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CROSS_COMPILE</span><span class=\"token operator\">=</span>arm-none-linux-gnueabihf-</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token function\">make</span> distclean</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token function\">make</span> mx6ull_14x14_evk_emmc_defconfig</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre><span class=\"token function\">make</span></pre></td></tr></table></figure><p>编译源码这一步的目的：</p>\n<ul>\n<li>\n<p>一是为了验证编译环境是否正常；</p>\n</li>\n<li>\n<p>二是为了下一步移植过程中的代码分析（一些文件只有在编译后才会生成）。</p>\n</li>\n</ul>\n<p>注意：</p>\n<p>若是提示  <code>make: 未找到命令</code>  ，则需要安装  <code>make</code>  工具：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">make</span></pre></td></tr></table></figure><p>若是出现  <code>/bin/sh: 1: cc: not found</code>  ，需要安装 gcc 依赖，因为  <code>HOSTCC  scripts/basic/fixdep</code>  强制定义使用了 gcc， <code>HOSTCC=gcc</code>  ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gcc</pre></td></tr></table></figure><p>若是在系统上第一次编译 uboot 源码可能会遇到缺少   <code>bison</code> 、 <code>flex</code>  的报错信息导致编译失败，只需安装相应的工具包后重新执行编译即可：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command></td><td><pre><span class=\"token comment\"># 语法分析工具</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> bison</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token comment\"># 词法分析工具</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> flex</pre></td></tr></table></figure><h1 id=\"移植\"><a class=\"anchor\" href=\"#移植\">#</a> 移植</h1>\n<p>下面以命名为  <code>lanjut</code>  的板子为例。</p>\n<h2 id=\"开发板文件夹\"><a class=\"anchor\" href=\"#开发板文件夹\">#</a> 开发板文件夹</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-d</span> board/freescale/*6ull*</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>board/freescale/mx6ullevk     board/freescale/mx6ull_ddr3_val</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> <span class=\"token parameter variable\">-r</span> board/freescale/mx6ullevk/ board/freescale/mx6ull_lanjut/</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">mv</span> board/freescale/mx6ull_lanjut/mx6ullevk.c board/freescale/mx6ull_lanjut/mx6ull_lanjut.c</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ls</span> board/freescale/mx6ull_lanjut/</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>imximage.cfg         Kconfig      Makefile        plugin.S</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>imximage_lpddr2.cfg  MAINTAINERS  mx6ull_lanjut.c  README</pre></td></tr></table></figure><p><strong>修改：</strong></p>\n<p>1、 <code>Kconfig</code>  文件：</p>\n<pre><code>gedit board/freescale/mx6ull_lanjut/Kconfig\n</code></pre>\n<p>更改内容为（注意该文件  <code>endif</code>  后面必须有换行）：</p>\n<figure class=\"highlight wiki\"><figcaption data-lang=\"Wiki markup\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>if TARGET_MX6ULL_14X14_LANJUT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>config SYS_BOARD</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tdefault \"mx6ull_lanjut\"</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>config SYS_VENDOR</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdefault \"freescale\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>config SYS_CONFIG_NAME</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tdefault \"mx6ull_lanjut\"</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>config SYS_TEXT_BASE</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tdefault 0x87800000</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>endif</pre></td></tr></table></figure><p>2、 <code>Makefile</code>  文件：</p>\n<pre><code>gedit board/freescale/mx6ull_lanjut/Makefile\n</code></pre>\n<p>把  <code>obj-y  := mx6ullevk.o</code>  改为  <code>obj-y  := mx6ull_lanjut.o</code>  。</p>\n<p>3、 <code>imximage_lpddr2.cfg</code>  和  <code>imximage.cfg</code>  文件：</p>\n<p>该更改受控于  <code>CONFIG_USE_IMXIMG_PLUGIN</code>  宏定义，在配置文件中是没有使能的，改不改都无所谓，但为了统一，把  <code>PLUGIN\tboard/freescale/mx6ullevk/plugin.bin 0x00907000</code>  改为  <code>PLUGIN\tboard/freescale/mx6ull_lanjut/plugin.bin 0x00907000</code>  。</p>\n<p>4、 <code>MAINTAINERS</code>  文件：</p>\n<p>是维护者记录文件，作为个人使用，改不改都无所谓；如果是作为 uboot 项目维护者，则需要完整记录好详细的信息，以便更好的发展维护。</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MX6ULL_LANJUT BOARD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>M:\tArachnid <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>xxxx@qq.com</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>S:\tMaintained</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>F:\tboard/freescale/mx6ull_lanjut/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>F:\tinclude/configs/mx6ull_lanjut.h</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>F:\tconfigs/mx6ull_14x14_lanjut_defconfig</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>F:\tconfigs/mx6ull_14x14_lanjut_plugin_defconfig</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>F:\tconfigs/mx6ulz_14x14_lanjut_defconfig</pre></td></tr></table></figure><p>5、 <code>mx6ull_lanjut.c</code>  文件：</p>\n<ul>\n<li>\n<p><code>board_late_init</code>  函数</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">board_late_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">CONFIG_CMD_BMODE</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">add_board_boot_modes</span><span class=\"token punctuation\">(</span>board_boot_modes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tee\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">CONFIG_IMX_OPTEE</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tee\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"board_name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LANJUT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 决定了后面 findfdt 和 findtee 环境变量的选择</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_mx6ull_9x9_evk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"board_rev\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"9X9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"board_rev\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14X14\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_cpu_type</span><span class=\"token punctuation\">(</span>MXC_CPU_MX6ULZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"board_name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ULZ-EVK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">env_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usb_net_cmd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"usb start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">setup_lcd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">CONFIG_ENV_IS_IN_MMC</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">board_late_mmc_env_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">set_wdog_reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">wdog_regs</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>WDOG1_BASE_ADDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>checkboard</code>  函数</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">checkboard</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_mx6ull_9x9_evk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Board: MX6ULL 9x9 EVK\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_cpu_type</span><span class=\"token punctuation\">(</span>MXC_CPU_MX6ULZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Board: MX6ULZ 14x14 EVK\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Board: MX6ULL 14x14 LANJUT\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//uboot 板载信息显示</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"设备树文件\"><a class=\"anchor\" href=\"#设备树文件\">#</a> 设备树文件</h2>\n<p>在新版本 uboot 中，参考 Linux 内核引入了<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGV2aWNldHJlZS5vcmcv\">设备树</span>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly91LWJvb3QucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L2RldmVsb3AvZHJpdmVyLW1vZGVsL2luZGV4Lmh0bWw=\">驱动模型 (Driver Model)</span>。</p>\n<p>1、 <code>imx6ull-14x14-lanjut-emmc.dts</code>  文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ls</span> arch/arm/dts/*6ull*.dts</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-ddr3-val.dts</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-ddr3-val-emmc.dts</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-ddr3-val-epdc.dts</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-ddr3-val-gpmi-weim.dts</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-ddr3-val-lcdif.dts</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-ddr3-val-tsc.dts</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-evk.dts</pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-evk-emmc.dts</pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-14x14-evk-gpmi-weim.dts</pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-9x9-evk.dts</pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-colibri.dts</pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-dart-6ul.dts</pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-phytec-segin-ff-rdk-emmc.dts</pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre>arch/arm/dts/imx6ull-somlabs-visionsom.dts</pre></td></tr><tr><td data-num=\"16\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> arch/arm/dts/imx6ull-14x14-evk-emmc.dts arch/arm/dts/imx6ull-14x14-lanjut-emmc.dts</pre></td></tr><tr><td data-num=\"17\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>gedit arch/arm/dts/imx6ull-14x14-lanjut-emmc.dts</pre></td></tr></table></figure><p><strong>修改：</strong></p>\n<p>把  <code>#include &quot;imx6ull-14x14-evk.dts&quot;</code>  更改为  <code>#include &quot;imx6ull-14x14-lanjut.dts&quot;</code>  。</p>\n<p>同时更改以下内容：</p>\n<pre><code>/ &#123;\n\tmodel = &quot;i.MX6 ULL 14x14 EVK Board&quot;;\n\tcompatible = &quot;fsl,imx6ull-14x14-evk&quot;, &quot;fsl,imx6ull&quot;;\n&#125;;\n\n改为\n\n/ &#123;\n\tmodel = &quot;i.MX6 ULL 14x14 LANJUT Board&quot;;\n\tcompatible = &quot;fsl,imx6ull-14x14-lanjut&quot;, &quot;fsl,imx6ull&quot;;\n&#125;;\n</code></pre>\n<p>2、 <code>imx6ull-14x14-lanjut.dts</code>  文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> arch/arm/dts/imx6ull-14x14-evk.dts arch/arm/dts/imx6ull-14x14-lanjut.dts</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>gedit arch/arm/dts/imx6ull-14x14-lanjut.dts</pre></td></tr></table></figure><p><strong>修改：</strong></p>\n<p>把  <code>#include &quot;imx6ul-14x14-evk.dtsi&quot;</code>  更改为  <code>#include &quot;imx6ul-14x14-lanjut.dtsi&quot;</code>  ； <code>#include &quot;imx6ul-14x14-evk-u-boot.dtsi&quot;</code>  更改为  <code>#include &quot;imx6ul-14x14-lanjut-u-boot.dtsi&quot;</code>  。</p>\n<p>3、 <code>imx6ul-14x14-lanjut.dtsi</code>  和  <code>imx6ul-14x14-lanjut-u-boot.dtsi</code>  文件：</p>\n<p>根据  <code>imx6ull-14x14-lanjut.dts</code>  文件的  <code>#include</code>  包含文件，分别添加文件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> arch/arm/dts/imx6ul-14x14-evk.dtsi arch/arm/dts/imx6ul-14x14-lanjut.dtsi</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> arch/arm/dts/imx6ul-14x14-evk-u-boot.dtsi arch/arm/dts/imx6ul-14x14-lanjut-u-boot.dtsi</pre></td></tr></table></figure><h2 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h2>\n<p>1、 <code>mx6ull_14x14_lanjut_emmc_defconfig</code>  文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ls</span> configs/*6ull*</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>configs/colibri-imx6ull_defconfig</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_defconfig</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_emmc_defconfig</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_epdc_defconfig</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_nand_defconfig</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_plugin_defconfig</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_qspi1_defconfig</pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_spinor_defconfig</pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_ddr3_val_tsc_defconfig</pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_evk_defconfig</pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_evk_emmc_defconfig</pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_evk_nand_defconfig</pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_evk_optee_defconfig</pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_evk_plugin_defconfig</pre></td></tr><tr><td data-num=\"16\"></td><td data-command></td><td><pre>configs/mx6ull_14x14_evk_qspi1_defconfig</pre></td></tr><tr><td data-num=\"17\"></td><td data-command></td><td><pre>configs/mx6ull_9x9_evk_defconfig</pre></td></tr><tr><td data-num=\"18\"></td><td data-command></td><td><pre>configs/mx6ull_9x9_evk_plugin_defconfig</pre></td></tr><tr><td data-num=\"19\"></td><td data-command></td><td><pre>configs/mx6ull_9x9_evk_qspi1_defconfig</pre></td></tr><tr><td data-num=\"20\"></td><td data-command></td><td><pre>configs/somlabs_visionsom_6ull_defconfig</pre></td></tr><tr><td data-num=\"21\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> configs/mx6ull_14x14_evk_emmc_defconfig configs/mx6ull_14x14_lanjut_emmc_defconfig</pre></td></tr><tr><td data-num=\"22\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>gedit configs/mx6ull_14x14_lanjut_emmc_defconfig</pre></td></tr></table></figure><p><strong>修改：</strong></p>\n<p>把  <code>CONFIG_TARGET_MX6ULL_14X14_EVK=y</code>  改为  <code>CONFIG_TARGET_MX6ULL_14X14_LANJUT=y</code>  ； <code>CONFIG_SYS_EXTRA_OPTIONS=&quot;IMX_CONFIG=board/freescale/mx6ullevk/imximage.cfg&quot;</code>  改为  <code>CONFIG_SYS_EXTRA_OPTIONS=&quot;IMX_CONFIG=board/freescale/mx6ull_lanjut/imximage.cfg&quot;</code>  ； <code>CONFIG_DEFAULT_DEVICE_TREE=&quot;imx6ull-14x14-evk-emmc&quot;</code>  改为  <code>CONFIG_DEFAULT_DEVICE_TREE=&quot;imx6ull-14x14-lanjut-emmc&quot;</code>  。</p>\n<p>2、 <code>include/configs/mx6ull_lanjut.h</code>  文件：</p>\n<pre><code>ls include/configs/*6ull*\ninclude/configs/colibri-imx6ull.h  include/configs/mx6ullevk.h\ninclude/configs/mx6ull_ddr3_val.h  include/configs/somlabs_visionsom_6ull.h\ncp include/configs/mx6ullevk.h include/configs/mx6ull_lanjut.h\ngedit include/configs/mx6ull_lanjut.h\n</code></pre>\n<p><strong>修改：</strong></p>\n<p>把  <code>#ifndef __MX6ULLEVK_CONFIG_H</code>  和  <code>#define __MX6ULLEVK_CONFIG_H</code>  改为  <code>#ifndef __MX6ULL_LANJUT_CONFIG_H</code>  和  <code>#define __MX6ULL_LANJUT_CONFIG_H</code>  。</p>\n<p>更改 uboot 默认命令配置值：</p>\n<ul>\n<li>\n<p>findfdt（用于设置  <code>fdt_file</code>  变量，根据  <code>board_name</code>  来指定<strong>传递给内核的设备树</strong>文件名）</p>\n<pre><code>\t\t&quot;findfdt=&quot;\\\n\t\t\t&quot;if test $fdt_file = undefined; then &quot; \\\n\t\t\t\t&quot;if test $board_name = ULZ-EVK &amp;&amp; test $board_rev = 14X14; then &quot; \\\n\t\t\t\t\t&quot;setenv fdt_file imx6ulz-14x14-evk.dtb; fi; &quot; \\\n\t\t\t\t&quot;if test $board_name = EVK &amp;&amp; test $board_rev = 9X9; then &quot; \\\n\t\t\t\t\t&quot;setenv fdt_file imx6ull-9x9-evk.dtb; fi; &quot; \\\n\t\t\t\t&quot;if test $board_name = EVK &amp;&amp; test $board_rev = 14X14; then &quot; \\\n\t\t\t\t\t&quot;setenv fdt_file imx6ull-14x14-evk.dtb; fi; &quot; \\\n\t\t\t\t&quot;if test $board_name = LANJUT &amp;&amp; test $board_rev = 14X14; then &quot; \\\n\t\t\t\t\t&quot;setenv fdt_file imx6ull-14x14-lanjut.dtb; fi; &quot; \\\n\t\t\t\t&quot;if test $fdt_file = undefined; then &quot; \\\n\t\t\t\t\t&quot;echo WARNING: Could not determine dtb to use; &quot; \\\n\t\t\t\t&quot;fi; &quot; \\\n\t\t\t&quot;fi;\\0&quot; \\\n</code></pre>\n</li>\n<li>\n<p>findtee（用于设置  <code>tee_file</code>  变量，根据  <code>board_name</code>  来指定 uboot 设备树文件名）</p>\n<pre><code>\t\t&quot;findtee=&quot;\\\n\t\t\t&quot;if test $tee_file = undefined; then &quot; \\\n\t\t\t\t&quot;if test $board_name = ULZ-EVK &amp;&amp; test $board_rev = 14X14; then &quot; \\\n\t\t\t\t\t&quot;setenv tee_file uTee-6ulzevk; fi; &quot; \\\n\t\t\t\t&quot;if test $board_name = EVK &amp;&amp; test $board_rev = 9X9; then &quot; \\\n\t\t\t\t\t&quot;setenv tee_file uTee-6ullevk; fi; &quot; \\\n\t\t\t\t&quot;if test $board_name = EVK &amp;&amp; test $board_rev = 14X14; then &quot; \\\n\t\t\t\t\t&quot;setenv tee_file uTee-6ullevk; fi; &quot; \\\n\t\t\t\t&quot;if test $board_name = LANJUT &amp;&amp; test $board_rev = 14X14; then &quot; \\\n\t\t\t\t\t&quot;setenv tee_file uTee-6ull_lanjut; fi; &quot; \\\n\t\t\t\t&quot;if test $tee_file = undefined; then &quot; \\\n\t\t\t\t\t&quot;echo WARNING: Could not determine tee to use; &quot; \\\n\t\t\t\t&quot;fi; &quot; \\\n\t\t\t&quot;fi;\\0&quot; \\\n</code></pre>\n</li>\n</ul>\n<h2 id=\"其它文件\"><a class=\"anchor\" href=\"#其它文件\">#</a> 其它文件</h2>\n<p>1、 <code>Makefile</code>  文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>gedit arch/arm/dts/Makefile</pre></td></tr></table></figure><p><strong>修改：</strong></p>\n<figure class=\"highlight makefile\"><figcaption data-lang=\"makefile\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dtb-<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CONFIG_MX6ULL<span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\timx6ull-14x14-ddr3-val.dtb \\</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\timx6ull-14x14-ddr3-val-epdc.dtb \\</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\timx6ull-14x14-ddr3-val-emmc.dtb \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\timx6ull-14x14-ddr3-val-gpmi-weim.dtb \\</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\timx6ull-14x14-ddr3-val-tsc.dtb \\</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\timx6ull-14x14-evk.dtb \\</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\timx6ull-14x14-evk-emmc.dtb \\</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\timx6ull-14x14-evk-gpmi-weim.dtb \\</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\timx6ull-14x14-lanjut-emmc.dtb \\  <span class=\"token comment\"># 将设备树文件添加进编译项</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\timx6ull-9x9-evk.dtb \\</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\timx6ull-colibri.dtb \\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\timx6ull-phytec-segin-ff-rdk-emmc.dtb \\</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\timx6ull-dart-6ul.dtb \\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\timx6ull-somlabs-visionsom.dtb \\</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\timx6ulz-14x14-evk.dtb \\</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\timx6ulz-14x14-evk-emmc.dtb \\</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\timx6ulz-14x14-evk-gpmi-weim.dtb</pre></td></tr></table></figure><p>2、 <code>Kconfig</code>  文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>gedit arch/arm/mach-imx/mx6/Kconfig</pre></td></tr></table></figure><p><strong>修改：</strong></p>\n<p>在  <code>config TARGET_MX6ULL_14X14_EVK</code>  配置的下方添加：</p>\n<pre><code class=\"language-makefilema\">config TARGET_MX6ULL_14X14_LANJUT\n\tbool &quot;Support mx6ull_14x14_lanjut&quot;\n\tselect BOARD_LATE_INIT\n\tselect DM\n\tselect DM_THERMAL\n\tselect MX6ULL\n\timply CMD_DM\n</code></pre>\n<p>在  <code>source &quot;board/freescale/mx6ullevk/Kconfig&quot;</code>  配置的下方添加：</p>\n<figure class=\"highlight makefile\"><figcaption data-lang=\"makefile\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>source <span class=\"token string\">\"board/freescale/mx6ull_lanjut/Kconfig\"</span></pre></td></tr></table></figure><h1 id=\"定制外设\"><a class=\"anchor\" href=\"#定制外设\">#</a> 定制外设</h1>\n<p>1、 <code>mx6ull_14x14_lanjut_emmc_defconfig</code>  文件：</p>\n<p>由于开发板上不需要用到 74lv595 芯片，因此取消与其相关的配置：</p>\n<ul>\n<li>找到  <code>CONFIG_DM_74X164=y</code>  改为  <code># CONFIG_DM_74X164 is not set</code>  ，官网 EVK 开发板使用了一个 74LV594，这里没有使用所以屏蔽掉。</li>\n<li>找到  <code>CONFIG_SOFT_SPI=y</code>  改为  <code># CONFIG_SOFT_SPI is not set</code>  ，屏蔽掉软件模拟的 SPI，这是官方驱动 74LV594 用的，同样也是用不到。</li>\n</ul>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/virtual-network-setup/",
            "url": "https://arachnid.cc/virtual-network-setup/",
            "title": "vmware 下 ubuntu 双网卡设置",
            "date_published": "2023-02-25T09:28:19.345Z",
            "content_html": "<blockquote>\n<p>背景：主机电脑通过 WiFi 上网，网口用于跟开发板等设备有线连接；为此需要实现虚拟机内对系统可以进行外网访问网页或下载工具包等（避免切换主机操作），同时具备通过网线访问内网设备机器进行控制调试等操作。</p>\n<p>环境：VMware® Workstation 15 Pro</p>\n<p>平台：Ubuntu 18.04.6</p>\n</blockquote>\n<h1 id=\"step-1添加网卡\"><a class=\"anchor\" href=\"#step-1添加网卡\">#</a> step 1：添加网卡</h1>\n<p>在虚拟机窗口栏，依次点击  <code>编辑</code>  -&gt;  <code>虚拟网络编辑器</code>  ，可以看到原有默认的 VMnet 接口：</p>\n<p><img data-src=\"/virtual-network-setup/image-20230225172822709.png\" alt=\"image-20230225172822709\"></p>\n<p>它们分别对应主机 ip 地址。</p>\n<p>然后我们建立一个桥接模式的 VMnet 虚拟网络，并指定响应网卡（如出现灰屏无法设置，需要<strong>以管理员身份打开</strong> VMware，或在当前窗口点击  <code>更改设置</code>  来赋予权限），然后选择对应需要进行桥接的网卡（即网口网卡）：</p>\n<p><img data-src=\"/virtual-network-setup/image-20230225193931835.png\" alt=\"image-20230225193931835\"></p>\n<h1 id=\"setp-2配置网络设备器\"><a class=\"anchor\" href=\"#setp-2配置网络设备器\">#</a> setp 2：配置网络设备器</h1>\n<p>在 ubuntu 虚拟机右键点击  <code>设置</code>  -&gt;  <code>添加</code>  -&gt;  <code>网络适配器</code>  ，然后指定上面配置为桥接模式的  VMnet 虚拟网络：</p>\n<p><img data-src=\"/virtual-network-setup/image-20230225194908857.png\" alt=\"image-20230225194908857\"></p>\n<h2 id=\"拓展\"><a class=\"anchor\" href=\"#拓展\">#</a> 拓展</h2>\n<p>关于 NAT（网络地址转换模式）、Host-only（主机模式）及 bridged（桥接模式）：</p>\n<p><img data-src=\"/virtual-network-setup/Perbedaan-NAT-Bridge-Dan-Host-Only-Di-Vmware-Dan-Virtualbox-1170x731.jpg\" alt=\"Perbedaan NAT Bridge Dan Host Only\"></p>\n<ul>\n<li>\n<p>NAT 模式：使用 NAT 模式，就是让虚拟机借助 NAT （网络地址转换）功能，通过宿主机器所在的网络来访问外部网络，即：使用 NAT 模式可以实现在虚拟系统里访问互联网。</p>\n<p>优点：是从虚拟机访问外部网络的最简单方法；通常，它会自动设置网络地址转换到虚拟机上，不需要在宿主机器的网络信息上配置或通过访客操作系统上进行配置。</p>\n<p>缺点：就像路由器后面的专用网络一样，虚拟机是不可见的，无法从外部网络访问。</p>\n<p><img data-src=\"/virtual-network-setup/Virtual_network_switch_in_nat_mode.png\" alt=\"vmware-network-nat\"></p>\n</li>\n<li>\n<p>Host-only 模式：构建一个与外界断开连接的内部网络，只允许使用 host-only 方法的虚拟机才能通信，因此无法与外部网络或其他 PC 主机通信，只能相互通信。</p>\n<p>优点：与内部网络一样，其不需要存在物理网络接口，相当于使用 host-only 方法的虚拟机通过双绞线直连形成网络节点进行通讯；由于无法访问外部网络，因此对于安全性来讲，比其余两种相对要高。</p>\n<p>缺点：如其名，无法与主机外部的网络通信，同时外部网络设备也无法与其通讯。</p>\n<p><img data-src=\"/virtual-network-setup/Virtual_network_switch_in_host-only_mode.png\" alt=\"vmware-network-hostonly\"></p>\n</li>\n<li>\n<p>bridged 模式：在这种模式下，虚拟系统就像是局域网中的一台独立的主机，具有自己的 MAC 和 IP 地址；由于虚拟机和宿主机器分配了相同网段的 IP，因此宿主机器和虚拟机被识别为同一级别的物理主机。</p>\n<p>优点：虚拟机就像是一台独立的主机，拥有正常主机的网络功能，可以对外部网络进行访问，而外部网络也可以访问进来。</p>\n<p>缺点：由于外部网络可以访问，其安全性比其余两种相对要低；因与宿主机器平等的存在于网络中，需要进行分配网络地址、子网掩码、网关等操作。</p>\n<p><img data-src=\"/virtual-network-setup/Virtual_network_switch_in_bridged_mode.png\" alt=\"vmware-network-bridged\"></p>\n</li>\n</ul>\n<p>示例：</p>\n<p>一些 VMnet 虚拟机具有特定功能：VMnet0 专用于 bridged 模式，VMnet1 专用于 host-only 模式，而 VMnet8 专用于 NAT 模式；其他的 VMnet2 等，可供虚拟机使用自定义网络模式。如图分析各模式作用：</p>\n<p><img data-src=\"/virtual-network-setup/workstation-networking_thumb1.jpg\" alt=\"工作站网络\"></p>\n<ul>\n<li>\n<p>VM-1 可以与 host PC 通信，并连接到外部 LAN or internet，但不能与 NAT 和 host-only 网络通信。</p>\n</li>\n<li>\n<p>VM-2 和 VM-3 可以相互通信，也可以与 NAT 网络中的其他 VM 通信，也可以与 host PC 通信。</p>\n</li>\n<li>\n<p>VM-5 和 VM-4 可以相互通信，但不能与主机操作系统和 host-only 网络中的其他 VM 通信。</p>\n</li>\n<li>\n<p>VM-6 和 VM-7 无法相互通信。</p>\n</li>\n</ul>\n<p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8yMjc1MDUvd2hhdC1pcy10aGUtZGlmZmVyZW5jZS1iZXR3ZWVuLW5hdC1icmlkZ2VkLWhvc3Qtb25seS1uZXR3b3JraW5n\">What is the difference between NAT / Bridged / Host-Only networking?</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWJ5dGVzLndvcmRwcmVzcy5jb20vMjAxMi8xMS8xNi92bXdhcmUtd29ya3N0YXRpb24tbmV0d29ya2luZy1iYXNpY3Mv\">VMware Workstation Networking Basics</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZ3Vzc2FzLndvcmRwcmVzcy5jb20vMjAxNS8xMC8yOC92bXdhcmUtbmV0d29ya2luZy1jb25jZXB0LWJyaWRnZWQtbmF0LWhvc3Qtb25seS1sYW4tc2VnbWVudC8=\">VMWare Networking Concept [Bridged, NAT, Host Only, LAN Segment]</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9uaXRvcnRla25vbG9naS5jb20vcGVyYmVkYWFuLW5hdC1icmlkZ2UtZGFuLWhvc3Qtb25seS8=\">Perbedaan NAT Bridge Dan Host Only Di VMware Dan VirtualBox</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmxpYnZpcnQub3JnL1ZpcnR1YWxOZXR3b3JraW5nLmh0bWw=\">Virtual Networking</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudW5hbWUuaW4vNjA=\">Vmware Host-Only, NAT, Bridge 차이</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWFybXVpZG1jY2FydGh5LndvcmRwcmVzcy5jb20vMjAxMS8wMi8xNS9oZWxsby13b3JsZC8=\">Intro to Virtual Machine Networking</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yeWFuaXNhZ29vZGd1eS5ibG9nc3BvdC5jb20vMjAxOS8wNi92bXdhcmVuZXR3b3JrLXR5cGVicmlkZ2VkaG9zdC1vbmx5LW5hdC5odG1s\">VMware 虛擬機器上網路連線 (Network type) 的三種模式</span></p>\n<h1 id=\"setp-3网络信息配置\"><a class=\"anchor\" href=\"#setp-3网络信息配置\">#</a> setp 3：网络信息配置</h1>\n<p>从上一步可以知道我们目前有两个网络适配器，分别是 NAT 和 桥接模式，然后针对这几个模式的作用也在上面作了介绍了；因此在这里，实际只需要在虚拟机系统中配置桥接模式对应的网卡网络信息就好了；至于 NAT 模式对应的网卡网络信息将由虚拟机借助 NAT （网络地址转换）功能实现自动配置即可实现访问外网功能。</p>\n<ol>\n<li>\n<p>查看所有网卡信息：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ifconfig</span> <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>ens33: <span class=\"token assign-left variable\">flags</span><span class=\"token operator\">=</span><span class=\"token number\">416</span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class=\"token operator\">></span>  mtu <span class=\"token number\">1500</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>        inet <span class=\"token number\">192.168</span>.154.133  netmask <span class=\"token number\">255.255</span>.255.0  broadcast <span class=\"token number\">192.168</span>.154.255</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>        inet6 fe80::b52c:a0e6:1419:116b  prefixlen <span class=\"token number\">64</span>  scopeid 0x2<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>link<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre>        ether 00:0c:29:f0:76:35  txqueuelen <span class=\"token number\">1000</span>  <span class=\"token punctuation\">(</span>以太网<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>        RX packets <span class=\"token number\">102259</span>  bytes <span class=\"token number\">150687397</span> <span class=\"token punctuation\">(</span><span class=\"token number\">150.6</span> MB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>        RX errors <span class=\"token number\">0</span>  dropped <span class=\"token number\">0</span>  overruns <span class=\"token number\">0</span>  frame <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>        TX packets <span class=\"token number\">13950</span>  bytes <span class=\"token number\">938511</span> <span class=\"token punctuation\">(</span><span class=\"token number\">938.5</span> KB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre>        TX errors <span class=\"token number\">0</span>  dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span>  carrier <span class=\"token number\">0</span>  collisions <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre>ens36: <span class=\"token assign-left variable\">flags</span><span class=\"token operator\">=</span><span class=\"token number\">416</span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class=\"token operator\">></span>  mtu <span class=\"token number\">1500</span></pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre>        inet <span class=\"token number\">192.168</span>.17.218  netmask <span class=\"token number\">255.255</span>.255.0  broadcast <span class=\"token number\">192.168</span>.17.255</pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre>        inet6 240e:47c:680:2899:56c0:dff:d5fe:b1aa  prefixlen <span class=\"token number\">64</span>  scopeid 0x<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>global<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre>        inet6 240e:47c:680:2899:18e7:3cfa:5fad:bbe  prefixlen <span class=\"token number\">64</span>  scopeid 0x<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>global<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre>        inet6 fe80::a25b:a66f:67e7:3e67  prefixlen <span class=\"token number\">64</span>  scopeid 0x2<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>link<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td data-command></td><td><pre>        ether 00:0c:29:f0:76:3f  txqueuelen <span class=\"token number\">1000</span>  <span class=\"token punctuation\">(</span>以太网<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td data-command></td><td><pre>        RX packets <span class=\"token number\">426</span>  bytes <span class=\"token number\">474569</span> <span class=\"token punctuation\">(</span><span class=\"token number\">474.5</span> KB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td data-command></td><td><pre>        RX errors <span class=\"token number\">0</span>  dropped <span class=\"token number\">0</span>  overruns <span class=\"token number\">0</span>  frame <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"19\"></td><td data-command></td><td><pre>        TX packets <span class=\"token number\">403</span>  bytes <span class=\"token number\">44762</span> <span class=\"token punctuation\">(</span><span class=\"token number\">44.7</span> KB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td data-command></td><td><pre>        TX errors <span class=\"token number\">0</span>  dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span>  carrier <span class=\"token number\">0</span>  collisions <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td data-command></td><td><pre>lo: <span class=\"token assign-left variable\">flags</span><span class=\"token operator\">=</span><span class=\"token number\">7</span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class=\"token operator\">></span>  mtu <span class=\"token number\">65536</span></pre></td></tr><tr><td data-num=\"23\"></td><td data-command></td><td><pre>        inet <span class=\"token number\">127.0</span>.0.1  netmask <span class=\"token number\">255.0</span>.0.0</pre></td></tr><tr><td data-num=\"24\"></td><td data-command></td><td><pre>        inet6 ::1  prefixlen <span class=\"token number\">128</span>  scopeid 0x1<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>host<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td data-command></td><td><pre>        loop  txqueuelen <span class=\"token number\">1000</span>  <span class=\"token punctuation\">(</span>本地环回<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td data-command></td><td><pre>        RX packets <span class=\"token number\">308</span>  bytes <span class=\"token number\">26853</span> <span class=\"token punctuation\">(</span><span class=\"token number\">26.8</span> KB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td data-command></td><td><pre>        RX errors <span class=\"token number\">0</span>  dropped <span class=\"token number\">0</span>  overruns <span class=\"token number\">0</span>  frame <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td data-command></td><td><pre>        TX packets <span class=\"token number\">308</span>  bytes <span class=\"token number\">26853</span> <span class=\"token punctuation\">(</span><span class=\"token number\">26.8</span> KB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td data-command></td><td><pre>        TX errors <span class=\"token number\">0</span>  dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span>  carrier <span class=\"token number\">0</span>  collisions <span class=\"token number\">0</span></pre></td></tr></table></figure></li>\n<li>\n<p>启用网卡（如已启用则跳过该步骤），其中  <code>ens36</code>  是设置 bridged 模式的网卡。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">ifconfig</span> ens36 up</pre></td></tr></table></figure></li>\n<li>\n<p>修改网络信息配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">cp</span> /etc/netplan/01-network-manager-all.yaml /etc/netplan/01-network-manager-all.yaml.back <span class=\"token comment\"># 备份</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">vim</span> /etc/netplan/01-network-manager-all.yaml</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre><span class=\"token comment\"># Let NetworkManager manage all devices on this system</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>network:</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre>  ethernets:</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre>    ens33:</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>      dhcp4: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre>      dhcp4-overrides:</pre></td></tr><tr><td data-num=\"9\"></td><td data-command></td><td><pre>        route-metric: <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>      <span class=\"token comment\"># addresses: [192.168.1.110/24]</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre>      <span class=\"token comment\"># gateway4: 192.168.1.1</span></pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre>      <span class=\"token comment\"># nameservers:</span></pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre>       <span class=\"token comment\"># addresses: [192.168.1.1]</span></pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre>    ens36:</pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre>      dhcp4: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td data-command></td><td><pre>  version: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"17\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td data-command></td><td><pre>  bridges:</pre></td></tr><tr><td data-num=\"19\"></td><td data-command></td><td><pre>    br0:</pre></td></tr><tr><td data-num=\"20\"></td><td data-command></td><td><pre>     interfaces: <span class=\"token punctuation\">[</span>ens36<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td data-command></td><td><pre>     dhcp4: no</pre></td></tr><tr><td data-num=\"22\"></td><td data-command></td><td><pre>     addresses:</pre></td></tr><tr><td data-num=\"23\"></td><td data-command></td><td><pre>      - <span class=\"token number\">192.168</span>.1.110/24</pre></td></tr><tr><td data-num=\"24\"></td><td data-command></td><td><pre>     nameservers:</pre></td></tr><tr><td data-num=\"25\"></td><td data-command></td><td><pre>       addresses: <span class=\"token punctuation\">[</span><span class=\"token number\">8.8</span>.8.8<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td data-command></td><td><pre>     routes:</pre></td></tr><tr><td data-num=\"27\"></td><td data-command></td><td><pre>      - to: <span class=\"token number\">0.0</span>.0.0/0</pre></td></tr><tr><td data-num=\"28\"></td><td data-command></td><td><pre>        via: <span class=\"token number\">192.168</span>.1.1</pre></td></tr><tr><td data-num=\"29\"></td><td data-command></td><td><pre>        metric: <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"30\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td data-command></td><td><pre><span class=\"token comment\">#  renderer: NetworkManager</span></pre></td></tr><tr><td data-num=\"32\"></td><td data-command></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td data-command></td><td><pre>netplan apply</pre></td></tr><tr><td data-num=\"34\"></td><td data-command></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure></li>\n<li>\n<p>重启后查看验证网路</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token parameter variable\">-n</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>内核 IP 路由表</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>目标            网关            子网掩码        标志  跃点   引用  使用 接口</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">192.168</span>.154.2   <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">100</span>    <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">192.168</span>.1.1     <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">1000</span>   <span class=\"token number\">0</span>        <span class=\"token number\">0</span> br0</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.1.0     <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.0   U     <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> br0</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.154.0   <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.0   U     <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"8\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.154.2   <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.255 UH    <span class=\"token number\">100</span>    <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"[root@localhost] $\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ping</span> baidu.com</pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"12\"></td><td data-command=\"[root@localhost] $\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">ping</span> <span class=\"token function\">host</span> <span class=\"token function\">ip</span></pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"关于双网卡无法上网问题\"><a class=\"anchor\" href=\"#关于双网卡无法上网问题\">#</a> 关于双网卡无法上网问题</h1>\n<p>当在虚拟机网络中设置完 VMnet0 桥接的 IP 地址等信息，打开网络后，发现网络不通。</p>\n<p>但如果关闭 VMnet0，只保留 VMnet8，网络又是可行的，由此考虑到可能是网卡优先级的配置问题。</p>\n<p>通过上面可以发现  <code>br0</code>  的跃点比  <code>ens33</code>  的 metric 要高，而 metric 越低，其优先级越高，因此按上面操作来一般没问题的；如果这两个网卡的 metric 值反过来，那么会造成无法上网的问题，因为本身我们的有线网口是没有联网的，但优先级又比联网的网卡优先级高，所以会出现 ping 不通外网的情况。</p>\n<p>假设需要临时调整 ip /gateway/metric 等，可以使用  <code>route</code>  命令，而避免更改网络配置表文件，关于  <code>route</code>  命令使用可看 <a href=\"http://arachnid.cc/linux-routing-table\">Linux 路由表说明</a> 。</p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/uboot-starting/",
            "url": "https://arachnid.cc/uboot-starting/",
            "title": "uboot 引导启动分析",
            "date_published": "2023-02-22T13:19:51.653Z",
            "content_html": "<h1 id=\"uboot-命令\"><a class=\"anchor\" href=\"#uboot-命令\">#</a> uboot 命令</h1>\n<h2 id=\"命令支持\"><a class=\"anchor\" href=\"#命令支持\">#</a> 命令支持</h2>\n<p>当不清楚 uboot 支持什么命令时， 可输入  <code>help</code>  或  <code>?</code>  可查看 uboot 支持的命令列表；当需要具体使用哪个命令时，可使用  <code>help [命令]</code>  或  <code>? [命令]</code>  的方式查看具体命令的使用说明，eg： <code>help printenv</code>  。</p>\n<h2 id=\"常用命令行命令\"><a class=\"anchor\" href=\"#常用命令行命令\">#</a> 常用命令行命令</h2>\n<p><strong>A、环境变量操作</strong></p>\n<ol>\n<li>\n<p>printenv</p>\n<p>功能：打印环境变量</p>\n<p>用法： <code>printenv &lt;name&gt;</code>  ，其中 name 为相应的环境变量名，不填则打印所有环境变量配置。</p>\n</li>\n<li>\n<p>setenv</p>\n<p>功能：设置环境变量</p>\n<p>用法： <code>setenv &lt;key&gt; &lt;value&gt;</code>  ，其中 key 是变量名，value 是变量值。如果 value 为空，则表示删除对应的环境变量。</p>\n</li>\n<li>\n<p>saveenv</p>\n<p>功能：保存环境变量修改，使用 setenv 设置环境变量后不会掉电保存，需要保存后才不会丢失。</p>\n<p>用法： <code>saveenv</code>  。</p>\n</li>\n<li>\n<p>run</p>\n<p>功能：执行指定的环境变量里的语句。</p>\n<p>用法： <code>run &lt;var&gt;</code>  ，其中 key 是指定的环境变量。</p>\n</li>\n</ol>\n<p><strong>B、mmc 存储介质操作</strong></p>\n<ol>\n<li>\n<p>mmc</p>\n<p>功能：对 mmc 存储介质进行操作，包括 EMMC 和 SD 卡</p>\n<p>用法：</p>\n<ul>\n<li><code>mmc list</code>  ，用于查看板子上 mmc 设备。</li>\n<li><code>mmc dev &lt;dev&gt; &lt;part&gt;</code>  ，用于切换当前 mmc 设备，其中 dev 用来设置要切换的 mmc 设备号，part 是分区号（可以不写，默认为分区 0）。</li>\n<li><code>mmc info</code>  ，查看当前 mmc 设备信息。</li>\n<li><code>mmc part</code>  ，查看当前 mmc 设备分区。</li>\n<li><code>mmc read / write &lt;addr&gt; &lt;blk#&gt; &lt;cnt&gt;</code>  ，读取 or 写入当前 mmc 设备数据，其中 addr 是数据读取 / 写入到 DRAM 中的地址， blk# 是要读取 / 写入的块起始地址 (十六进制)，一个块是 512 字节，这里的块和扇区是一个意思，在 mmc 设备中我们通常说扇区， cnt 是要读取 / 写入的块数量 (十六进制)。</li>\n<li><code>mmc erase &lt;blk#&gt; &lt;cnt&gt;</code>  ，擦除当前 mmc 设备数据，其中 blk# 为要擦除的起始块， cnt 是要擦除的数量。</li>\n</ul>\n</li>\n</ol>\n<p><strong>C、网络操作</strong></p>\n<ol>\n<li>\n<p>ping</p>\n<p>功能：发送 ICMP_ECHO 请求到网络主机</p>\n<p>用法： <code>ping &lt;hostaddr&gt;</code>  ，其中 hostaddr 是目标发送请求主机 IP。</p>\n</li>\n<li>\n<p>dhcp</p>\n<p>功能：获取 ip 地址及通过 tftp 下载到内存。</p>\n<p>用法：</p>\n<ul>\n<li><code>dhcp</code>  ，单纯用于自动获取 ip 地址。</li>\n<li><code>dhcp &lt;loadaddr&gt; &lt;[hostIPaddr:]filename&gt;</code>  ，其中 loadaddr 是加载内存地址，hostIPaddr 是获取链接的主机 IP，filename 是要下载的文件名。</li>\n</ul>\n</li>\n<li>\n<p>nfs</p>\n<p>功能：通过 nfs (Network File System) 下载到内存。</p>\n<p>用法： <code>nfs &lt;loadaddr&gt; &lt;[hostIPaddr:]filename&gt;</code>  ，其中 loadaddr 是加载内存地址，hostIPaddr 是获取链接的主机 ip，filename 是要下载的文件名。</p>\n</li>\n<li>\n<p>tftpboot</p>\n<p>功能：通过 tftp 下载到内存</p>\n<p>用法： <code>tftpboot &lt;loadaddr&gt; &lt;[hostIPaddr:]filename&gt;</code>  ，其中 loadaddr 是加载内存地址，hostIPaddr 是获取链接的主机 ip，filename 是要下载的文件名。</p>\n</li>\n</ol>\n<p><strong>D、文件系统操作</strong></p>\n<ol>\n<li>\n<p>fatinfo</p>\n<p>功能：查询指定 mmc 设置指定分区的文件系统信息。</p>\n<p>用法： <code>fatinfo &lt;interface&gt; &lt;dev&gt;:&lt;part&gt;</code>  ，其中 interface 表示接口（mmc 等），dev 是查询的设备号， part 是要查询的分区。</p>\n</li>\n<li>\n<p>fatls / ext4ls</p>\n<p>功能：查询 FAT /ext4 格式设备的目录和文件信息。</p>\n<p>用法： <code>fatls / ext4ls &lt;interface&gt; &lt;dev&gt;:&lt;part&gt; &lt;directory&gt;</code>  ，其中 interface 表示接口（mmc 等），dev 是查询的设备号， part 是要查询的分区，directory 是要查询的目录（默认为根目录  <code>/</code>  ）。</p>\n</li>\n<li>\n<p>fatload / ext4load</p>\n<p>功能：查询 FAT /ext4 格式设备的目录和文件信息。</p>\n<p>用法： <code>fatload / ext4load &lt;interface&gt; &lt;dev&gt;:&lt;part&gt; &lt;addr&gt; &lt;filename&gt; &lt;bytes&gt; &lt;pos&gt;</code>  ，其中 interface 表示接口（mmc 等），dev 是查询的设备号， part 是要查询的分区，addr 是保存在 DRAM 中的起始地址， filename 是要读取的文件名字，bytes 表示读取多少字节的数据（0 或者省略表示读取整个文件），pos 是要读的文件相对于文件首地址的偏移（0 或者省略表示从文件首地址开始读取）。</p>\n</li>\n</ol>\n<p><strong>E、启动内核</strong></p>\n<ol>\n<li>\n<p>bootz</p>\n<p>功能：从指定内存位置加载启动 <strong>zImage 镜像文件</strong> 。</p>\n<p>用法： <code>bootm &lt;zImageaddr&gt; - &lt;fdtaddr&gt;</code>  ，其中，kerneladdr 是 zImage 镜像地址，fdtaddr 是设备树文件地址。</p>\n</li>\n<li>\n<p>bootm</p>\n<p>功能：从指定内存位置加载启动 <strong>uImage 镜像文件</strong> 。</p>\n<p>用法： <code>bootm &lt;uImageaddr&gt; &lt;- arg...&gt;</code>  ，其中，kerneladdr 是 uImage 镜像地址，arg 是为可选子命令，具体可看  <code>? bootm</code>  。</p>\n</li>\n<li>\n<p>boot</p>\n<p>功能：通过读取环境变量  <code>bootcmd</code>  来启动 linux 系统。</p>\n<p>用法： <code>boot</code>  。</p>\n</li>\n</ol>\n<h1 id=\"环境变量\"><a class=\"anchor\" href=\"#环境变量\">#</a> 环境变量</h1>\n<p>需要注意的是，环境变量的名字并不是统一的，除部分重要变量名外，主要是由芯片厂商或开发者自行协定的。</p>\n<h2 id=\"默认环境变量\"><a class=\"anchor\" href=\"#默认环境变量\">#</a> 默认环境变量</h2>\n<p>默认环境变量可以在  <code>include/configs/</code>  文件夹中找到对应的芯片配置头文件及在  <code>include/env_default.h</code>  文件中查看定义。一般其默认环境变量参数整体被定义在  <code>CONFIG_EXTRA_ENV_SETTINGS</code>  宏参数中，在 README 文件中可找到说明：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"><span>README</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">-</span> Default Environment:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\tCONFIG_EXTRA_ENV_SETTINGS</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token code keyword\">\t\tDefine this to contain any number of null terminated</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tstrings (variable = value pairs) that will be part of</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tthe default environment compiled into the boot image.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token code keyword\">\t\tFor example, place something like this in your</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tboard's config file:</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token code keyword\">\t\t#define CONFIG_EXTRA_ENV_SETTINGS \\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\"myvar1=value1\\0\" \\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\"myvar2=value2\\0\"</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token code keyword\">\t\tWarning: This method is based on knowledge about the</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tinternal format how the environment is stored by the</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tU-Boot code. This is NOT an official, exported</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tinterface! Although it is unlikely that this format</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\twill change soon, there is no guarantee either.</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tYou better know what you are doing here.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token code keyword\">\t\tNote: overly (ab)use of the default environment is</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tdiscouraged. Make sure to check other ways to preset</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tthe environment like the \"source\" command or the</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tboot command first.</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token code keyword\">\t\tCONFIG_DELAY_ENVIRONMENT</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token code keyword\">\t\tNormally the environment is loaded when the board is</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tinitialised so that it is available to U-Boot. This inhibits</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tthat so that the environment is not available until</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\texplicitly loaded later by U-Boot code. With CONFIG_OF_CONTROL</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tthis is instead controlled by the value of</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t/config/load-environment.</pre></td></tr></table></figure><h2 id=\"常用环境变量\"><a class=\"anchor\" href=\"#常用环境变量\">#</a> 常用环境变量</h2>\n<p>在  <code>include/env_default.h</code>  文件定义的环境变量，可通过读取宏来配置相应值，也可从  <code>CONFIG_EXTRA_ENV_SETTINGS</code>  宏参数重新定义，其中有几个变量是比较重要，这里结合 NXP 厂商的定义进行如下参考分析：</p>\n<p><strong>1、console 变量（固有）</strong></p>\n<p>功能：表示控制台输出设备。</p>\n<p><strong>2、baudrate 变量（固有）</strong></p>\n<p>功能：指定 linux 系统启动过程中串口控制台打印的波特率。</p>\n<p><strong>3、bootdelay 变量（固有）</strong></p>\n<p>功能：设置 uboot 启动时等待用户输入的延时，单位是秒。</p>\n<p><strong>4、fdt_addr 变量（私人）</strong></p>\n<p>功能：设备树加载启动的地址。</p>\n<p><strong>5、fdt_file 变量（私人）</strong></p>\n<p>功能：设备树加载显示的名称，如果 uboot 中配置的名称对应不上获取的设备树文件，将显示 undefined。</p>\n<p><strong>6、image 变量（私人）</strong></p>\n<p>功能：内核加载启动读取的文件名。</p>\n<p><strong>7、loadaddr 变量（固有）</strong></p>\n<p>功能：内核加载启动的地址。</p>\n<p><strong>8、ipaddr/serverip/gatewayip/netmask 变量（固有）</strong></p>\n<p>功能：用于设置网络信息，分别对应开发板 ip、服务器 ip、网关、子网掩码；设置完成后可用 ping 命令测试网络连通性。</p>\n<p><strong>9、bootcmd 变量（固有）</strong></p>\n<p>功能： <code>bootcmd</code>  变量是用来存储启动命令的环境变量，它定义了 uboot 启动 linux 系统的具体步骤。当 uboot 倒计时结束以后就会执行  <code>bootcmd</code>  中的命令。这些命令一般都是用来启动 linux 内核的，比如读取 EMMC 或者 NAND Flash 中的 linux 内核镜像文件和设备树文件到 DRAM 中，然后启动 linux 内核。</p>\n<p>也可以在 uboot 启动以后进入命令行设置  <code>bootcmd</code>  环境变量的值。如果 EMMC 或者 NAND 中没有保存  <code>bootcmd</code>  的值，那么 uboot 就会使用默认的值。</p>\n<p>应用： <code>bootcmd</code>  变量的内容通常是一系列 uboot 命令和参数的组合，例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">bootcmd</span><span class=\"token operator\">=</span>run load_kernel<span class=\"token punctuation\">;</span> run load_dtb<span class=\"token punctuation\">;</span> bootz <span class=\"token variable\">$&#123;kernel_addr_r&#125;</span> - <span class=\"token variable\">$&#123;fdt_addr_r&#125;</span></pre></td></tr></table></figure><p>上述  <code>bootcmd</code>  变量定义了两个命令： <code>load_kernel</code>  和  <code>load_dtb</code> ，并最后执行了  <code>bootz</code>  命令来启动 linux 内核。这里的  <code>run</code>  命令表示执行一个之前定义好的环境变量，例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">load_kernel</span><span class=\"token operator\">=</span>mmc dev <span class=\"token variable\">$&#123;mmc_dev&#125;</span><span class=\"token punctuation\">;</span> fatload mmc <span class=\"token variable\">$&#123;mmc_dev&#125;</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$&#123;mmc_part&#125;</span> <span class=\"token variable\">$&#123;kernel_addr&#125;</span> zImage</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">load_dtb</span><span class=\"token operator\">=</span>fatload mmc <span class=\"token variable\">$&#123;mmc_dev&#125;</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$&#123;mmc_part&#125;</span> <span class=\"token variable\">$&#123;fdt_addr&#125;</span> devicetree.dtb</pre></td></tr></table></figure><p>在上述命令中， <code>load_kernel</code>  和  <code>load_dtb</code>  分别使用  <code>fatload</code>  命令从 mmc 设备  <code>$&#123;mmc_dev&#125;</code>  的  <code>$&#123;mmc_part&#125;</code>  分区（ <code>mmc $&#123;mmc_dev&#125;:$&#123;mmc_part&#125;</code> ）中加载内核和设备树； <code>$&#123;kernel_addr&#125;</code>  和  <code>$&#123;fdt_addr&#125;</code>  是在 uboot 中预定义的环境变量，分别表示内核和设备树在内存中的地址。</p>\n<p>在实际应用中， <code>bootcmd</code>  变量的内容需要根据硬件平台和具体应用场景来设置，以确保系统能够正确启动。可以使用  <code>printenv bootcmd</code>  命令来查看当前的  <code>bootcmd</code>  命令，使用  <code>setenv bootcmd &lt;cmd&gt;</code>  命令来手动设置  <code>bootcmd</code>  变量，例如，把上述命令定义并保存到  <code>bootcmd</code>  变量中：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setenv bootcmd <span class=\"token string\">'run load_kernel; run load_dtb; run load_rootfs; bootm'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>saveenv</pre></td></tr></table></figure><p><strong>10、bootargs 变量（固有）</strong></p>\n<p>功能： <code>bootargs</code>  变量是用来存储内核启动参数的环境变量，它在启动 linux 内核时会被传递给内核。bootargs 变量可以在 uboot 命令行中手动设置，也可以通过脚本自动设置。下面是一些常见的  <code>bootargs</code>  参数：</p>\n<ul>\n<li>\n<p>console：指定内核输出信息的终端设备，可以是串口、LCD 显示屏等。</p>\n</li>\n<li>\n<p>root：指定根文件系统所在的设备和分区。</p>\n</li>\n<li>\n<p>rootfstype：指定根文件系统的文件系统类型，例如  <code>ext4</code> 、 <code>jffs2</code> 、 <code>nfs</code>  等。</p>\n</li>\n<li>\n<p>ip：指定 IP 地址和网络参数，用于网络启动。</p>\n</li>\n<li>\n<p>mem：指定系统可用内存的大小，用于系统启动时内存的自适应分配。</p>\n</li>\n<li>\n<p>quiet：设置内核启动时不显示冗长的信息。</p>\n</li>\n<li>\n<p>debug：开启内核调试模式，用于调试内核代码。</p>\n</li>\n</ul>\n<p>应用：在设置  <code>bootargs</code>  变量时，需要根据硬件平台和具体应用场景来选择合适的参数，并确保参数的正确性。例如， <code>console</code>  参数需要根据硬件平台的串口地址和波特率来设置， <code>root</code>  参数需要根据具体的文件系统类型和分区来设置。例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setenv bootargs <span class=\"token assign-left variable\">console</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;console&#125;</span>,<span class=\"token variable\">$&#123;baudrate&#125;</span> <span class=\"token assign-left variable\">root</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;mmc_root&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>saveenv</pre></td></tr></table></figure><h2 id=\"环境变量设置\"><a class=\"anchor\" href=\"#环境变量设置\">#</a> 环境变量设置</h2>\n<p>环境变量的设置有两种方法，一种方法是通过修改静态配置，即通过修改 uboot 的文件中相关环境变量的配置。不过此类方法在实际中显然非常不实际，每次需要修改一次环境变量都需要重新编译整个 uboot。</p>\n<p>另一种方法是利用 uboot 提供的  <code>setenv</code>  动态修改环境变量的设置，当设置完成后再通过  <code>saveenv</code>  把相应的环境变量设置保存到 Flash 等非易失性存储设备上。</p>\n<h1 id=\"启动方式\"><a class=\"anchor\" href=\"#启动方式\">#</a> 启动方式</h1>\n<p>uboot 有两种启动 linux 内核和 rootfs 的方法，一种是直接从 flash (nand 或 emmc) 启动，一种是从网络启动。这里面用到了两个非常重要的环境变量  <code>bootcmd</code>  和  <code>bootargs</code>  。</p>\n<h2 id=\"从-emmc-启动\"><a class=\"anchor\" href=\"#从-emmc-启动\">#</a> 从 EMMC 启动</h2>\n<p>从 EMMC 启动也就是将编译出来的 linux 镜像文件 zImage 和设备树文件保存在 EMMC 中， uboot 从 EMMC 中读取这两个文件并启动。</p>\n<p>以 NXP 的 imx-6ull 为例：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setenv bootargs <span class=\"token string\">'console=ttymxc0,115200 root=/dev/mmcblk1p2 rootwait rw'</span> <span class=\"token comment\"># 设置控制台输出设备为 ttymxc0、波特率为 115200；指明根文件系统存放在 mmcblk1 设备的分区 2 中，EMMC 版本的核心板启动 linux 以后会存在 /dev/mmcblk0、/dev/mmcblk1、 /dev/mmcblk0p1、/dev/mmcblk0p2、 /dev/mmcblk1p1 和 /dev/mmcblk1p2 这样的文件，其中 /dev/mmcblkx (x=0~ n) 表示 mmc 设备，而 /dev/mmcblkxpy (x=0~ n,y=1~ n) 表示 mmc 设备 x 的分区 y；rootwait 表示等待 mmc 设备初始化完成以后再挂载，否则的话 mmc 设备还没初始化完成就挂载根文件系统会出错的，rw 表示根文件系统是可以读写的，不加 rw 的话可能无法在根文件系统中进行写操作，只能进行读操作。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mmc dev <span class=\"token number\">1</span> <span class=\"token comment\"># 切换到 EMMC</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>fatload mmc <span class=\"token number\">1</span>:1 0x80800000 zImage <span class=\"token comment\"># 读取 zImage 到 0x80800000 处</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fatload mmc <span class=\"token number\">1</span>:1 0x83000000 imx6ull-14x14-evk.dtb <span class=\"token comment\"># 读取设备树到 0x83000000 处</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>bootz 0x80800000 - 0x83000000 <span class=\"token comment\"># 启动内核</span></pre></td></tr></table></figure><h2 id=\"从网络启动\"><a class=\"anchor\" href=\"#从网络启动\">#</a> 从网络启动</h2>\n<p>从网络启动最主要的是用来调试，试想，假设你更改了部分 linux 驱动，如果是使用 EMMC 进行烧录下载，那么就得每次都对其镜像烧写到 EMMC 中，这样就太麻烦，因此我们可以使用网络对其进行烧录替换镜像。其前提条件是必须配置好网络设备及设备树，能正常连通，否者一切都是扯淡。</p>\n<p>以 NXP 的 imx-6ull 为例：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setenv ipaddr <span class=\"token number\">192.168</span>.1.xxx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>setenv gatewayip <span class=\"token number\">192.168</span>.1.1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>setenv netmask <span class=\"token number\">255.255</span>.255.0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>setenv serverip <span class=\"token number\">192.168</span>.1.xxx</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>setenv bootargs <span class=\"token string\">'console=ttymxc0,115200 root=/dev/mmcblk1p2 rootwait rw'</span> <span class=\"token comment\"># 解释同上</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>tftpboot <span class=\"token number\">80800000</span> zImage</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>tftp <span class=\"token number\">83000000</span> imx6ull-14x14-evk.dtb</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>bootz <span class=\"token number\">80800000</span> - <span class=\"token number\">83000000</span></pre></td></tr></table></figure>",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/linux-routing-table/",
            "url": "https://arachnid.cc/linux-routing-table/",
            "title": "Linux 路由表说明",
            "date_published": "2023-02-05T06:32:47.036Z",
            "content_html": "<h1 id=\"route-命令\"><a class=\"anchor\" href=\"#route-命令\">#</a> route 命令</h1>\n<p>选项：</p>\n<ul>\n<li>\n<p><code>-v</code>  ：显示详细信息。</p>\n</li>\n<li>\n<p><code>-n</code>  ：不执行 DNS 反向查找（即不解析名称），直接显示数字形式的 IP 地址。</p>\n</li>\n<li>\n<p><code>-e</code>  ：netstat 格式显示路由表。</p>\n</li>\n<li>\n<p><code>-C</code>  ：打印 Linux 内核的路由缓存。</p>\n</li>\n<li>\n<p><code>add</code>  ：增加路由记录 /  <code>del</code>  ：删除路由记录</p>\n<ul>\n<li><code>-net</code>  ：目的地址是一个网络。</li>\n<li><code>-host</code>  ：目的地址是一台主机。</li>\n<li><code>netmask</code>  ：目的地址的网络掩码。</li>\n<li><code>gw</code>  ：路由数据包通过的网关。</li>\n<li><code>metric</code>  ：设置路由跃点。</li>\n</ul>\n</li>\n</ul>\n<p>eg：</p>\n<p>1、添加主机路由</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>添加主机路由</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">10.0</span>.0.10 netmask <span class=\"token number\">255.255</span>.255.255 gw <span class=\"token number\">10.139</span>.128.1 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token parameter variable\">-n</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token number\">10.0</span>.0.10       <span class=\"token number\">10.139</span>.128.1    <span class=\"token number\">255.255</span>.255.255 UGH   <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> eth0</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>2、添加网络路由</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>添加网络路由</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">10.0</span>.0.0 netmask <span class=\"token number\">255.255</span>.255.0 gw <span class=\"token number\">10.139</span>.128.1 dev eth0</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token parameter variable\">-n</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token number\">10.0</span>.0.0        <span class=\"token number\">10.139</span>.128.1    <span class=\"token number\">255.255</span>.255.0   UG    <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> eth0</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>3、添加设置默认网关跃点为 80</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>添加设置默认网关</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token function\">add</span> default gw <span class=\"token number\">192.168</span>.1.1 metric <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token parameter variable\">-n</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre><span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">192.168</span>.1.1     <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> eth0</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>4、删除路由</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>删除路由</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route del default gw <span class=\"token number\">192.168</span>.1.1 metric <span class=\"token number\">80</span></pre></td></tr></table></figure><h1 id=\"字段分析\"><a class=\"anchor\" href=\"#字段分析\">#</a> 字段分析</h1>\n<p>使用  <code>route</code>  or  <code>route -n</code>  命令查看内核路由表：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令行提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route</pre></td></tr><tr><td data-num=\"2\"></td><td data-command></td><td><pre>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</pre></td></tr><tr><td data-num=\"3\"></td><td data-command></td><td><pre>default         _gateway        <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">100</span>    <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"4\"></td><td data-command></td><td><pre>default         _gateway        <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">1000</span>   <span class=\"token number\">0</span>        <span class=\"token number\">0</span> br0</pre></td></tr><tr><td data-num=\"5\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.10.0    <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.0   U     <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> br0</pre></td></tr><tr><td data-num=\"6\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.29.0    <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.0   U     <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"7\"></td><td data-command></td><td><pre>_gateway        <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.255 UH    <span class=\"token number\">100</span>    <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"[root@localhost] $\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>route <span class=\"token parameter variable\">-n</span></pre></td></tr><tr><td data-num=\"10\"></td><td data-command></td><td><pre>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</pre></td></tr><tr><td data-num=\"11\"></td><td data-command></td><td><pre><span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">192.168</span>.29.2    <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">100</span>    <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"12\"></td><td data-command></td><td><pre><span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">192.168</span>.10.1    <span class=\"token number\">0.0</span>.0.0         UG    <span class=\"token number\">1000</span>   <span class=\"token number\">0</span>        <span class=\"token number\">0</span> br0</pre></td></tr><tr><td data-num=\"13\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.10.0    <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.0   U     <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> br0</pre></td></tr><tr><td data-num=\"14\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.29.0    <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.0   U     <span class=\"token number\">0</span>      <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr><tr><td data-num=\"15\"></td><td data-command></td><td><pre><span class=\"token number\">192.168</span>.29.2    <span class=\"token number\">0.0</span>.0.0         <span class=\"token number\">255.255</span>.255.255 UH    <span class=\"token number\">100</span>    <span class=\"token number\">0</span>        <span class=\"token number\">0</span> ens33</pre></td></tr></table></figure><p>字段分类说明：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字段</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Destination</td>\n<td style=\"text-align:left\">目标网络或目标主机。Destination 为 default（ <code>0.0.0.0</code> ）时，表示这个是默认网关，所有数据都发到这个网关（这里是  <code>10.139.128.1</code> ）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Gateway</td>\n<td style=\"text-align:left\">网关地址， <code>0.0.0.0</code>  表示当前记录对应的 Destination 跟本机在同一个网段，通信时不需要经过网关（同一个局域网内 2 台主机通信不需要经过网关）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Genmask</td>\n<td style=\"text-align:left\">Destination 字段的网络掩码，Destination 是主机时需要设置为  <code>255.255.255.255</code>  ，是默认路由时会设置为  <code>0.0.0.0</code>  。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Flags</td>\n<td style=\"text-align:left\">见下文说明。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Metric</td>\n<td style=\"text-align:left\">跃点，指到达指定网络所需的中转数，是大型局域网和广域网设置所必需的 （不在 Linux 内核中使用）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Ref</td>\n<td style=\"text-align:left\">路由项引用次数 （不在 Linux 内核中使用）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Use</td>\n<td style=\"text-align:left\">此路由项被路由软件查找的次数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Iface</td>\n<td style=\"text-align:left\">网卡名字，例如  <code>eth0</code>  ；要去往这个网段需要使用哪一个网络接口。也就是  <code>eth0</code>  这张网卡。</td>\n</tr>\n</tbody>\n</table>\n<p>可以看到 Flags 下面有许多字母组合，他们分别的含义是：</p>\n<ul>\n<li>\n<p><strong>U (route is up)</strong> ：该路由处于活跃；</p>\n</li>\n<li>\n<p><strong>H (target is a host)</strong> ：目标是一部主机 (IP) 而非网域（子网掩码是 255.255.255.255）；</p>\n</li>\n<li>\n<p><strong>G (use gateway)</strong> ：需要透过外部的主机 (gateway) 来转递封包（一般指向默认网关）；</p>\n</li>\n<li>\n<p><strong>R (reinstate route for dynamic routing)</strong> ：使用动态路由时，恢复路由资讯的旗标；</p>\n</li>\n<li>\n<p><strong>D (dynamically installed by daemon or redirect)</strong> ：已经由服务或转 port 功能设定为动态路由</p>\n</li>\n<li>\n<p><strong>M (modified from routing daemon or redirect)</strong> ：路由已经被修改了；</p>\n</li>\n<li>\n<p><strong>! (reject route)</strong> ：这个路由将不会被接受（用来抵挡不安全的网域）。</p>\n</li>\n</ul>\n<h1 id=\"路由种类\"><a class=\"anchor\" href=\"#路由种类\">#</a> 路由种类</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">路由类型</th>\n<th style=\"text-align:left\">子网掩码</th>\n<th style=\"text-align:left\">Flag 字段</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">主机路由</td>\n<td style=\"text-align:left\">255.255.255.255</td>\n<td style=\"text-align:left\">UH</td>\n<td style=\"text-align:left\">指向单个 IP 地址或主机名的路由记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">网络路由</td>\n<td style=\"text-align:left\">255.255.255.0</td>\n<td style=\"text-align:left\">U</td>\n<td style=\"text-align:left\">代表主机可以到达的网络，比如说目的地址是  <code>192.168.10.xxx</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">默认路由</td>\n<td style=\"text-align:left\">0.0.0.0</td>\n<td style=\"text-align:left\">UG</td>\n<td style=\"text-align:left\">当主机不能在路由表中查找到目标主机的 IP 时，数据包就发到默认路由上</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/linux-system-constitute/",
            "url": "https://arachnid.cc/linux-system-constitute/",
            "title": "Linux 系统构成：bootloader、kernel、rootfs",
            "date_published": "2023-02-02T11:34:26.713Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>完整的 linux 系統需要以下部分：</p>\n<ul>\n<li>Bootloader\n<ul>\n<li>boot.img</li>\n</ul>\n</li>\n<li>Linux Kernel（Linux 内核）\n<ul>\n<li>Device tree blob</li>\n</ul>\n</li>\n<li>Root Filesystem（根目录文件系統）</li>\n</ul>\n<h1 id=\"bootloader\"><a class=\"anchor\" href=\"#bootloader\">#</a> bootloader</h1>\n<p>bootloader（引导装载程序）就是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境设置成一个合适的状态，以便为最终调用操作系统内核准备好正确的环境。</p>\n<p>常见的 bootloader 有 PC 平台的 Grub；嵌入式平台的 vivi, RedBoot, u-boot 等，其中 u-boot 在使用上最广泛，因此在嵌入式中又常称 linux 系统构成为 u-boot、kernel、rootfs。</p>\n<p>bootloader 是严重地依赖于硬件而实现的，特别是在嵌入式系统。因此，在嵌入式系统里建立一个通用的 bootloader 几乎是不可能的。尽管如此，我们仍然可以对 bootloader 归纳出一些通用的概念来，以指导用户进行特定的 bootloader 设计与实现。</p>\n<p>在嵌入式系统中，bootloader 的意义与作用相当于 PC 平台中的 BIOS + Grub，它对开发板上的主要部件如 CPU、SDRAM、FLASH、串口等进行了初始化，可以使用 bootloader 下载文件到开发板，可以浏览目录，可以烧录 flash，可以启动系统等，实际上，一个功能比较强大的 bootloader 已经相当于一个微型的操作系统了。</p>\n<p>总体上 bootloader 需要完成以下工作：</p>\n<ul>\n<li>\n<p>初始化 CPU 速度；</p>\n</li>\n<li>\n<p>初始化内存，包括初始化内存配置寄存器等；</p>\n</li>\n<li>\n<p>初始化中断控制器，在系统启动时，关闭中断，关闭看门狗；</p>\n</li>\n<li>\n<p>初始化串行端口（如果在目标上有的话）；</p>\n</li>\n<li>\n<p>启用指令 / 数据高速缓存；</p>\n</li>\n<li>\n<p>设置堆栈指针；</p>\n</li>\n<li>\n<p>设置参数区域并构造参数结构和标记（这是重要的一步，因为内核在标识根设备、页面大小、内存大小以及更多内容时可能需要使用引导参数）；</p>\n</li>\n<li>\n<p>执行 POST（加电自检）来标识存在的设备并报告有何问题；</p>\n</li>\n<li>\n<p>为电源管理提供挂起 / 恢复支持；</p>\n</li>\n<li>\n<p>传输操作系统内核镜像文件到目标机。也可以将操作系统内核镜像文件事先存放在 Flash 中，这样就不需要 bootLoader 和主机传输操作系统内核镜像文件，这通常是在做成产品的情况下使用。而一般在开发过程中，为了调试内核的方便，不将操作系统内核镜像文件固化在 Flash 中，这就需要主机和目标机进行文件传输；</p>\n</li>\n<li>\n<p>跳转到内核的开始，在此又分为 ROM 启动和 RAM 启动。所谓 ROM 启动就是用 XIP 技术直接在 Flash 中执行操作系统镜像文件；所谓 RAM 启动就是指把内核镜像从 Flash 复制到 RAM 中，然后再将 PC 指针跳转到 RAM 中的操作系统启动地址。</p>\n</li>\n</ul>\n<p>目前使用的主流<strong>嵌入式平台</strong>，几乎都是用 u-boot 作为启动引导，u-boot 有哪些突出的优点呢？</p>\n<p>① 开放源码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3UtYm9vdC91LWJvb3QlRUYlQkMlOUI=\">https://github.com/u-boot/u-boot；</span></p>\n<p>② 支持多种嵌入式操作系统内核，如 Linux、NetBSD, VxWorks, QNX, RTEMS, ARTOS, LynxOS, android；</p>\n<p>③ 支持多个处理器系列，如 PowerPC、ARM、x86、MIPS；</p>\n<p>④ 较高的可靠性和稳定性；</p>\n<p>⑤ 高度灵活的功能设置，适合 u-boot 调试、操作系统不同引导要求、产品发布等；</p>\n<p>⑥ 丰富的设备驱动源码，如串口、以太网、SDRAM、FLASH、LCD、NVRAM、EEPROM、RTC、键盘等；</p>\n<p>⑦ 较为丰富的开发调试文档与强大的网络技术支持。</p>\n<h1 id=\"kernel\"><a class=\"anchor\" href=\"#kernel\">#</a> kernel</h1>\n<p>kernel 即 linux 内核。内核源代码可以免费从<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VybmVsLm9yZy8=\">官网</span>获取，这是一个通用的内核，里面包含着内核支持的所有的硬件平台及驱动的所有代码，是一个大而全的内核源代码。</p>\n<p>在使用层面上，当嵌入式平台使用 linux 系统，那么最重要的就是 kernel 中驱动的移植；一般都不会从一个纯净的 kernel 中去进行移植操作，而是根据芯片厂商提供的 kernel 对特定的硬件平台及设备进行各种外设驱动相关的适配工作。</p>\n<h2 id=\"device-tree\"><a class=\"anchor\" href=\"#device-tree\">#</a> Device Tree</h2>\n<p>设备树（Device Tree）是描述计算机的特定硬件设备信息的数据结构，以便于操作系统的内核可以管理和使用这些硬件，包括 CPU 或 CPU，内存，总线和其他一些外设。</p>\n<p>老版本的 linux kernel 是没有设备树概念的，后来因为 SOC 的发展，kernel 中需要对这些新增的 SOC 进行支持，而这些代码都会编译到 kernel 中，会导致 kernel 日渐臃肿，于是后面就引入了在 PowerPC 等架构就已经采用的设备树。</p>\n<p><strong>1、dts (device tree source 设备树源文件)</strong><br>\n dts 文件是一种 ASCII 文本格式的设备树描述文件，此文件适合人类阅读主要是给用户看的。一个  <code>.dts</code>  文件对应一个 ARM 的设备，一般放置在  <code>arch/arm/boot/dts/</code>  中。</p>\n<p><strong>2、dtsi (device tree source include 设备树头文件)</strong><br>\n 由于  <code>.dts</code>  中包含了很多公共部分，linux 内核为了简化，将 Soc 公共部分提炼为  <code>.dtsi</code>  文件，类似 c 语言中的  <code>.h</code>  文件。当然，和 C 语言的头文件类似，.dtsi 也可以 include 其他的  <code>.dtsi</code>  ，譬如几乎所有的 ARM SoC 的  <code>.dtsi</code>  都引用了 <code>skeleton.dtsi</code>  。对于同一个节点的设置情况， <code>.dts</code>  中的配置会覆盖  <code>.dtsi</code>  中的配置；因此， <code>.dtsi</code>  一般写 Soc 共性部分，而  <code>.dts</code>  一般写目标单板特性部分，所以一般  <code>.dts</code>  包含并重写部分  <code>.dtsi</code> 。</p>\n<p><strong>3、dtb (device tree blob 设备树二进制文件)</strong><br>\n <code>.dts</code>  通过 dtc 编译工具编译成  <code>.dtb</code>  文件，被编译后的设备树文件与内核一同放入到存储介质中，当内核启动时读取设备树文件，就可以动态的将板级信息写入到内核中。</p>\n<h1 id=\"rootfs\"><a class=\"anchor\" href=\"#rootfs\">#</a> rootfs</h1>\n<p>rootfs（Root Filesystem）即根目录文件系统，是 kernel 启动后挂载的第一个文件系统。rootfs 和 kernel 是分开的，但单独的 kernel 没有 rootfs 是没法正常工作的。在系统终端执行  <code>cd /</code>  即可看到当前的文件系统内容了。</p>\n<p>现在有许多制作 rootfs 的工具，如 busybox，buildroot，Yocto 等。其中 buildroot 中包含了 busybox 的功能，只需要简单的操作就可以生成一个 rootfs 了。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xMjQ4MjY5NjczLnBpeG5ldC5uZXQvYmxvZy9wb3N0LzY5NTcwMjc5\">完整的 linux 系統：bootloader、linux kernel（linux 內核）、rootfile（根文件系統）</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5lbWJlZGRlZGxpbnV4Lm9yZy5jbi9lbWJsaW51eGFwcGRldi8=\">嵌入式 linux 应用开发</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vQGEyOTY1NDA2OC9ISjF1VVlFOHI=\">Linux 筆記 2</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDg0MjAxMjYvd2hhdC1pcy10aGUtZGlmZmVyZW5jZS1iZXR3ZWVuLWR0cy1maWxlLWFuZC1kdHNpLWZpbGU=\">What is the difference between .dts file and .dtsi file?</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/linux-command-summary/",
            "url": "https://arachnid.cc/linux-command-summary/",
            "title": "Linux 命令简述总结",
            "date_published": "2022-12-31T07:40:35.772Z",
            "content_html": "<h1 id=\"系统\"><a class=\"anchor\" href=\"#系统\">#</a> 系统</h1>\n<h2 id=\"信息\"><a class=\"anchor\" href=\"#信息\">#</a> 信息</h2>\n<ul>\n<li>uname -m 显示处理器架构</li>\n<li>uname -r 显示正在使用的内核版本</li>\n<li>cat /proc/cpuinfo 查看详细 CPU 信息</li>\n<li>date 显示系统日期</li>\n<li>df -h 参看容量</li>\n</ul>\n<h2 id=\"查询\"><a class=\"anchor\" href=\"#查询\">#</a> 查询</h2>\n<ul>\n<li>man 查看命令或函数的详细信息。eg： <code>man &lt;info&gt;</code></li>\n<li>which 查找命令。eg： <code>which &lt;cmd&gt;</code></li>\n<li>pwd 显示当前工作的操作路径</li>\n<li>grep 查找内容里符合条件的字符串或正则表达式</li>\n</ul>\n<h2 id=\"进程\"><a class=\"anchor\" href=\"#进程\">#</a> 进程</h2>\n<ul>\n<li>\n<p>ps 显示当前进程的状态</p>\n<ul>\n<li><code>-aux</code>  输出格式： <code>USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</code>\n<ul>\n<li>USER: 行程拥有者</li>\n<li>PID: pid</li>\n<li>% CPU: 占用的 CPU 使用率</li>\n<li>% MEM: 占用的记忆体使用率</li>\n<li>VSZ: 占用的虚拟记忆体大小</li>\n<li>RSS: 占用的记忆体大小</li>\n<li>TTY: 终端的次要装置号码 (minor device number of tty)</li>\n<li>STAT: 该行程的状态:\n<ul>\n<li>D: 无法中断的休眠状态 (通常 IO 的进程)</li>\n<li>R: 正在执行中</li>\n<li>S: 静止状态</li>\n<li>T: 暂停执行</li>\n<li>Z: 不存在但暂时无法消除</li>\n<li>W: 没有足够的记忆体分页可分配</li>\n<li>&lt;: 高优先序的行程</li>\n<li>N: 低优先序的行程</li>\n<li>L: 有记忆体分页分配并锁在记忆体内 (实时系统或捱 A I/O)</li>\n</ul>\n</li>\n<li>START: 行程开始时间</li>\n<li>TIME: 执行的时间</li>\n<li>COMMAND: 所执行的指令</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>top 实时显示系统的整体性能信息以及正在运行的进程的相关信息</p>\n<ul>\n<li><code>-d &lt;number&gt;</code>  指定 top 命令的刷新时间间隔，单位为秒</li>\n<li><code>-n &lt;number&gt;</code>  指定 top 命令运行的次数后自动退出</li>\n<li><code>-p &lt;pid&gt;</code>  仅显示指定进程 PID 的信息</li>\n<li><code>-u &lt;user&gt;</code>  仅显示指定用户名的进程信息</li>\n</ul>\n<p><strong>整体性能信息：</strong></p>\n<ul>\n<li>\n<p>us, user：运行不需要的用户进程的时间</p>\n</li>\n<li>\n<p>sy, system：运行内核进程的时间</p>\n</li>\n<li>\n<p>ni, nice：运行 nice 用户进程的时间</p>\n</li>\n<li>\n<p>id, idle：内核空闲处理程序花费的时间</p>\n</li>\n<li>\n<p>wa, IO-wait：等待 I/O 完成的时间</p>\n</li>\n<li>\n<p>hi：用于维护硬件中断的时间</p>\n</li>\n<li>\n<p>si：用于处理软件中断的时间</p>\n</li>\n<li>\n<p>st：虚拟化环境从该虚拟机窃取的时间</p>\n</li>\n</ul>\n<p><strong>进程信息：</strong></p>\n<ul>\n<li>PID：进程的标识符。</li>\n<li>USER：运行进程的用户名。</li>\n<li>PR（优先级）：进程的优先级。</li>\n<li>NI（Nice 值）：进程的优先级调整值。</li>\n<li>VIRT（虚拟内存）：进程使用的虚拟内存大小。</li>\n<li>RES（常驻内存）：进程实际使用的物理内存大小。</li>\n<li>SHR（共享内存）：进程共享的内存大小。</li>\n<li>% CPU：进程占用 CPU 的使用率。</li>\n<li>% MEM：进程占用内存的使用率。</li>\n<li>TIME+：进程的累计 CPU 时间。</li>\n</ul>\n</li>\n<li>\n<p>kill 终止正在运行的进程。eg： <code>kill &lt;pid&gt;</code></p>\n<ul>\n<li><code>-9</code>  表示无条件退出，但由进程自行决定是否退出</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"控制\"><a class=\"anchor\" href=\"#控制\">#</a> 控制</h2>\n<ul>\n<li>halt 关闭系统</li>\n<li>reboot 重启系统</li>\n<li>poweroff 关机</li>\n</ul>\n<h1 id=\"操作目录\"><a class=\"anchor\" href=\"#操作目录\">#</a> 操作目录</h1>\n<ul>\n<li>\n<p>ls 列出目录内容</p>\n<ul>\n<li><code>-a</code>  显示所有文件和目录包括隐藏的</li>\n<li><code>-l</code>  显示详细列表</li>\n</ul>\n</li>\n<li>\n<p>cd 切换目录路径。eg： <code>cd &lt;path&gt;</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> / --<span class=\"token operator\">></span> 跳转到根目录</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~ --<span class=\"token operator\">></span> 跳转到家目录</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span> --<span class=\"token operator\">></span> 跳转到上级目录</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ./home --<span class=\"token operator\">></span> 跳转到当前目录的 home 目录下</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /home --<span class=\"token operator\">></span> 跳转到根目录下的 home 目录下</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span> --<span class=\"token operator\">></span> 不添加任何参数，也是回到家目录</pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"操作文件文件夹\"><a class=\"anchor\" href=\"#操作文件文件夹\">#</a> 操作文件 / 文件夹</h1>\n<h2 id=\"浏览\"><a class=\"anchor\" href=\"#浏览\">#</a> 浏览</h2>\n<ul>\n<li>\n<p>cat 一次性显示文件所有内容，更适合查看小的文件。eg： <code>cat &lt;file&gt;</code></p>\n<ul>\n<li><code>-n</code>  显示行号</li>\n</ul>\n</li>\n<li>\n<p>less 分页显示文件内容，更适合查看大的文件。eg： <code>less &lt;file&gt;</code></p>\n</li>\n<li>\n<p>head 显示文件的开头几行（默认是 10 行）。eg： <code>head &lt;file&gt;</code></p>\n</li>\n<li>\n<p>tail 显示文件的结尾几行（默认是 10 行）。eg： <code>tail &lt;file&gt;</code></p>\n</li>\n</ul>\n<h2 id=\"更改\"><a class=\"anchor\" href=\"#更改\">#</a> 更改</h2>\n<ul>\n<li>touch 创建文件。eg： <code>touch &lt;name&gt;</code></li>\n<li>mkdir 创建文件夹。eg： <code>mkdir &lt;name&gt;</code></li>\n<li>cp 拷贝文件 / 文件夹。eg： <code>cp &lt;source&gt; &lt;dest&gt;</code>\n<ul>\n<li><code>-r</code>  递归复制文件夹及其子文件</li>\n<li><code>-i</code>  在复制前提示确认，如果目标文件已存在，则会询问是否覆盖</li>\n<li><code>-p</code>  保留源文件的权限、所有者和时间戳信息</li>\n<li><code>-f</code>  强制复制，即使目标文件已存在也会覆盖，而且不给出提示</li>\n</ul>\n</li>\n<li>mv 移动文件 / 文件夹。eg： <code>mv &lt;source&gt; &lt;dest&gt;</code></li>\n<li>rm 删除文件。eg： <code>rm &lt;name&gt;</code>\n<ul>\n<li><code>-r</code>  递归删除文件夹文件夹及其子文件</li>\n<li><code>-i</code>  向用户确认是否删除</li>\n<li><code>-f</code>  强制删除，不给出提示</li>\n</ul>\n</li>\n<li>ln 创建链接（硬链接 or 软链接）。硬链接：等同于复制多一个文件，但共享同一块数据内容（即修改任何一个文件，修改的都是同一块内容）；软链接：类似  <code>windows</code>  平台下的快捷方式， <code>ln</code>  出来的文件指向源文件，当源文件丢失，将会变成死链接。。eg： <code>ln &lt;source&gt; &lt;dest&gt;</code>\n<ul>\n<li><code>-s</code>  软链接</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"压缩\"><a class=\"anchor\" href=\"#压缩\">#</a> 压缩</h1>\n<ul>\n<li>tar 压缩\n<ul>\n<li><code>-v</code>  表示详细输出，列出被解压的文件</li>\n<li><code>-f</code>  指定文件的名称</li>\n<li><code>-c</code>  表示创建新的归档文件</li>\n<li><code>-x</code>  表示解压操作</li>\n<li><code>-r</code>  向已存在的归档中追加文件</li>\n<li><code>-t</code>  列出归档文件中的内容</li>\n<li><code>-z</code>  表示使用 gzip 压缩程序，得到  <code>.tar.gz</code>  后缀</li>\n<li><code>-j</code>  表示使用 bzip2 压缩程序，得到  <code>.tar.bz2</code>  后缀</li>\n<li><code>-J</code>  表示使用 xz 压缩程序，得到  <code>.tar.xz</code>  后缀</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"文件夹压缩\"><a class=\"anchor\" href=\"#文件夹压缩\">#</a> 文件夹压缩</h2>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>压缩</th>\n<th>显示</th>\n<th>解压</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.tar.gz</td>\n<td><code>tar -zcvf xxx.tar.gz &lt;folder&gt;</code></td>\n<td><code>tar -tvf xxx.tar.gz</code></td>\n<td><code>tar -zxvf xxx.tar.gz</code></td>\n</tr>\n<tr>\n<td>.tar.xz</td>\n<td><code>tar -Jcvf xxx.tar.xz &lt;folder&gt;</code></td>\n<td><code>tar -tvf xxx.tar.xz</code></td>\n<td><code>tar -Jxvf xxx.tar.xz</code></td>\n</tr>\n<tr>\n<td>.tar.bz2</td>\n<td><code>tar -jcvf xxx.tar.bz2 &lt;folder&gt;</code></td>\n<td><code>tar -tvf xxx.tar.bz2</code></td>\n<td><code>tar -jxvf xxx.tar.bz2</code></td>\n</tr>\n<tr>\n<td>.zip</td>\n<td><code>zip xxx.zip &lt;folder&gt;</code></td>\n<td><code>zip -sf xxx.zip</code></td>\n<td><code>unzip xxx.zip</code></td>\n</tr>\n<tr>\n<td>.rar</td>\n<td><code>rar -a xxx.rar &lt;folder&gt;</code></td>\n<td><code>rar -v xxx.rar</code></td>\n<td><code>unrar -x xxx.rar</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"文件压缩\"><a class=\"anchor\" href=\"#文件压缩\">#</a> 文件压缩</h2>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>压缩</th>\n<th>显示</th>\n<th>解压</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.Z</td>\n<td><code>compress &lt;file&gt;</code></td>\n<td>无</td>\n<td><code>uncompress xxx.Z</code></td>\n</tr>\n<tr>\n<td>.bz2</td>\n<td><code>bzip2 -z &lt;file&gt;</code></td>\n<td>无</td>\n<td><code>bzip2 -d xxx.bz2</code></td>\n</tr>\n<tr>\n<td>.gz</td>\n<td><code>gzip &lt;file&gt;</code></td>\n<td>无</td>\n<td><code>gzip -d xxx.gz</code></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"用户和群组\"><a class=\"anchor\" href=\"#用户和群组\">#</a> 用户和群组</h1>\n<h2 id=\"用户\"><a class=\"anchor\" href=\"#用户\">#</a> 用户</h2>\n<ul>\n<li>\n<p>sudo 以  <code>root</code>  身份运行命令，使用当前用户密码解锁</p>\n<p>一般来说， <code>sudo</code>  命令用来临时提升权限并运行单行命令，但也有几个特殊的命令切换至超级管理员权限：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-s</span> <span class=\"token comment\"># 使用当前用户的环境变量，不跳转目录，拥有超级管理员权限</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-i</span> <span class=\"token comment\"># 使用 root 用户的环境变量，跳转到 /root，拥有超级管理员权限</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">su</span> <span class=\"token comment\"># 使用 root 用户的环境变量，不跳转目录，拥有超级管理员权限</span></pre></td></tr></table></figure></li>\n<li>\n<p>su 切换用户，需要  <code>root</code>  用户权限，使用 root 用户密码解锁</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">su</span> <span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span> <span class=\"token comment\"># 切换 &lt;user> 后，不改变原用户的工作目录，及其他环境变量目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">su</span> - <span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span> <span class=\"token comment\"># 切换 &lt;user> 后，同时切换到新用户的工作环境中</span></pre></td></tr></table></figure><p>note：当  <code>&lt;user&gt;</code>  缺省时，切换成 root 身份。</p>\n</li>\n<li>\n<p><code>sudo</code>  VS  <code>su</code>  拥有超级管理员权限</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>sudo</th>\n<th>su</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>密码</td>\n<td>需要输入当前用户的密码</td>\n<td>需要输入 root 用户的密码</td>\n</tr>\n<tr>\n<td>行为</td>\n<td>临时使用超管权限运行单行命令</td>\n<td>允许多条命令以超管权限运行，直至退出登录</td>\n</tr>\n<tr>\n<td>记录</td>\n<td>执行的操作都会被记录下</td>\n<td>无法直接跟踪记录执行了什么操作</td>\n</tr>\n</tbody>\n</table>\n<p>note：</p>\n<p>大概是因为使用  <code>su</code>  命令或直接以 root 用户身份登录有风险，所以，一些 Linux 发行版（如 Ubuntu）默认禁用 root 用户帐户。鼓励用户在需要 root 权限时使用  <code>sudo</code>  命令。如果你想在系统中启用 root 用户帐户（强烈反对，因为你可以使用  <code>sudo</code>  命令或  <code>sudo su</code>  命令），你必须手动设置 root 用户密码，可以使用命令： <code>sudo passwd root</code>  。</p>\n</li>\n<li>\n<p>useradd 添加新用户。eg： <code>useradd &lt;user&gt;</code></p>\n</li>\n<li>\n<p>passwd 修改用户密码</p>\n</li>\n<li>\n<p>userdel 删除用户。eg： <code>userdel &lt;user&gt;</code></p>\n</li>\n</ul>\n<h2 id=\"群组\"><a class=\"anchor\" href=\"#群组\">#</a> 群组</h2>\n<ul>\n<li>groupadd 创建群组。eg： <code>groupadd &lt;group&gt;</code></li>\n<li>groupdel 删除一个已存在的群组。eg： <code>groupdel &lt;group&gt;</code></li>\n<li>groups 查看用户所在群组</li>\n</ul>\n<h1 id=\"网络\"><a class=\"anchor\" href=\"#网络\">#</a> 网络</h1>\n<ul>\n<li>ping 测试网络。eg： <code>ping &lt;ip/host&gt;</code></li>\n</ul>\n<p>其它具体网络配置使用命令，根据不同的网络工具，所使用的命令不一样，可以参考：<a href=\"https://arachnid.cc/net-tools-vs-proute2\">Linux 网络管理套件</a></p>\n<h1 id=\"other\"><a class=\"anchor\" href=\"#other\">#</a> other</h1>\n<ul>\n<li>lsusb -tv 显示 USB 设备</li>\n<li>clear 清屏</li>\n<li>lsblk 查看磁盘挂载情况</li>\n</ul>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://arachnid.cc/ubuntu-ftp-create/",
            "url": "https://arachnid.cc/ubuntu-ftp-create/",
            "title": "Ubuntu下 FTP的搭建配置",
            "date_published": "2022-11-03T13:13:57.653Z",
            "content_html": "<blockquote>\n<p>平台：Ubuntu 18.04.6</p>\n<p>vsftpd 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWN1cml0eS5hcHBzcG90LmNvbS92c2Z0cGQuaHRtbA==\">https://security.appspot.com/vsftpd.html</span></p>\n</blockquote>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p>安装 FTP 服务，命令行输入：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> vsftpd</pre></td></tr></table></figure><h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<p>先备份配置文件：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/vsftpd.conf /etc/vsftpd.conf.back</pre></td></tr></table></figure><p>vim 进入编辑信息：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/vsftpd.conf</pre></td></tr></table></figure><p>然后增加或修改以下信息：</p>\n<figure class=\"highlight makefile\"><figcaption data-lang=\"makefile\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Example config file /etc/vsftpd.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># The default compiled in settings are fairly paranoid. This sample file</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># loosens things up a bit, to make the ftp daemon more usable.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Please see vsftpd.conf.5 for all compiled in defaults.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># capabilities.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># Run standalone?  vsftpd can run either from an inetd or as a standalone</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># daemon started from an initscript.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>listen<span class=\"token operator\">=</span>NO <span class=\"token comment\">#是否开启侦听状态</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># This directive enables listening on IPv6 sockets. By default, listening</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># on the IPv6 \"any\" address (::) will accept connections from both IPv6</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># sockets. If you want that (perhaps because you want to listen on specific</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># addresses) then you must run two copies of vsftpd with two configuration</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># files.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>listen_ipv6<span class=\"token operator\">=</span>YES <span class=\"token comment\">#如果能使用 ipv6 的可以打开使用；只能用 ipv4 的必须注释掉，不然重启不了</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># Allow anonymous FTP? (Disabled by default).</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>anonymous_enable<span class=\"token operator\">=</span>YES <span class=\"token comment\">#允许匿名用户登录</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># Uncomment this to allow local users to log in.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>local_enable<span class=\"token operator\">=</span>YES <span class=\"token comment\">#允许实名登录</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># Uncomment this to enable any form of FTP write command.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>write_enable<span class=\"token operator\">=</span>YES <span class=\"token comment\">#允许实名用户进行写操作</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># Default umask for local users is 077. You may wish to change this to 022,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># if your users expect that (022 is used by most other ftpd's)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#local_umask=022</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># Uncomment this to allow the anonymous FTP user to upload files. This only</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># has an effect if the above global write enable is activated. Also, you will</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># obviously need to create a directory writable by the FTP user.</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>anon_upload_enable<span class=\"token operator\">=</span>YES <span class=\"token comment\">#允许匿名用户上传文件</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># Uncomment this if you want the anonymous FTP user to be able to create</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># new directories.</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>anon_mkdir_write_enable<span class=\"token operator\">=</span>YES <span class=\"token comment\">#允许匿名用户创建目录</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># Activate directory messages - messages given to remote users when they</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># go into a certain directory.</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>dirmessage_enable<span class=\"token operator\">=</span>YES</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># If enabled, vsftpd will display directory listings with the time</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># in  your  local  time  zone.  The default is to display GMT. The</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># times returned by the MDTM FTP command are also affected by this</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># option.</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>use_localtime<span class=\"token operator\">=</span>YES</pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># Activate logging of uploads/downloads.</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>xferlog_enable<span class=\"token operator\">=</span>YES</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>connect_from_port_20<span class=\"token operator\">=</span>YES</pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># If you want, you can arrange for uploaded anonymous files to be owned by</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># a different user. Note! Using \"root\" for uploaded files is not</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># recommended!</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">#chown_uploads=YES</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">#chown_username=whoever</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># You may override where the log file goes if you like. The default is shown</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\"># below.</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">#xferlog_file=/var/log/vsftpd.log</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\"># If you want, you can have your log file in standard ftpd xferlog format.</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\"># Note that the default log file location is /var/log/xferlog in this case.</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#xferlog_std_format=YES</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\"># You may change the default value for timing out an idle session.</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">#idle_session_timeout=600</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># You may change the default value for timing out a data connection.</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">#data_connection_timeout=120</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># It is recommended that you define on your system a unique user which the</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># ftp server can use as a totally isolated and unprivileged user.</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">#nopriv_user=ftpsecure</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\"># Enable this and the server will recognise asynchronous ABOR requests. Not</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># recommended for security (the code is non-trivial). Not enabling it,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># however, may confuse older FTP clients.</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\">#async_abor_enable=YES</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token comment\"># By default the server will pretend to allow ASCII mode but in fact ignore</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\"># the request. Turn on the below options to have the server actually do ASCII</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\"># mangling on files when in ASCII mode.</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\"># Beware that on some FTP servers, ASCII support allows a denial of service</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token comment\"># attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\"># predicted this attack and has always been safe, reporting the size of the</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\"># raw file.</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># ASCII mangling is a horrible feature of the protocol.</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\">#ascii_upload_enable=YES</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">#ascii_download_enable=YES</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># You may fully customise the login banner string:</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\">#ftpd_banner=Welcome to blah FTP service.</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\"># useful for combatting certain DoS attacks.</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\">#deny_email_enable=YES</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># (default follows)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\">#banned_email_file=/etc/vsftpd.banned_emails</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\"># You may restrict local users to their home directories.  See the FAQ for</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\"># the possible risks in this before using chroot_local_user or</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\"># chroot_list_enable below.</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>chroot_local_user<span class=\"token operator\">=</span>YES <span class=\"token comment\">#用户访问将被限制在当前目录</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\"># You may specify an explicit list of local users to chroot() to their home</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\"># directory. If chroot_local_user is YES, then this list becomes a list of</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\"># users to NOT chroot().</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\"># (Warning! chroot'ing can be very dangerous. If using chroot, make sure that</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\"># the user does not have write access to the top level directory within the</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\"># chroot)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">#chroot_local_user=YES</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\">#chroot_list_enable=YES</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token comment\"># (default follows)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\">#chroot_list_file=/etc/vsftpd.chroot_list</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token comment\"># You may activate the \"-R\" option to the builtin ls. This is disabled by</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\"># default to avoid remote users being able to cause excessive I/O on large</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\"># sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\"># the presence of the \"-R\" option, so there is a strong case for enabling it.</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\">#ls_recurse_enable=YES</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token comment\"># Customization</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token comment\"># Some of vsftpd's settings don't fit the filesystem layout by</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token comment\"># default.</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\"># This option should be the name of a directory which is empty.  Also, the</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token comment\"># directory should not be writable by the ftp user. This directory is used</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token comment\"># as a secure chroot() jail at times vsftpd does not require filesystem</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token comment\"># access.</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>secure_chroot_dir<span class=\"token operator\">=</span>/var/run/vsftpd/empty</pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token comment\"># This string is the name of the PAM service vsftpd will use.</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>pam_service_name<span class=\"token operator\">=</span>vsftpd</pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token comment\"># This option specifies the location of the RSA certificate to use for SSL</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token comment\"># encrypted connections.</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>rsa_cert_file<span class=\"token operator\">=</span>/etc/ssl/certs/ssl-cert-snakeoil.pem</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>rsa_private_key_file<span class=\"token operator\">=</span>/etc/ssl/<span class=\"token keyword\">private</span>/ssl-cert-snakeoil.key</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>ssl_enable<span class=\"token operator\">=</span>NO</pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token comment\"># Uncomment this to indicate that vsftpd use a utf8 filesystem.</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>utf8_filesystem<span class=\"token operator\">=</span>YES</pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>no_anon_password<span class=\"token operator\">=</span>YES <span class=\"token comment\">#匿名登录是否需要密码</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>anon_root<span class=\"token operator\">=</span>/home/frd_lzy <span class=\"token comment\">#匿名登录访问的文件路径</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>local_root<span class=\"token operator\">=</span>/projects <span class=\"token comment\">#实名登录访问的文件路径</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>allow_writeable_chroot<span class=\"token operator\">=</span>YES</pre></td></tr></table></figure><p>编辑完成后， <code>:wq</code>  保存退出。</p>\n<h1 id=\"重新加载配置文件\"><a class=\"anchor\" href=\"#重新加载配置文件\">#</a> 重新加载配置文件</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> /etc/init.d/vsftpd restart</pre></td></tr></table></figure><h1 id=\"启动服务\"><a class=\"anchor\" href=\"#启动服务\">#</a> 启动服务</h1>\n<p>在加载完后，重启服务器：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart vsftpd</pre></td></tr></table></figure><p>查看服务启动状态：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl status vsftpd</pre></td></tr></table></figure><p><img data-src=\"/ubuntu-ftp-create/image-20221106152005206.png\" alt=\"image-20221106152005206\"></p>\n<p>设置开机启动：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> vsftpd</pre></td></tr></table></figure><p>如果想关闭开机启动：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl disable vsftpd</pre></td></tr></table></figure><h1 id=\"ftp连接\"><a class=\"anchor\" href=\"#ftp连接\">#</a> FTP 连接</h1>\n<p>本机连接：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ftp</span> <span class=\"token number\">127.0</span>.0.1</pre></td></tr></table></figure><p>其它电脑连接：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ftp</span> <span class=\"token function\">ip</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># eg:ftp 192.168.0.3</span></pre></td></tr></table></figure><p>1、输入用户名：（1）匿名：anonymous 或 ftp （2）主机用户名：即你当前主机名。</p>\n<p>2、回车。</p>\n<p>3、如果需要密码则进行相应输入，这里上面配置设了匿名登录不需要密码，所以以匿名登录时没有提示输入密码。</p>\n<p>4、进入到相应的用户访问根目录里（ps：即进入到配置文件中设置的登录访问的文件路径，可以用  <code>ls</code>  查看是否对应上访问的文件目录），这样就可以愉快的玩耍了；输入：  <code>quit</code>  退出。</p>\n<p>eg：本地连接并退出，如下图：</p>\n<p><img data-src=\"/ubuntu-ftp-create/image-20221106164252568.png\" alt=\"image-20221106164252568\"></p>\n<p>windows 下可视化文件访问：按  <code>Win</code>  +  <code>E</code>  快捷键，调用文件资源管理器，输入访问地址，回车：</p>\n<p><img data-src=\"/ubuntu-ftp-create/image-20221106160826118.png\" alt=\"image-20221106160826118\"></p>\n<p>windows 下命令行文件访问：同样按  <code>Win</code>  +  <code>E</code>  快捷键，调用文件资源管理器，然后在输写框跟上面 linux 访问连接一样输入  <code>ftp ip</code>  ，即可跳到 ftp 操作控制台中：</p>\n<p><img data-src=\"/ubuntu-ftp-create/image-20221106161411644.png\" alt=\"image-20221106161411644\"></p>\n<h1 id=\"ftp客户端常用命令\"><a class=\"anchor\" href=\"#ftp客户端常用命令\">#</a> FTP 客户端常用命令</h1>\n<p>在登录进入 ftp 后，可以使用  <code>help</code>  查看可以使用哪些指令操作：</p>\n<p><img data-src=\"/ubuntu-ftp-create/image-20221106163512272.png\" alt=\"image-20221106163512272\"></p>\n<ul>\n<li>\n<p>ls：和 linux 上的 ls 命令类似</p>\n</li>\n<li>\n<p>Ctrl+Shift + L：清屏</p>\n</li>\n<li>\n<p>put：使用  <code>put [本地文件路径+名称]</code>  上传</p>\n</li>\n<li>\n<p>get：使用  <code>get [远程文件路径+名称]</code>  下载</p>\n</li>\n<li>\n<p>mput：批量上传多个文件  <code>mput 文件名1 文件名2</code></p>\n</li>\n<li>\n<p>mget：批量获取多个文件  <code>mget 文件名1 文件名2</code></p>\n</li>\n<li>\n<p>prompt：屏蔽批量输出信息，批量上传下载文件就不需要一直回车确认了</p>\n</li>\n<li>\n<p>quit：退出 ftp 访问</p>\n</li>\n</ul>\n",
            "tags": [
                "history",
                "Linux",
                "Ubuntu"
            ]
        },
        {
            "id": "https://arachnid.cc/arch-linux-install/",
            "url": "https://arachnid.cc/arch-linux-install/",
            "title": "基于官方指导安装 Arch Linux",
            "date_published": "2022-04-12T03:02:19.000Z",
            "content_html": "<blockquote>\n<p>官方 wiki 安装中文指导：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvSW5zdGFsbGF0aW9uX2d1aWRlXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcp\">https://wiki.archlinux.org/title/Installation_guide_(简体中文)</span></p>\n<p>最好还是以<strong>英文版</strong>的为基准，因为 ArchLinux 是一个激进的系统，更新比较快，可能刚写完这篇笔记，转头已经有些对应不上了，哈哈哈。</p>\n</blockquote>\n<h2 id=\"系统镜像\"><a class=\"anchor\" href=\"#系统镜像\">#</a> 系统镜像</h2>\n<p>官方镜像下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNobGludXgub3JnL2Rvd25sb2FkLw==\">https://archlinux.org/download/</span></p>\n<p>当然，也可以去各大高校提供的镜像源网站下载。</p>\n<h2 id=\"启动盘制作\"><a class=\"anchor\" href=\"#启动盘制作\">#</a> 启动盘制作</h2>\n<p><strong>1、windows 平台</strong></p>\n<p>可以使用 Rufus：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ydWZ1cy5pZS96aC8=\">https://rufus.ie/zh/</span></p>\n<p>这是一款开源、免费、小巧（1.1mb）纯粹的系统启动盘制作工具。<br>\n目前所支持的 ISO 镜像如下：</p>\n<p><img data-src=\"/arch-linux-install/image-20220412112425056.png\" alt=\"image-20220412112425056\"></p>\n<p><strong>2、Uinx 平台</strong></p>\n<p>类 Unix 系统可以直接使用  <code>dd</code>  命令来制作启动盘。</p>\n<p><code>dd</code>  命令使用可参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9saW51eC9saW51eC1jb21tLWRkLmh0bWw=\">https://www.runoob.com/linux/linux-comm-dd.html</span></p>\n<p><strong>3、多平台</strong></p>\n<p>可以使用开源的 etcher：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFsZW5hLmlvL2V0Y2hlci8=\">https://www.balena.io/etcher/</span></p>\n<blockquote>\n<p>然后本篇文章是基于官方指导的总结分析安装的笔记，如下开始正式安装配置，因为是以官方 wiki 安装为指导，所以下面用到的操作的标题将一一对应官方 wiki 的标题，没用到的将忽略不写，以及需要增加的将给出说明。目前使用的镜像版本： <code>archlinux-2022.04.01-x86_64.iso</code></p>\n</blockquote>\n<h2 id=\"引导安装\"><a class=\"anchor\" href=\"#引导安装\">#</a> 引导安装</h2>\n<p>Arch 的启动引导过程有两种：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQklPUw==\">BIOS</span> 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvVUVGSQ==\">UEFI</span> 系统，这两者的引导过程是完全不同的。在 Arch 中它们的引导加载及区别可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvQXJjaF9ib290X3Byb2Nlc3M=\">https://wiki.archlinux.org/title/Arch_boot_process</span></p>\n<p>目前大部分设备的引导方式主要分为  <code>UEFI 引导 + GPT 分区表</code>  和  <code>BIOS(LEGACY) 引导 + MBR 分区表</code>  这两种，而在新的机器里大部分都采用了  <code>UEFI/GPT</code>  引导的方式，当然，同时也兼容  <code>BIOS/MBR</code>  。</p>\n<p>UEFI 进入：</p>\n<p><img data-src=\"/arch-linux-install/image-20220412115757611.png\" alt=\"image-20220412115757611\"></p>\n<p>BIOS 进入：</p>\n<p><img data-src=\"/arch-linux-install/image-20220412120426116.png\" alt=\"image-20220412120426116\"></p>\n<p>启动安装后，最终界面出现的效果是一样的：</p>\n<p><img data-src=\"/arch-linux-install/image-20220412153955531.png\" alt=\"image-20220412153955531\"></p>\n<h2 id=\"验证引导模式\"><a class=\"anchor\" href=\"#验证引导模式\">#</a> 验证引导模式</h2>\n<p>键入如下命令：（ <code>ls</code> ：表示列出目录内容；后面的路径可以利用 Tab 键 自动补全，即键入命令或文件名的前几个字符，然后按 [Tab] 键）</p>\n<pre><code>ls /sys/firmware/efi/efivars\n</code></pre>\n<p>如果命令结果显示了目录且没有报告错误，则系统以 UEFI 模式引导。</p>\n<p>如果目录不存在，则系统可能 <strong>（注意是可能，并不一定确是 BIOS 模式）</strong> 以 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvemg6QklPUw==\">BIOS</span> 模式 (或 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ29tcGF0aWJpbGl0eV9TdXBwb3J0X01vZHVsZQ==\">CSM</span> 模式) 引导，如显示：</p>\n<pre><code>ls: cannot access '/sys/firmware/efi/efivars': No such file or directory\n</code></pre>\n<p>对于一些不是新的 / 格式过的磁盘，可能就不太适用了，当然，最好方法就是查看安装的主分区磁盘的属性。</p>\n<h2 id=\"连接到因特网\"><a class=\"anchor\" href=\"#连接到因特网\">#</a> 连接到因特网</h2>\n<p>1、检查网络接口是否启用</p>\n<pre><code>ip link\n</code></pre>\n<p>2、连接到网络</p>\n<ul>\n<li>有线：连接网线，并保证上级路由有网。</li>\n<li>无线：使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvSXdkXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcpI2l3Y3Rs\">iwctl</span> 验证无线网络，具体操作点击链接查看。</li>\n</ul>\n<p>3、配置网络连接</p>\n<ul>\n<li>\n<p>动态：需要支持 DHCP，然后执行以下命令。</p>\n<pre><code>dhcpcd\n</code></pre>\n</li>\n<li>\n<p>静态：直接按照 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTmV0d29ya19jb25maWd1cmF0aW9uXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcpIyVFOSU5RCU5OSVFNiU4MCU4MV9JUF8lRTUlOUMlQjAlRTUlOUQlODA=\">静态 IP 地址</span> 这个链接进行操作。</p>\n</li>\n</ul>\n<p>4、检查网络连接</p>\n<p>在确认无误完成上面的操作后，通过 PING IP 来检查：</p>\n<pre><code>ping archlinux.org\n</code></pre>\n<p><strong>note：</strong> 关于网络部分的，详情请看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTmV0d29ya19jb25maWd1cmF0aW9u\">https://wiki.archlinux.org/title/Network_configuration</span></p>\n<h2 id=\"更新系统时间\"><a class=\"anchor\" href=\"#更新系统时间\">#</a> 更新系统时间</h2>\n<p>执行：</p>\n<pre><code>timedatectl set-ntp true\n</code></pre>\n<p>然后正常情况下是并没有输出的，所谓没有消息就是最好的消息，这就是 Linux/Unix 系统的设计思想。</p>\n<p>最后，执行如下命令来检查服务状态：</p>\n<pre><code>timedatectl status\n</code></pre>\n<h2 id=\"建立硬盘分区\"><a class=\"anchor\" href=\"#建立硬盘分区\">#</a> 建立硬盘分区</h2>\n<p>系统如果识别到磁盘，就会将其分配为一个块设备，如  <code>/dev/sda</code> 、 <code>/dev/nvme0n1</code>  或  <code>/dev/mmcblk0</code>  等等。然后可以执行如下命令查看：</p>\n<pre><code>fdisk -l\n</code></pre>\n<p>然后，针对不同的引导方式，其分区布局是不一样的，以官方给出的分区为例：</p>\n<ul>\n<li>\n<p><strong>UEFI 与</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUGFydGl0aW9uaW5nXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcpI0dVSURfJUU1JTg4JTg2JUU1JThDJUJBJUU4JUExJUE4\">GPT</span></p>\n<table>\n<thead>\n<tr>\n<th>挂载点</th>\n<th>分区</th>\n<th>分区类型</th>\n<th>建议大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/mnt/boot</td>\n<td>/dev/<em>efi_system_partition</em></td>\n<td>EFI 系统分区</td>\n<td>至少 300 MiB</td>\n</tr>\n<tr>\n<td>[SWAP]</td>\n<td>/dev/<em>swap_partition</em></td>\n<td>Linux swap (交换空间)</td>\n<td>大于 512 MiB</td>\n</tr>\n<tr>\n<td>/mnt</td>\n<td>/dev/<em>root_partition</em></td>\n<td>Linux x86-64 根目录 (/)</td>\n<td>剩余空间</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p><strong>BIOS 与</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUGFydGl0aW9uaW5nXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcpI01hc3Rlcl9Cb290X1JlY29yZA==\">MBR</span></p>\n<table>\n<thead>\n<tr>\n<th>挂载点</th>\n<th>分区</th>\n<th>分区类型</th>\n<th>建议大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[SWAP]</td>\n<td>/dev/<em>swap_partition</em></td>\n<td>Linux swap (交换空间)</td>\n<td>大于 512 MiB</td>\n</tr>\n<tr>\n<td>/mnt</td>\n<td>/dev/<em>root_partition</em></td>\n<td>Linux x86-64 根目录 (/)</td>\n<td>剩余空间</td>\n</tr>\n</tbody>\n</table>\n<p>然后在这里拓展一下  <code>MiB</code>  跟  <code>MB</code>  这两个单位， <code>MB</code>  是国际单位制 SI 制定的十进制标准单位制，这个 M 是 1000K，而  <code>MiB</code>  是国际电工委员会 IEC 制定的二进制标准，这个 M 是 1024K 。参看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waHlzaWNzLm5pc3QuZ292L2N1dS9Vbml0cy9iaW5hcnkuaHRtbA==\">https://physics.nist.gov/cuu/Units/binary.html</span></p>\n</li>\n<li>\n<p>其它的布局实例可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUGFydGl0aW9uaW5nXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcpIyVFNSVCOCU4MyVFNSVCMSU4MCVFNyVBNCVCQSVFNCVCRSU4Qg==\">https://wiki.archlinux.org/title/Partitioning_(简体中文)# 布局示例</span></p>\n</li>\n</ul>\n<p>在了解上面的布局后，然后我们常用的引导方式有  <code>UEFI 引导 + GPT 分区表</code>  和  <code>BIOS(LEGACY) 引导 + MBR 分区表</code>  这两种，所以下面分开说明：</p>\n<ol>\n<li>\n<p><strong>BIOS/MBR</strong></p>\n<p>这种方式相对于另一种比较简单，所以就先说了。</p>\n<p>首先，先来了解一下  <code>[SWAP]</code>  挂载点和  <code>/mnt</code>  挂载点：</p>\n<ul>\n<li>\n<p><code>[SWAP]</code> ：swap 分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存（物理内存，可以理解为内存条容量）不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间（有点类似于 windows 系统下的虚拟内存）。也就是说，当内存不够用时，我们使用 swap 分区来临时顶替，等到那些程序要运行时，再从 swap 中恢复保存的数据到内存中。这种 “拆东墙，补西墙” 的方式应用于几乎所有的操作系统中。</p>\n<p>使用 swap 交换分区，显著的优点是，通过操作系统的调度，应用程序实际可以使用的内存空间将远远超过系统的物理内存。</p>\n<p>那么 swap 分区到底设置成多大才最优？少了又觉得不够，多了又感觉浪费，那么我们可以参考 Redhat 官方文档中 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hY2Nlc3MucmVkaGF0LmNvbS9kb2N1bWVudGF0aW9uL2VuLXVzL3JlZF9oYXRfZW50ZXJwcmlzZV9saW51eC82L2h0bWwvaW5zdGFsbGF0aW9uX2d1aWRlL3MyLWRpc2twYXJ0cmVjb21tZW5kLXBwYyNpZDQzOTQwMDc=\">关于 swap 分区大小设置的建议</span>：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">物理内存</th>\n<th style=\"text-align:center\">建议的交换空间大小</th>\n<th style=\"text-align:center\">如果开启休眠功能建议的交换空间大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">⩽ 2GB</td>\n<td style=\"text-align:center\">内存的 2 倍</td>\n<td style=\"text-align:center\">内存的 3 倍</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt; 2GB – 8GB</td>\n<td style=\"text-align:center\">等于内存大小</td>\n<td style=\"text-align:center\">内存的 2 倍</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt; 8GB – 64GB</td>\n<td style=\"text-align:center\">至少 4G</td>\n<td style=\"text-align:center\">内存的 1.5 倍</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt; 64GB</td>\n<td style=\"text-align:center\">至少 4G</td>\n<td style=\"text-align:center\">不建议使用休眠</td>\n</tr>\n</tbody>\n</table>\n<p>最后结合日常使用，一般来说可以按照如下规则设置 swap 大小：</p>\n<ul>\n<li>4G 以内的物理内存，SWAP 设置为内存的 2 倍，不超过 4G。</li>\n<li>4-8G 的物理内存，SWAP 等于内存大小。</li>\n<li>8-64G 的物理内存，SWAP 设置为 8G。</li>\n<li>64-256G 物理内存，SWAP 设置为 16G。</li>\n</ul>\n</li>\n<li>\n<p><code>/mnt</code> ：全称  <code>mount</code>  可直接理解为 “挂载”，用于存放手动挂载的硬件。这部分是根目录 <code>/</code>  下的目录，用来挂载文件系统。</p>\n<p>一般的 Linux 根目录展开如下图：</p>\n<p><img data-src=\"/arch-linux-install/994198-20160908160724832-375737054.png\" alt=\"img\"></p>\n<p>然后按照官方的说明，是想把将根磁盘卷挂载到  <code>/mnt</code>  目录下，即  <code>/mnt</code>  变成  <code>/</code>  根目录。</p>\n</li>\n</ul>\n<p><strong>好了，了解完后下面正式开始。</strong></p>\n<p>执行命令：</p>\n<pre><code>fdisk /dev/sdx （sdx可以为sda、sdb等，具体以你实际需要挂载的磁盘名称为准）\n</code></pre>\n<p>接着你就进入了  <code>fdisk</code>  操作环境，为了获取该命令下的操作功能，根据提示输入  <code>m</code>  并回车查看各命令的作用：</p>\n<p><img data-src=\"/arch-linux-install/image-20220414144302934.png\" alt=\"image-20220414144302934\"></p>\n<p>在  <code>fdisk</code>  操作环境下：</p>\n<p>1、对于一个全新的磁盘（格式化了），输入  <code>o</code>  来创建一个全新的  <code>MBR</code>  分区表（因为这里是 BIOS 引导）；如果是旧磁盘（要么原本有  <code>MBR</code>  分区表，要么不是  <code>MBR</code>  属性  <code>DOS</code>  的），那对于非  <code>MBR</code>  分区表可能得更改分区表或者格式化，而已有  <code>MBR</code>  分区表的直接执行第 2 步。</p>\n<p>2、输入  <code>n</code>  创建一个新的分区，首先会让你选择类型分区，输入  <code>p</code>  选择主分区，回车接着选择分区号，这里一般直接回车使用默认数值，这样可以避免自己定义出现冲突；紧接着选择开始起扇区地址，如果不知道原有区域划分情况，那一般直接回车使用默认数值即可；随后，输入结束扇区地址或者容量大小，这里决定了你为该分区创建的容量大小；我们按照表格顺序创建分区，那这第一个就是  <code>swap</code>  交换分区，例如我分配的是 8G 容量，那可以直接输入容量大小： <code>+8G</code>  。</p>\n<p>3、创建完毕后，可以输入  <code>p</code>  来查看创建的分区。</p>\n<p>4、重复第 2 项创建根目录分区和第 3 项确认最后的分区信息，至此就有两个分区（对应表格）。</p>\n<p>5、最后输入  <code>w</code>  将之前所有的操作写入磁盘并生效。</p>\n</li>\n<li>\n<p><strong>UEFI/GPT</strong></p>\n<p>与上一种引导方式相比，根据表格显示，只多了一个 <strong>EFI 系统分区</strong>，然后了解一下这个挂载点：</p>\n<ul>\n<li><code>/mnt/boot</code> ：上面说了官方是想把将根磁盘卷挂载到  <code>/mnt</code>  目录下，那这个 boot 引导自然就挂载到了新的  <code>/mnt</code>  目录下了。</li>\n</ul>\n<p>在该引导模式下的操作就如下。</p>\n<p>执行命令如下进入  <code>fdisk</code>  操作环境：</p>\n<pre><code>fdisk /dev/sdx （sdx可以为sda、sdb等，具体以你实际需要挂载的磁盘名称为准）\n</code></pre>\n<p>在  <code>fdisk</code>  操作环境下：</p>\n<p>1、对于一个全新的磁盘（格式化了），这里则输入  <code>g</code>  来创建一个全新的  <code>GPT</code>  分区表（因为到这里是 UEFI 引导）；同样的如果是旧磁盘那跟上面的 BIOS 引导操作差不多，只不过这里是  <code>GPT</code>  属性了。</p>\n<p>2、输入  <code>n</code>  创建一个新的分区，让你选择分区号 <strong>（UEFI 比 BIOS 少了类型分区选择）</strong> ，这里一般直接回车使用默认数值，这样可以避免自己定义出现冲突；紧接着选择开始起扇区地址，如果不知道原有区域划分情况，那一般直接回车使用默认数值即可；随后，输入结束扇区地址或者容量大小，这里决定了你为该分区创建的容量大小；我们按照表格顺序创建分区，那这第一个就是  <code>/mnt/boot</code>  引导分区，例如我取的是 512MiB 容量，那可以直接输入容量大小： <code>+512M</code>  。</p>\n<p>3、创建完毕后，可以输入  <code>p</code>  来查看创建的分区。</p>\n<p>4、重复第 2 项和第 3 项两次，分别创建  <code>[SWAP]</code>  和  <code>/mnt</code> ，至此就有三个分区（对应表格）。</p>\n<p>5、最后输入  <code>w</code>  将之前所有的操作写入磁盘并生效。</p>\n</li>\n</ol>\n<h2 id=\"格式化分区\"><a class=\"anchor\" href=\"#格式化分区\">#</a> 格式化分区</h2>\n<ul>\n<li>\n<p><strong>EFI 系统分区（仅对于 UEFI/GPT 引导方式）</strong></p>\n<p>使用  <code>mkfs.fat</code>  命令将其格式化为 Fat32：</p>\n<pre><code>mkfs.fat -F 32 /dev/sdxY （sdxY为上面创建的 EFI 系统分区符）\n</code></pre>\n</li>\n<li>\n<p><strong>swap 交换分区</strong></p>\n<p>如果有创建，则请使用  <code>mkswap</code>  命令将其初始化：</p>\n<pre><code>mkswap /dev/sdxY （sdxY为上面创建的交换空间分区符）\n</code></pre>\n</li>\n<li>\n<p><strong> <code>/mnt</code>  根目录分区</strong></p>\n<p>执行以下命令创建一个 Ext4 文件系统：</p>\n<pre><code>mkfs.ext4 /dev/sdxY （sdxY为上面创建的根分区符）\n</code></pre>\n</li>\n</ul>\n<h2 id=\"挂载分区\"><a class=\"anchor\" href=\"#挂载分区\">#</a> 挂载分区</h2>\n<p>1、将根磁盘卷挂载到  <code>/mnt</code> ，执行：</p>\n<pre><code>mount /dev/sdxY /mnt （把 sdxY替换为上面创建根分区符）\n</code></pre>\n<p>2、如果创建了  <code>swap</code>  交换空间卷，执行：</p>\n<pre><code>swapon /dev/sdxY （把 sdxY替换为上面创建的交换空间分区符）\n</code></pre>\n<p>3、对于 UEFI 系统，挂载 EFI 系统分区：</p>\n<pre><code>mkdir /mnt/boot\nmount /dev/sdxY /mnt/boot （把 sdxY替换为上面创建的 EFI 系统分区符）\n</code></pre>\n<h2 id=\"选择镜像\"><a class=\"anchor\" href=\"#选择镜像\">#</a> 选择镜像</h2>\n<p>文件  <code>/etc/pacman.d/mirrorlist</code>  定义了软件包会从哪个镜像源下载。在列表中越前的镜像在下载软件包时有越高的优先权。</p>\n<p>各地区镜像源获取：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNobGludXgub3JnL21pcnJvcmxpc3Qv\">https://archlinux.org/mirrorlist/</span> ，然后点击生成：</p>\n<p><img data-src=\"/arch-linux-install/image-20220415095310180.png\" alt=\"image-20220415095310180\"></p>\n<p>编辑  <code>/etc/pacman.d/mirrorlist</code>  文件，执行：</p>\n<pre><code>vim /etc/pacman.d/mirrorlist\n</code></pre>\n<p>然后进入 VIM 环境，输入  <code>i</code>  进入编辑状态，然后根据上面生成提供的镜像表，选择几个放到文件最顶端，在这里笔者选择阿里云镜像：</p>\n<p><img data-src=\"/arch-linux-install/image-20220415103048537.png\" alt=\"image-20220415103048537\"></p>\n<p>如果其速度不佳，可以手动指定其他镜像源，像中科大或者清华的放在最上面即可：</p>\n<pre><code>Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch\n</code></pre>\n<p>然后，按  <code>Esc</code>  键退出编程，最后输入  <code>:wq</code>  保存退出。</p>\n<p>关于 vim 命令的使用，可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9saW51eC9saW51eC12aW0uaHRtbA==\">https://www.runoob.com/linux/linux-vim.html</span></p>\n<h2 id=\"安装必需的软件包\"><a class=\"anchor\" href=\"#安装必需的软件包\">#</a> 安装必需的软件包</h2>\n<p>使用  <code>pacstrap</code>  脚本，安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNobGludXgub3JnL3BhY2thZ2VzLz9uYW1lPWJhc2U=\">base</span> 软件包和 Linux <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvS2VybmVsXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcp\">内核</span>以及常规硬件的固件：</p>\n<pre><code>pacstrap /mnt base base-devel linux linux-headers linux-firmware （base-devel在 AUR包的安装是必须的）\n</code></pre>\n<h2 id=\"fstab配置\"><a class=\"anchor\" href=\"#fstab配置\">#</a> Fstab 配置</h2>\n<p>生成自动挂载分区的  <code>fstab</code>  文件，执行命令：</p>\n<pre><code>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab\n</code></pre>\n<p>然后  <code>cat</code>  一下检查生成的  <code>/mnt/etc/fstab</code>  文件是否正确：</p>\n<pre><code>cat /mnt/etc/fstab\n</code></pre>\n<p>执行后将显示各分区挂载情况及属性信息。</p>\n<h2 id=\"chroot配置\"><a class=\"anchor\" href=\"#chroot配置\">#</a> Chroot 配置</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvQ2hhbmdlX3Jvb3RfKCVFNyVBRSU4MCVFNCVCRCU5MyVFNCVCOCVBRCVFNiU5NiU4Nyk=\">Change root</span> 到新安装的系统：</p>\n<pre><code>arch-chroot /mnt\n</code></pre>\n<p>执行了这步以后，我们的操作都相当于在磁盘上新装的系统中进行。</p>\n<h2 id=\"时区配置\"><a class=\"anchor\" href=\"#时区配置\">#</a> 时区配置</h2>\n<p>设置时区：</p>\n<pre><code>ln -sf /usr/share/zoneinfo/Region（地区名）/City（城市名） /etc/localtime\n</code></pre>\n<p>eg：以上海为例，执行  <code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></p>\n<p>然后运行  <code>hwclock</code>  以生成  <code>/etc/adjtime</code> ：</p>\n<pre><code>hwclock --systohc\n</code></pre>\n<h2 id=\"本地化配置\"><a class=\"anchor\" href=\"#本地化配置\">#</a> 本地化配置</h2>\n<p>程序和库如果需要本地化文本，则需要根据区域设置 Locale，以明确规定地域、货币、时区日期的格式、字符排列方式和其他本地化标准。</p>\n<p>需在这两个文件设置： <code>locale.gen</code>  与  <code>locale.conf</code> 。</p>\n<p>通过前面的 Chroot 配置，我们已经处于 chroot 环境下了，这就意味这现在所在的系统中只有一些最基本的包（组件），而 VIM 组件并未包含在里面，这时候就需要自己安装组件包了。利用 Archlinux 下非常强大的包管理工具  <code>pacman</code> ，其安装包的命令格式为  <code>pacman -S 包名</code> ， <code>pacman</code>  会自动检查这个包所需要的其他包（即为依赖）并一起装上。</p>\n<p>然后我们安装 VIM 组件，执行：</p>\n<pre><code>pacman -S vim\n</code></pre>\n<p>1、利用刚安装的  <code>vim</code>  ，编辑  <code>locale.gen</code>  文件：</p>\n<pre><code>vim /etc/locale.gen\n</code></pre>\n<p>找到  <code>zh_CN.UTF-8 UTF-8</code> 、 <code>en_US.UTF-8 UTF-8</code>  这两行，去掉注释并保存。</p>\n<p>紧接着执行  <code>locale-gen</code>  以生成 locale 信息：</p>\n<pre><code>locale-gen\n</code></pre>\n<p>2、然后创建 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vbG9jYWxlLmNvbmYuNQ==\">locale.conf</span> 文件，并 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTG9jYWxlXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcpIyVFNyVCMyVCQiVFNyVCQiU5RiVFNSU4QyVCQSVFNSU5RiU5RiVFOCVBRSVCRSVFNyVCRCVBRQ==\">编辑设定 LANG 变量</span>，</p>\n<pre><code>echo LANG=en_US.UTF-8 &gt; /etc/locale.conf\n</code></pre>\n<h2 id=\"网络配置\"><a class=\"anchor\" href=\"#网络配置\">#</a> 网络配置</h2>\n<p>创建  <code>/etc/hostname</code>  文件，并设定的一个  <code>myhostname</code> ：</p>\n<pre><code>echo myhostname &gt; /etc/hostname （myhostname是你想要为该系统设置的名称）\n</code></pre>\n<p>这步在我目前使用的功能里好像没用到。。。</p>\n<p>然后，在官方文档中有一条说明：</p>\n<blockquote>\n<p>请注意，目前的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNobGludXgub3JnL3BhY2thZ2VzLz9uYW1lPWJhc2U=\">base</span> 不含有任何网络管理工具。对于新安装的系统环境，请接着完成<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvJUU3JUJEJTkxJUU3JUJCJTlDJUU5JTg1JThEJUU3JUJEJUFF\">网络配置</span>，配置过程中可能包括要安装合适的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvJUU3JUJEJTkxJUU3JUJCJTlDJUU3JUFFJUExJUU3JTkwJTg2\">网络管理</span>软件。</p>\n</blockquote>\n<p>因此，我们需要安装网络配置管理包（<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvRGhjcGNkXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcp\">DHCP</span> 客户端和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTmV0Y3RsXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcp\">netctl</span> 网络管理器）：</p>\n<pre><code>pacman -S dhcpcd netctl\n</code></pre>\n<h2 id=\"root-密码\"><a class=\"anchor\" href=\"#root-密码\">#</a> Root 密码</h2>\n<p><code>Root</code>  是  <code>Linux</code>  中具有最高权限帐户，有些敏感的操作必须通过  <code>Root</code>  用户进行，比如使用 <code>pacman</code>  命令。</p>\n<p>执行以下命令，然后根据提示输入两次密码即可（注意输入是不显示出来）：</p>\n<pre><code>passwd root\n</code></pre>\n<h2 id=\"安装引导程序\"><a class=\"anchor\" href=\"#安装引导程序\">#</a> 安装引导程序</h2>\n<p>如果是 Intel 或 AMD 的 CPU，启用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvTWljcm9jb2RlXyglRTclQUUlODAlRTQlQkQlOTMlRTQlQjglQUQlRTYlOTYlODcp\">微码</span> 更新：</p>\n<ul>\n<li>\n<p>Intel</p>\n<pre><code>pacman -S intel-ucode\n</code></pre>\n</li>\n<li>\n<p>AMD</p>\n<pre><code>pacman -S amd-ucode\n</code></pre>\n</li>\n</ul>\n<p>接着，官方推荐的引导加载是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvR1JVQl8oJUU3JUFFJTgwJUU0JUJEJTkzJUU0JUI4JUFEJUU2JTk2JTg3KQ==\">GRUB</span> （其他的引导加载可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvQXJjaF9ib290X3Byb2Nlc3NfKCVFNyVBRSU4MCVFNCVCRCU5MyVFNCVCOCVBRCVFNiU5NiU4NykjJUU1JThBJTlGJUU4JTgzJUJEJUU2JUFGJTk0JUU4JUJFJTgz\">引导功能比较</span>），因此我们对其安装并配置，不同的引导系统，其操作不一样：</p>\n<ul>\n<li>\n<p><strong>BIOS/MBR</strong></p>\n<p>1、安装  <code>grub</code> ：</p>\n<pre><code>pacman -S grub\n</code></pre>\n<p>2、部署  <code>grub</code> ：</p>\n<pre><code>grub-install --target=i386-pc /dev/sdx （sdx为要安装 GRUB 的磁盘，注意不是分区）\n</code></pre>\n</li>\n<li>\n<p><strong>UEFI/GPT</strong></p>\n<p>1、安装  <code>grub</code>  和  <code>efibootmgr</code> ：</p>\n<pre><code>pacman -S grub efibootmgr\n</code></pre>\n<p>2、部署  <code>grub</code> ：</p>\n<pre><code>grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB （这里的 esp 替换成挂载点）\n</code></pre>\n<p>像在这里，那就是：</p>\n<pre><code>grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB\n</code></pre>\n</li>\n</ul>\n<p><strong>最后，不管是哪个引导方式，都执行第三步：</strong></p>\n<p>3、生成配置文件：</p>\n<pre><code>grub-mkconfig -o /boot/grub/grub.cfg\n</code></pre>\n<p>执行后，最后显示  <code>done</code>  即完成操作。</p>\n<p><strong>note：这一步是至关重要的一步，请检查是否正确安装好引导加载程序后再重新启动，否则下次重启后将无法正常进入系统。</strong></p>\n<h2 id=\"重启\"><a class=\"anchor\" href=\"#重启\">#</a> 重启</h2>\n<p>最最最后，你需要进行重启来启动已经安装好的系统。</p>\n<p>1、输入以下命令退出 chroot 环境：</p>\n<pre><code>exit\n</code></pre>\n<p>2、手动取消挂载的分区（这有助于发现任何「繁忙」的分区）：</p>\n<p><strong>如果挂载了  <code>/mnt/boot</code> ，先  <code>umount -r /mnt/boot</code> ，再  <code>umount -r /mnt</code> ，否则直接  <code>umount /mnt</code> 。</strong></p>\n<pre><code>umount -r /mnt/boot\numount -r /mnt\n</code></pre>\n<p>3、执行重启：</p>\n<pre><code>reboot\n</code></pre>\n<h2 id=\"other\"><a class=\"anchor\" href=\"#other\">#</a> Other</h2>\n<p>另外一些比较详细的安装教程：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNobGludXhzdHVkaW8uZ2l0aHViLmlvL0FyY2hMaW51eFR1dG9yaWFsLyMvP2lkPWFyY2gtbGludXgtJUU1JUFFJTg5JUU4JUEzJTg1JUU0JUJEJUJGJUU3JTk0JUE4JUU2JTk1JTk5JUU3JUE4JThCLWFyY2h0dXRvcmlhbC1hcmNoLWxpbnV4LXN0dWRpbw==\">Arch Linux 安装使用教程</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlzZWF0b3IuY29tLzIwMTcvMDUvMTcvYXJjaF9pbnN0YWxsLw==\">以官方 Wiki 的方式安装 ArchLinux</span></p>\n",
            "tags": [
                "history",
                "Linux"
            ]
        }
    ]
}